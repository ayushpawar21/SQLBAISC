----[Stocky HotFix Version]=202
--DELETE FROM Versioncontrol WHERE Hotfixid='202'
--INSERT INTO VersionControl(HotFixId,VersionNo,FixType,FixedOn,HotFixReleasedOn,VersionReleasedOn,ReplacedOn,ChangesDone) 
--VALUES('202','2.0.0.5','D','2017-11-07','2017-11-07','2017-11-07',CONVERT(VARCHAR(11),GETDATE()),'LOREAL CPD;Major:- Oct 2017 Changes')
--GO
IF NOT EXISTS(SELECT A.NAME FROM SYSOBJECTS A INNER JOIN SYSCOLUMNS B ON A.ID=B.ID WHERE 
A.NAME='CRDBNoteAdjustment' AND B.NAME='InvRcpNo' AND A.Xtype='U')
BEGIN
	ALTER TABLE CRDBNoteAdjustment ADD InvRcpNo NVARCHAR(50) 
	CONSTRAINT DF_CRDBNoteAdjustment_InvRcpNo DEFAULT '' WITH VALUES
END
GO
--IF NOT EXISTS(SELECT A.NAME FROM SYSOBJECTS A INNER JOIN SYSCOLUMNS B ON A.ID=B.ID WHERE 
--A.NAME='CRDBNoteAdjustment' AND B.NAME='UploadFlag' AND A.Xtype='U')
--BEGIN
--	ALTER TABLE CRDBNoteAdjustment ADD UploadFlag NVARCHAR(50) 
--	CONSTRAINT DF_CRDBNoteAdjustment_UploadFlag DEFAULT 0 WITH VALUES
--END
--GO
IF NOT EXISTS (SELECT * FROM CoaMaster WHERE AcName = 'Purchase Discount Allowed')
BEGIN
	DECLARE @CoaId		AS INT
	DECLARE @MaxCoaId	AS INT
	DECLARE @AccCode	AS VARCHAR(200)
	
	SELECT @MaxCoaId = ISNULL((MAX(CoaId)),1) FROM COAMaster WHERE AcLevel = 4 AND MainGroup = 4
	SELECT @CoaId = ISNULL((MAX(CoaId)+1),1) FROM COAMaster WITH (NOLOCK)
	SELECT @AccCode = ISNULL(AcCode+1,'4110001') FROM COAMaster WITH (NOLOCK) WHERE AcLevel = 4 AND MainGroup = 4 AND CoaId = @MaxCoaId
		      
	INSERT INTO COAMaster (CoaId,AcCode,AcName,AcLevel,MainGroup,Status,Availability,LastModBy,LastModDate,AuthId,AuthDate)
	SELECT @CoaId,@AccCode,'Purchase Discount Allowed',4,4,0,1,1,CONVERT(NVARCHAR(10),GETDATE(),121),1,CONVERT(NVARCHAR(10),GETDATE(),121)

	UPDATE Counters SET CurrValue = @CoaId WHERE TabName = 'CoaMaster' AND FldName = 'CoaId'
END
GO
IF NOT EXISTS (SELECT * FROM CoaMaster WHERE AcName = 'Sales Account for All Discounts')
BEGIN
	DECLARE @CoaId AS INT
	DECLARE @MaxCoaId AS INT
	DECLARE @AccCode AS VARCHAR(200)
	
	SELECT @MaxCoaId = ISNULL((MAX(CoaId)),1) from COAMaster WHERE AcLevel = 4 AND MainGroup = 3
	SELECT @CoaId = ISNULL((MAX(CoaId)+1),1) FROM COAMaster WITH (NOLOCK)
	SELECT @AccCode = ISNULL(AcCode+1,'3110001') FROM COAMaster WITH (NOLOCK) WHERE AcLevel = 4 AND MainGroup = 3 AND CoaId = @MaxCoaId
		      
	INSERT INTO COAMaster (CoaId,AcCode,AcName,AcLevel,MainGroup,Status,Availability,LastModBy,LastModDate,AuthId,AuthDate)
	SELECT @CoaId,@AccCode,'Sales Account for All Discounts',4,3,0,1,1,CONVERT(NVARCHAR(10),GETDATE(),121),1,CONVERT(NVARCHAR(10),GETDATE(),121)

	UPDATE Counters SET CurrValue = @CoaId WHERE TabName = 'CoaMaster' AND FldName = 'CoaId'
END
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='U' AND NAME='TempVoucherHeader')
DROP TABLE TempVoucherHeader
GO
CREATE TABLE [dbo].[TempVoucherHeader](
	[Account Code] [nvarchar](75) NULL,
	[Account Name] [nvarchar](128) NULL,
	[Account Level] [nvarchar](100) NULL,
	[Main Group] [nvarchar](75) NULL,
	[Sub Group] [nvarchar](128) NULL,
	[Account Group] [nvarchar](128) NULL,
	[TinNumber] [varchar](100) NULL
) ON [PRIMARY]
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='U' AND NAME='TempVoucherDetails')
DROP TABLE TempVoucherDetails
GO
CREATE TABLE [dbo].[TempVoucherDetails](
	[Voucher No] [nvarchar](25) NULL,
	[Voucher Date] [datetime] NULL,
	[Account Code] [nvarchar](100) NULL,
	[Type Cr /Db] [nvarchar](25) NULL,
	[Amount] [numeric](18, 2) NULL,
	[Narration] [nvarchar](203) NULL,
	[VocType] [nvarchar](20) NULL,
	[AccCode] [varchar](200) NULL,
	[Invoice_Number] [varchar](100) NULL,
	[Invoice_Date] [varchar](20) NULL,
	[Party_Id] [varchar](100) NULL,
	[Party_Name] [varchar](200) NULL
) ON [PRIMARY]
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='U' AND name='TaxAccountConfig')
DROP TABLE TaxAccountConfig
GO
CREATE TABLE [dbo].[TaxAccountConfig](
	[TaxId] [int] NULL,
	[TaxPerc] [numeric](16, 2) NULL,
	[AcName] [varchar](200) NULL,
	[Accode] [varchar](50) NULL,
	[TaxType] [varchar](20) NULL,
	[AcLevel] [int] NULL,
	[maingroup] [int] NULL
) ON [PRIMARY]
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='P' AND name='Proc_COACreation')
DROP PROCEDURE Proc_COACreation
GO
CREATE PROCEDURE Proc_COACreation
AS
BEGIN
	DECLARE @Prdid AS INT
	DECLARE @Prdbatid AS INT
    DELETE FROM ProductBatchTaxPercent
	DECLARE Cur_CalculateTax CURSOR 
	FOR SELECT DISTINCT PrdId,PrdBatID FROM productbatch where Status=1
	OPEN Cur_CalculateTax 
	FETCH NEXT FROM Cur_CalculateTax INTO @Prdid,@Prdbatid    
	WHILE @@FETCH_STATUS = 0        
	BEGIN   
		EXEC Proc_TaxCalCulation @Prdid,@Prdbatid 
	FETCH NEXT FROM Cur_CalculateTax INTO @Prdid,@Prdbatid          
	END        
	CLOSE Cur_CalculateTax        
	DEALLOCATE Cur_CalculateTax 
	
	DELETE FROM TaxAccountConfig
	SELECT MAX(Cast(Accode as Numeric(36,0))) as Accode INTO #T 
	FROM COAMaster WHERE AcCode like (SELECT SUBSTRING(accode,1,3)+'%' from coamaster where ACNAME ='output tax')
	SELECT MAX(Cast(Accode as Numeric(36,0))) as Accode INTO #T1 
	FROM COAMaster WHERE AcCode like (SELECT SUBSTRING(accode,1,3)+'%' from coamaster where ACNAME ='input tax')
	SELECT MAX(Cast(Accode as Numeric(36,0))) as Accode INTO #T2 
	FROM COAMaster WHERE AcCode like (SELECT SUBSTRING(accode,1,3)+'%' from coamaster where ACNAME ='Sales Accounts')
	SELECT MAX(Cast(Accode as Numeric(36,0))) as Accode INTO #T3 
	FROM COAMaster WHERE AcCode like (SELECT SUBSTRING(accode,1,3)+'%' from coamaster where ACNAME ='Purchase Accounts')
	SELECT DISTINCT S.taxid,taxperc,REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%'+' OutPut' as AcName,
	'Sales Account '+REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%' as AcName1 ,
	'Sales Return Account '+REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%' as AcName2
	INTO #Sales
	FROM SalesInvoiceProductTax S
	INNER JOIN TaxConfiguration T on S.TaxId=T.TaxId and TaxableAmount>0
	SELECT DISTINCT S.taxid,taxperc,REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%'+' InPut'as AcName,
	'Purchase Account '+REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%'as AcName1,
	'Purchase Return Account '+REPLACE (T.TaxName,'%','')+ CONVERT(NVARCHAR(9),CAST(TaxPerc AS NUMERIC(18,1))) +'%'as AcName2
	INTO #Purchase
	from PurchaseReceiptProductTax S
	INNER JOIN TaxConfiguration T on S.TaxId=T.TaxId and TaxableAmount>0
	SELECT TaxId,TaxPerc,AcName,Accode,TaxType,
	AcLevel,maingroup
	INTO #TaxCoaMaster
	FROM (
		SELECT TaxId,TaxPerc,AcName,Accode+ROW_NUMBER() OVER(Order by Taxid,AcName,Taxperc) as Accode, 'OPTax' as TaxType,
		4  as AcLevel,1 as maingroup 
		FROM #Sales
		CROSS JOIN #T A
		UNION ALL
		SELECT TaxId,TaxPerc,AcName,Accode+ROW_NUMBER() OVER(Order by Taxid,AcName,Taxperc) as Accode, 'INTax' as TaxType ,
		4  as AcLevel,2 as maingroup 
		FROM #Purchase
		CROSS JOIN #T1 A
		UNION ALL
		SELECT TaxId,TaxPerc,AcName,Accode +ROW_NUMBER() OVER(Order by Taxid,AcName,Taxperc) as Accode,TaxType,
		4  as AcLevel,3 as maingroup  
		FROM 
		(
			SELECT TaxId,TaxPerc,AcName1 as AcName,Accode, 'SAOPTax' as TaxType 
			FROM #Sales
			CROSS JOIN #T2 A
			UNION
			SELECT TaxId,TaxPerc,AcName2 as AcName,Accode,'SROPTax' as TaxType 
			FROM #Sales
			CROSS JOIN #T2 A
		)X	
		UNION ALL
		SELECT TaxId,TaxPerc,AcName,Accode+ROW_NUMBER() OVER(Order by Taxid,AcName,Taxperc) as Accode,TaxType,
		4  as AcLevel,4 as maingroup
		FROM(
		SELECT TaxId,TaxPerc,AcName1 as AcName,Accode,'PAIPTax' as TaxType  FROM
		#Purchase
		CROSS JOIN #T3 A
		UNION 
		SELECT TaxId,TaxPerc,AcName2 as AcName,Accode,'PRIPTax' as TaxType 
		FROM #Purchase
		CROSS JOIN #T3 A) X
	)Y 
	INSERT INTO TaxAccountConfig(TaxId,TaxPerc,AcName,Accode,TaxType,
	AcLevel,maingroup)
	SELECT TaxId,TaxPerc,A.AcName,B.Accode,TaxType,
	B.AcLevel,B.maingroup
	FROM #TaxCoaMaster A INNER JOIN Coamaster B ON A.AcName=B.AcName
	
	DELETE A FROM #TaxCoaMaster A INNER JOIN Coamaster B ON A.AcName=B.AcName
	DECLARE @MaxId AS NUMERIC(36,0)
	SELECT @MaxId=ISNULL(MAX(CoaId ),0) FROM COAMaster
	INSERT INTO Coamaster(CoaId,AcCode,AcName,AcLevel,MainGroup,Status,Availability,LastModBy,
	LastModDate,AuthId,AuthDate)
	SELECT @MaxId+ROW_NUMBER() OVER(Order by Taxid,AcName,Taxperc,TaxType) as CoaId,Accode,AcName,AcLevel,MainGroup,0,1,1,'2013-10-01',1,'2013-10-01'  FROM #TaxCoaMaster 
	
	INSERT INTO TaxAccountConfig(TaxId,TaxPerc,AcName,Accode,TaxType,
	AcLevel,maingroup)
	SELECT TaxId,TaxPerc,AcName,Accode,TaxType,
	AcLevel,maingroup FROM #TaxCoaMaster 
END
GO
IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE name='EXPORT_TALLY_PRICEDETAILS' AND XTYPE='U')
BEGIN
CREATE TABLE [dbo].[EXPORT_TALLY_PRICEDETAILS](
	[PRDID] [int] NULL,
	[PRDBATID] [int] NULL,
	[MRP] [numeric](18, 6) NULL,
	[ListPrice] [numeric](18, 6) NULL,
	[SellingRate] [numeric](18, 6) NULL,
	[EFFECTIVEDATE] [datetime] NULL,
	[TAXGROUPID] [int] NULL,
	[TALLYEPORTFLAG] [int] NULL
) ON [PRIMARY]
END
GO
IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE name='TallyRtrVoucher' AND XTYPE='U')
BEGIN
CREATE TABLE TallyRtrVoucher(
	[TaxType] [nvarchar](50) NULL,
	[RtrTaxableType] [int] NULL
) ON [PRIMARY]
END
GO
IF  EXISTS (SELECT * FROM SYSOBJECTS WHERE name='TempTallyVoucher' AND XTYPE='U')
DROP TABLE TempTallyVoucher
GO
CREATE TABLE TempTallyVoucher
(
	[Voucher] [varchar](100) NULL
)
GO
IF  EXISTS (SELECT * FROM SYSOBJECTS WHERE name='TempTaxTallyVoucher' AND XTYPE='U')
DROP TABLE TempTaxTallyVoucher
GO
CREATE TABLE TempTaxTallyVoucher
(
	[TaxCode] [varchar](200) NULL
)
GO
IF  EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Export_BtnVoucher' AND XTYPE='U')
DROP TABLE Export_BtnVoucher
GO
CREATE TABLE Export_BtnVoucher(
	[WithInv] [varchar](25) NULL,
	[Withoutinv] [varchar](25) NULL,
	[Chkmaster] [int] NULL,
	[ChkProduct] [int] NULL
)
GO
IF NOT EXISTS (SELECT * FROM SYSOBJECTS WHERE name='TallyVoucherType' AND XTYPE='U')
CREATE TABLE TallyVoucherType
(
	[Slno] [int] NULL,
	[Voucher] [varchar](200) NULL
)
GO
DELETE FROM TallyRtrVoucher
INSERT INTO TallyRtrVoucher
SELECT 'With Tax',0 UNION
SELECT 'WithOut Tax',1
GO
DELETE FROM TempTallyVoucher
INSERT INTO TempTallyVoucher
SELECT 'Contra' UNION
SELECT 'Credit Note' UNION
SELECT 'Debit' Note UNION
SELECT 'Journal' UNION
SELECT 'Memo' UNION
SELECT 'Payment' UNION
SELECT 'Purchase' UNION
SELECT 'Purchase Return' UNION
SELECT 'Receipt' UNION
SELECT 'Sales' UNION
SELECT 'Sales Return' UNION
SELECT 'StockTransfer' 
GO
IF exists (SELECT * FROM Sysobjects where name='Proc_ExportTaxTypeVoucher' and XTYPE='P')
DROP PROCEDURE Proc_ExportTaxTypeVoucher
GO
CREATE PROCEDURE [dbo].[Proc_ExportTaxTypeVoucher]
AS
/***************************************************************************************************
* FUNCTION	: Proc_ExportTaxTypeVoucher
* PURPOSE	: Returns the Tax details IN EXCEL
* NOTES		:
* CREATED	: Gopikrishnan.R - 04.02.2013
* MODIFIED
* DATE      AUTHOR     DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
EXEC Proc_COACreation
delete from TempTaxTallyVoucher
Insert into TempTaxTallyVoucher
select Taxcode from (
--select Distinct 1 as Slno,'Purchase Account '+ TaxCode+ ' Input'+ '-'+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'+' for '+ Group_Caption as TaxCode
--from PurchaseReceiptProductTax  SIPT (NOLOCK)
--INNER JOIN PurchaseReceiptProduct SIP (NOLOCK) ON SIPT.PrdSlNo=SIPT.PrdSlNo
--INNER JOIN Tbl_GR_Build_PH TGL (NOLOCK) ON TGL.PrdId=SIP.PRDID
--INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId AND SIPT.TaxId in (2,3)
--where TaxableAmount>0 
--UNION
--select Distinct 2 as Slno,'Sales Account '+ TaxCode+ ' Output'+ '-'+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'+' for '+ Group_Caption as TaxCode
-- from salesinvoiceproducttax  SIPT (NOLOCK)
--INNER JOIN SalesInvoiceProduct SIP (NOLOCK) ON SIPT.PrdSlNo=SIPT.PrdSlNo
--INNER JOIN Tbl_GR_Build_PH TGL (NOLOCK) ON TGL.PrdId=SIP.PRDID
--INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId AND SIPT.TaxId in (2,3)
--where TaxableAmount>0 
--UNION
--select Distinct 3 as slno,'Purchase Return Account '+ TaxCode+ ' Input'+ '-'+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'+' for '+ Group_Caption as TaxCode
-- from ReturnProducttax  SIPT (NOLOCK)
--INNER JOIN ReturnProduct SIP (NOLOCK) ON SIPT.PrdSlNo=SIPT.PrdSlNo
--INNER JOIN Tbl_GR_Build_PH TGL (NOLOCK) ON TGL.PrdId=SIP.PRDID
--INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId AND SIPT.TaxId in (2,3)
--where TaxableAmt>0 
--UNION
--select Distinct 4 as Slno,'Sales Return Account '+ TaxCode+ ' Output'+ '-'+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'+' for '+ Group_Caption as TaxCode
-- from ReturnProducttax  SIPT (NOLOCK)
--INNER JOIN ReturnProduct SIP (NOLOCK) ON SIPT.PrdSlNo=SIPT.PrdSlNo
--INNER JOIN Tbl_GR_Build_PH TGL (NOLOCK) ON TGL.PrdId=SIP.PRDID
--INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId AND SIPT.TaxId in (2,3)
--where TaxableAmt>0 
--UNION
select distinct 7 AS Slno,TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxCode
from SalesinvoiceproductTax SIPT INNER JOIN Salesinvoice SI ON SI.SALID=SIPT.SALID
Inner Join TaxConfiguration Tg (NOLOCK) on TG.Taxid=SIPT.Taxid 
where SIPT.TaxableAmount>0
UNION
select distinct 8 AS Slno,TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxCode 
from Returnproducttax SIPT (NOLOCK) inner Join  ReturnHeader SI (NOLOCK) ON SIPT.Returnid=SI.Returnid
Inner Join TaxConfiguration Tg (NOLOCK) on TG.Taxid=SIPT.Taxid 
Where  SIPT.TaxableAmt>0 Group By Tg.Taxid,sipt.Taxperc,TaxCode
UNION
select distinct 5 as Slno,TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxCode
from PurchaseReceiptProductTax SIPT (NOLOCK) inner Join  PurchaseReceipt SI (NOLOCK) ON SIPT.Purrcptid=SI.Purrcptid
Inner Join TaxConfiguration Tg (NOLOCK) on TG.Taxid=SIPT.Taxid 
Where  SIPT.TaxableAmount>0
UNION
select distinct 6 as slno,TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxCode
from PurchaseReturnProductTax SIPT (NOLOCK) inner Join  PurchaseReturn SI (NOLOCK) ON SIPT.Purretid=SI.Purretid 
Inner Join TaxConfiguration Tg (NOLOCK) on TG.Taxid=SIPT.Taxid 
Where SIPT.TaxableAmount>0) A Order By Slno
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ExportVoucherTaxExcel' AND XTYPE='TF')
DROP FUNCTION Fn_ExportVoucherTaxExcel
GO
CREATE FUNCTION [dbo].[Fn_ExportVoucherTaxExcel]()
RETURNS @ExportVoucherTaxExcel TABLE
(
	[Tally Sales and Tax Name] Varchar(200), 
	[Sales and TaxCode] Varchar(200)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ExportVoucherTaxExcel
* PURPOSE	: Returns the Tax details IN EXCEL
* NOTES		:
* CREATED	: Gopikrishnan.R - 04.02.2013
* MODIFIED
* DATE       AUTHOR       DESCRIPTION
* 21/02/2012 Gopikrishnan  Nolock is added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
INSERT INTO @ExportVoucherTaxExcel
SELECT DISTINCT  '' AS [Tally Sales and Tax Name], TaxCode AS [Sales and TaxCode] from TempTaxTallyVoucher (NOLOCK)
Return
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ExportVoucherProductExcel' AND XTYPE='TF')
DROP FUNCTION Fn_ExportVoucherProductExcel
GO
CREATE Function [dbo].[Fn_ExportVoucherProductExcel]()
RETURNS @ExportVoucherProductExcel TABLE
(
    Prdname Varchar(200),
    Prdccode    varchar(200)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ExportVoucherProductExcel
* PURPOSE	: Returns the Product Master in Mapping Excel for Tally
* NOTES		:
* CREATED	: GOPIKRISHNAN
* MODIFIED
* DATE          AUTHOR        DESCRIPTION
* 21-02-2013  GOPIKRISHNAN    Nolock is added   
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
	Insert into @ExportVoucherProductExcel
	select Prdname+'~'+PrdCCode,PrdCCode from Product (NOLOCK) order by Prdid
	RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ExportVoucherXmlExcel' AND XTYPE='TF')
DROP  FUNCTION Fn_ExportVoucherXmlExcel
GO
CREATE Function [dbo].[Fn_ExportVoucherXmlExcel]()
RETURNS @ExportVoucherXmlExcel TABLE
(
    Prdname Varchar(200)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ExportVoucherXmlExcel
* PURPOSE	: Returns the Voucher Type to Excel
* NOTES		:
* CREATED	: Gopikrishnan
* MODIFIED
* DATE            AUTHOR        DESCRIPTION
* 21-02-2013    Gopikrishnan   StockTransfer is added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
 Insert into @ExportVoucherXmlExcel
  select 'Contra'
  Union 
  select 'Payment'
  Union 
  select 'Receipt'
  Union
  select 'Journal' 
  Union
  select 'Sales' 
  Union
  select 'Sales With Tax' 
  Union
  select 'Sales Return'
  Union
  select 'Sales Return With Tax'
  Union
  select 'Sales Return WithOut Tax'
  Union
  select 'Purchase'
  Union
  select 'Purchase Return'
  Union
  select 'Credit Note'
  Union
  Select 'Debit Note'
  Union
  Select 'StockTransfer'
 RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ProductPriceXmlExport' AND XTYPE='TF')
DROP  FUNCTION Fn_ProductPriceXmlExport
GO
CREATE Function Fn_ProductPriceXmlExport ()
RETURNS @ProductPriceXmlExport TABLE
(
    ProductCode    varchar(200),
	StandardCost Numeric(18,4),
	SellingPrice Numeric(18,4),
	EffectiveDate varchar(10)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ProductPriceXmlExport
* PURPOSE	: Returns the Product Price 
* NOTES		:
* CREATED	: Karthick - 16.01.2013
* MODIFIED
* DATE      AUTHOR         DESCRIPTION
*21/02/2013 Gopikrishnan   Nolock is added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
  Insert into @ProductPriceXmlExport
 SELECT PrdCCode,PBD1.PrdBatDetailValue,PBD.PrdBatDetailValue,MnfDate
  from  Product P WITH (NOLOCK)
  Inner Join Tbl_GR_Build_PH TG WITH (NOLOCK) ON TG.Prdid=P.prdid
  Inner Join ProductBatch PB WITH (NOLOCK) on PB.PrdId=P.PrdId
  Inner join ProductbatchDetails PBD WITH (NOLOCK) on pbd.Prdbatid=PB.PrdBatId and PBD.DefaultPrice=1 
  Inner Join BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
  Inner join ProductbatchDetails PBD1 WITH (NOLOCK) on pbd1.Prdbatid=PB.PrdBatId and PBD1.DefaultPrice=1 
  Inner Join BatchCreation BC1 WITH (NOLOCK) On BC1.SlNo=PBD1.SLNo AND BC1.ListPrice=1
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_LocationXmlExport' AND XTYPE='TF')
DROP  FUNCTION Fn_LocationXmlExport
GO
CREATE Function Fn_LocationXmlExport()
RETURNS @LocationXmlExport TABLE
(
	LocationCode			VARCHAR(200),
	LocationName			VARCHAR(200),
	LocationAddress			        VARCHAR(200),
	DefaultLocation			VARCHAR(10)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_LocationXmlExport
* PURPOSE	: Returns the Location Details
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE      AUTHOR     DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
INSERT INTO @LocationXmlExport
Select LcnCode as LocationCode,LcnName as LocationName,LcnAddress1 as LocationAddress,
Case DefaultLocation When 1 then 'Yes' else 'No' End as DefaultLocation  from Location (NOLOCK)
Where Availability=1
Order by Lcnid
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_VoucherMasterXml' AND XTYPE='TF')
DROP  FUNCTION Fn_VoucherMasterXml
GO
CREATE Function Fn_VoucherMasterXml()
RETURNS @VoucherMasterXml TABLE
(
	CoaId			BigInt,
	Name			Nvarchar(400),
	Alias			Nvarchar(100),
	GroupName		Nvarchar(400)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherMasterXml
* PURPOSE	: Returns the Coa Master  and Bank Master data
* NOTES		:
* CREATED	: Gopikrishnan.R - 21.02.2013
* MODIFIED
* DATE      AUTHOR     DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
INSERT INTO @VoucherMasterXml
SELECT  AC.CoaId,AC.AcName AS 'Name', Ac.AcCode AS 'Alias',AC1.AcName AS 'GroupName'FROM COAMaster 
AC INNER JOIN  COAMaster AC1 WITH (NOLOCK)ON AC1.AcCode LIKE CAST(LEFT(AC.AcCode,3) AS NVARCHAR(3))+'0000' 
Union 
select 999999 as Coaid,Bnkname as 'Name',Bnkcode as Alias,'Bank Accounts' as GroupNAME FROM BANK WITH (NOLOCK)
RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_VoucherExportNode1')
DROP FUNCTION Fn_VoucherExportNode1
GO
--SELECT * FROM Fn_VoucherExportNode1('SALES','SAL1702915','PM0S01751700417')
--SELECT * FROM Fn_VoucherExportNode1('SALES','SAL1710487','N1703809')
CREATE FUNCTION [Fn_VoucherExportNode1]    
(    
 @sVocType  AS VARCHAR(200),    
 @PiValue  AS VARCHAR(200),    
 @VoucherRefNo AS VARCHAR(200)    
)    
RETURNS @VoucherExportNode1 TABLE    
(    
 LedgerName VARCHAR(200),    
 Amount  NUMERIC(18,2),    
 Coaid  INT    
)    
AS    
/***************************************************************************************************    
* FUNCTION : Fn_VoucherExportNode1    
* PURPOSE : Returns the Account Details of Voucher    
* NOTES  :    
* CREATED : Gopikrishnan.R - 12.12.2012    
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 20/02/2013	  Gopikrishnan												Location Transfer is export to Tally
* 21/03/2013      Gopikrishnan												Cancelled Bill Details flow to Tally
* 15/05/2013      Gopikrishnan												To split cash and Invoice discount Seperately
* 03/09/2013      Gopikrishnan												Rtrname is combined with Cmprtrcode in PartyLedgerName
* 08/01/2014      Gopi														NEFT (Bank Name Conversion Included) for Receipt
* 02/11/2017      Murugan.R		CR				CCRSTAML1028				IDT Transaction Added
**************************************************************************************************/    
BEGIN    
DECLARE @A AS INT    
DECLARE @Amt1 NUMERIC(18,2)    
DECLARE @Amt2 NUMERIC(18,2)    
DECLARE @Diff NUMERIC(18,2) 

DECLARE @TaxPercent Table  
(
  RefId BIGINT,
  Prdslno INT,
  TaxPerc Numeric(18,2)	,
   TaxableAmount Numeric(18,4)
)  

DECLARE @IDTTaxPercent Table  
(
  RefId Varchar(50),
  Prdslno INT,
  TaxPerc Numeric(18,2)	
) 

DELETE FROM @TaxPercent
   
If UPPER(@sVocType)='RECEIPT'     
BEGIN    
 INSERT INTO @VoucherExportNode1    
  SELECT isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)    
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks not like '%Cheque%' AND Remarks not like '%NEFT%'  AND Remarks not like '%RTGS%' And AutoGen=1    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue     
  Union ---Added by Gopi at 08-01-2014    
  SELECT Isnull(isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),B.BnkName),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)     
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks  like '%Cheque%' AND Remarks not like '%NEFT%' AND Remarks not like '%RTGS%' And AutoGen=1    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid     
  Left Outer join BankBranch BB (NOLOCK) ON BB.CoaId=VDT.COAID and COA.AcName=BB.BnkBrName    
  Left Outer join Bank B (NOLOCK) ON B.BnkId=BB.BnkId where  VDT.VocRefNo=@PiValue     
  Union     
  SELECT Isnull(isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),B.BnkName),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)     
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks  not like '%Cheque%' AND Remarks  not like '%NEFT%' AND Remarks  like '%RTGS%' And AutoGen=1    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid     
  Left Outer join BankBranch BB (NOLOCK) ON BB.CoaId=VDT.COAID and COA.AcName=BB.BnkBrName    
  Left Outer join Bank B (NOLOCK) ON B.BnkId=BB.BnkId where  VDT.VocRefNo=@PiValue     
  Union     
  SELECT Isnull(isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),B.BnkName),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)     
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks  not like '%Cheque%' AND Remarks  like '%NEFT%' AND Remarks not like '%RTGS%' And AutoGen=1    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid     
  Left Outer join BankBranch BB (NOLOCK) ON BB.CoaId=VDT.COAID and COA.AcName=BB.BnkBrName    
  Left Outer join Bank B (NOLOCK) ON B.BnkId=BB.BnkId where  VDT.VocRefNo=@PiValue     
        Union     
  SELECT isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK) INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND AutoGen=0    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue     
END    
IF UPPER(@sVocType)='PAYMENT'     
BEGIN    
IF UPPER(@VoucherRefNo)<>'MANUAL ENTRY'    
BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT COA.AcName AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)     
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks not like '%Cheque%' AND Remarks Not like '%RTGS%' AND Remarks Not like '%DD%'    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue     
  Union    
  SELECT isnull(CAST(B.BnkName AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK) INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks  Like '%RTGS%'     
  Left Outer join BankBranch BB (NOLOCK) ON BB.CoaId=VDT.COAID and COA.AcName=BB.BnkBrName    
  Left Outer join Bank B (NOLOCK) ON B.BnkId=BB.BnkId where  VDT.VocRefNo=@PiValue      
  Union    
  SELECT isnull(CAST(B.BnkName AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK) INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo AND Remarks  like '%DD%'    
  Left Outer join BankBranch BB (NOLOCK) ON BB.CoaId=VDT.COAID and COA.AcName=BB.BnkBrName    
  Left Outer join Bank B (NOLOCK) ON B.BnkId=BB.BnkId where  VDT.VocRefNo=@PiValue    
END    
IF UPPER(@VoucherRefNo)='MANUAL ENTRY'    
BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK)     
  INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Inner Join StdVocMaster VDT1 (NOLOCK) ON VDT1.VocRefNo=VDT.VocRefNo    
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue       
END    
END    
IF UPPER(@sVocType)='JOURNAL'    
BEGIN    
IF UPPER(@VoucherRefNo)<>'MANUAL ENTRY'    
BEGIN    
INSERT INTO @VoucherExportNode1    
  SELECT isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK) INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue     
  --if exists (select 'A' from @VoucherExportNode1 A INNER JOIN Retailer R (NOLOCK) on R.coaid=A.coaid having COUNT(A.coaid)>1)    
  --BEGIN    
  --Update A set Coaid=0  from @VoucherExportNode1  A inner join CoaMaster COA (NOLOCK) ON A.CoaId=COA.CoaId     
  --INNER JOIN StdVocDetails VDT (NOLOCK) ON VDT.CoaId=COA.CoaId     
  --INNER JOIN StdVocMaster VH (NOLOCK) ON VH.VocRefNo=VDT.VocRefNo AND Remarks LIKE '%POSTED FROM DEBIT NOTE%' AND VDT.VocRefNo=@PiValue and A.Amount>0    
  --END    
END    
IF UPPER(@VoucherRefNo)='MANUAL ENTRY'    
BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,    
  (CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
  FROM StdvocDetails VDT (NOLOCK) INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId     
  Left Outer join  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue     
END    
END    
IF UPPER(@PiValue)<>'NULL'    
BEGIN    
IF UPPER(@sVocType)='SALES'     
BEGIN    
    
--SELECT * FROM dbo.Fn_VoucherExportNode1('Sales','SAL1605400','AM1600001')Order By Amount     
    
		INSERT INTO @VoucherExportNode1    
		SELECT DISTINCT ISNULL(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,    
		(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
		FROM StdvocDetails VDT (NOLOCK)     
		INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId NOT IN (SELECT Outputtaxid from TaxConfiguration (NOLOCK))     
		LEFT OUTER JOIN  Retailer R (NOLOCK) ON R.coaid=Coa.coaid     
		WHERE VDT.VocRefNo=@PiValue   and 
		AcName NOT IN(
			'Scheme Discount Received','Discount Allowed','Scheme Discount Allowed','Distributor Discount Allowed',
		'Cash Discount Allowed','Special Discount Allowed','Rate Diff. Discount Allowed'
		,'RD Discount','Vending Discount','Key A/c Discount')
		---SUM the total Discounts
		INSERT INTO @VoucherExportNode1    
		SELECT 'Sales Discounts' AS LedgerName,    
		(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(SUM(VDT.Amount),0)) WHEN 2 THEN ISNULL((SUM(VDT.Amount)),0)END) AS Amount,0 as CoaId    
		FROM StdvocDetails VDT (NOLOCK)     
		INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId NOT IN (SELECT Outputtaxid from TaxConfiguration (NOLOCK))     
		LEFT OUTER JOIN  Retailer R (NOLOCK) ON R.coaid=Coa.coaid     
		WHERE VDT.VocRefNo=@PiValue   and 
		AcName  IN(
			'Scheme Discount Received','Discount Allowed','Scheme Discount Allowed','Distributor Discount Allowed',
		'Cash Discount Allowed','Special Discount Allowed','Rate Diff. Discount Allowed'
		,'RD Discount','Vending Discount','Key A/c Discount') 
		GROUP BY  VDT.DebitCredit
		  

		DELETE FROM @VoucherExportNode1 where LedgerName='Sales Account'  


		INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc, TaxableAmount) 
		SELECT A.SalId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc ,SUM(DISTINCT TaxableAmount)  as TaxableAmount
		FROM SalesInvoiceProductTax A(NOLOCK)     
		INNER JOIN SalesInvoice B(NOLOCK) ON A.SalId = B.SalId     
		WHERE B.SalInvNo = @VoucherRefNo AND A.TaxableAmount > 0      
		GROUP BY A.SalId,A.PrdSlNo  

		INSERT INTO @VoucherExportNode1 
		SELECT LedgerName,SUM(Amount) as Amount,0 as CoaId
		FROM (
				SELECT 
				CASE WHEN VatGst='VAT' THEN
				'Sales Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
				ELSE 
				'Sales Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS LedgerName ,    
				CONVERT(NUMERIC(18,2),SUM(PrdGrossAmount)) AS Amount,SIP.Slno,0 as Coaid
				--CONVERT(NUMERIC(18,2),SUM(TaxableAmount)) AS Amount,SIP.Slno,0 as Coaid  
				FROM SalesInvoice SI (NOLOCK)     
				INNER JOIN SalesInvoiceProduct SIP (NOLOCK) ON SI.SalId=SIP.SalId    
				INNER JOIN @TaxPercent C ON C.RefId=SI.SalId and C.RefId=SIP.SalId and    SIP.Slno=C.Prdslno 
				INNER JOIN StdVocMaster VDT (NOLOCK) on SI.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
				WHERE VDT.VocRefNo= @PiValue    
				AND SI.SalInvNo = @VoucherRefNo
				GROUP BY Taxperc,  SIP.Slno ,VatGst
		) X GROUP BY LedgerName   
  
  
     
 ---Added by Gopikrishnan at 15-05-2013 to split the cash and Invoice Discount to tally    
 DELETE FROM @VoucherExportNode1 WHERE Ledgername='Cash Discount Allowed'    
 IF EXISTS (SELECT Salid FROM SalesInvoice(NOLOCK) WHERE SalInvNo=@VoucherRefNo AND DlvSts>3 GROUP BY Salid HAVING SUM(SalCdAmount+SalInvLvlDisc)>0)    
 BEGIN    
  INSERT INTO @VoucherExportNode1    
  --SELECT 'Cash Discount Allowed' AS LedgerName,-SUM(SalCdAmount+SalInvLvlDisc) AS Amount,0 AS Coaid FROM SalesInvoice(NOLOCK) WHERE SalInvNo=@VoucherRefNo  and DlvSts>3  
   SELECT 'Cash Discount Allowed' AS LedgerName,-SUM(SalInvLvlDisc) AS Amount,0 AS Coaid FROM SalesInvoice(NOLOCK) WHERE SalInvNo=@VoucherRefNo  and DlvSts>3  
 END    
      
 SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1    
 SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('SALES',@PiValue,@VoucherRefNo)    
     
 SELECT @Diff = @Amt1 + @Amt2    
     
 IF @Diff <> 0      
 BEGIN      
  IF(@Diff <= 5  AND  @Diff >=  -5 )    
  BEGIN    
   IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))    
   BEGIN     
       UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')    
   END    
   ELSE    
   BEGIN    
    IF @Diff > 0    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'    
    END    
    ELSE    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'      
    END    
   END    
   DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0    
  END    
 END    
  --If exists (SELECT Salid FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo  and DlvSts>3 Group by Salid Having SUM(SalInvLvlDisc)>0)    
  --begin    
  --INSERT INTO @VoucherExportNode1    
  --Select 'Invoice Discount Allowed' AS LedgerName,-SUM(SalInvLvlDisc) as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts>3    
  --End    
  ---Till Here    
END    
END    
----Added by Gopikrishnan at 21/03/2013 for Cancelled Bill Changes    
IF UPPER(@PiValue)='NULL'    
BEGIN    
If UPPER(@sVocType)='SALES'     
BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT R.CmpRtrCode+ '~' +  R.Rtrname as LedgerName,-(SalNetAmt - ReplacementDiffAmount +CRAdjAmount -DBAdjAmount + OnAccountAmount) as Amount,R.COAID as Coaid  
  from Retailer R (NOLOCK) 
  inner Join SalesInvoice SI (NOLOCK) ON R.RtrId=SI.RtrId and DlvSts=3    
  INNER JOIN CoaMaster COA (NOLOCK) ON COA.CoaId=R.COAID    
  and SalInvNo=@VoucherRefNo    
  
  DELETE FROM @VoucherExportNode1 where LedgerName='Sales Account'  
  
	INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc) 
	SELECT A.SalId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM SalesInvoiceProductTax A(NOLOCK)     
	INNER JOIN SalesInvoice B(NOLOCK) ON A.SalId = B.SalId     
	WHERE B.SalInvNo = @VoucherRefNo AND A.TaxableAmount > 0     and B.dlvsts=3    
	GROUP BY A.SalId,A.PrdSlNo  

	INSERT INTO @VoucherExportNode1 
	SELECT LedgerName,SUM(Amount) as Amount,0 as CoaId
	FROM (
			SELECT 
			CASE WHEN VatGst='VAT' THEN
			'Sales Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'
			ELSE
			'Sales Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS LedgerName,    
			CONVERT(NUMERIC(18,2),SUM(PrdGrossAmount)) AS Amount,SIP.Slno,0 as Coaid 
			FROM SalesInvoice SI (NOLOCK)     
			INNER JOIN SalesInvoiceProduct SIP (NOLOCK) ON SI.SalId=SIP.SalId    
			INNER JOIN @TaxPercent C ON C.RefId=SI.SalId and C.RefId=SIP.SalId and    SIP.Slno=C.Prdslno 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
			WHERE VDT.VocRefNo= @PiValue    and si.dlvsts=3  
			AND SI.SalInvNo = @VoucherRefNo
			GROUP BY Taxperc,  SIP.Slno ,VatGst
	) X GROUP BY LedgerName
  
 
      
  --- Commented and Added by Gopikrishnan at 15-05-2013 to split the cash and Invoice Discount to tally for Cancelled Bills    
  --If exists (SELECT Salid FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3 Group by Salid Having SUM(SalCdAmount+SalInvLvlDiscPer)>0)    
  --begin    
  --INSERT INTO @VoucherExportNode1    
  --Select 'Cash Discount Allowed' AS LedgerName,-SUM(SalCdAmount+SalInvLvlDiscPer) as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3    
  --End    
  If exists (SELECT Salid FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo  and DlvSts=3 Group by Salid Having SUM(SalCdAmount)>0)    
  begin    
  INSERT INTO @VoucherExportNode1    
  Select 'Cash Discount Allowed' AS LedgerName,-SUM(SalCdAmount) as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo  and DlvSts=3    
  End    
  If exists (SELECT Salid FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo  and DlvSts=3 Group by Salid Having SUM(SalInvLvlDisc)>0)    
  begin    
  INSERT INTO @VoucherExportNode1    
  Select 'Invoice Discount Allowed' AS LedgerName,-SUM(SalInvLvlDisc) as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3    
  End    
  --- Till Here    
  If exists (SELECT SalRoundOffamt FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo AND SalRoundOffamt>0 and DlvSts=3)    
  begin    
  INSERT INTO @VoucherExportNode1    
  Select 'Round Off Incomes' AS LedgerName,SalRoundOffamt as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3    
  End    
  If exists (SELECT SalRoundOffamt FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo AND SalRoundOffamt<0 and DlvSts=3)    
  begin    
  INSERT INTO @VoucherExportNode1    
  Select 'Round Off Expenses' AS LedgerName,SalRoundOffamt as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3    
  End    
  If exists (SELECT SalDBDiscAmount FROM SalesInvoice WHERE SalInvNo=@VoucherRefNo AND SalDBDiscAmount>0 and DlvSts=3)    
  begin    
  INSERT INTO @VoucherExportNode1    
  Select 'Distributor Discount Allowed' AS LedgerName,-SalDBDiscAmount as Amount,0 as Coaid from SalesInvoice WHERE SalInvNo=@VoucherRefNo and DlvSts=3    
  End    
END    
END    
If  UPPER(@sVocType)='SALES RETURN'    
BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT * FROM     
  (    
   SELECT   isnull(CAST(R.CmpRtrCode+ '~' +  R.Rtrname AS Varchar(200)),COA.AcName) AS LedgerName,    
   (CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
   FROM StdvocDetails VDT (NOLOCK)     
   INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId NOT IN (SELECT Outputtaxid FROM TaxConfiguration (NOLOCK))    
   LEFT OUTER JOIN  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue 
   AND AcName NOT IN(
			'Scheme Discount Received','Discount Allowed','Scheme Discount Allowed','Distributor Discount Allowed',
		'Cash Discount Allowed','Special Discount Allowed','Rate Diff. Discount Allowed'
		,'RD Discount','Vending Discount','Key A/c Discount')
      
   UNION    
   SELECT CmpRtrCode AS LedgerName,0 AS Amount,R.COAID AS Coaid  FROM Retailer R (NOLOCK)     
   INNER JOIN SalesInvoice SI (NOLOCK) ON R.RtrId=SI.RtrId and DlvSts=3    
   INNER JOIN CoaMaster COA (NOLOCK) ON COA.CoaId=R.COAID AND SalInvNo=@VoucherRefNo    
  ) A   
  

	---SUM the total Discounts
	INSERT INTO @VoucherExportNode1    
	SELECT 'Sales Discounts' AS LedgerName,    
	(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(SUM(VDT.Amount),0)) WHEN 2 THEN ISNULL((SUM(VDT.Amount)),0)END) AS Amount,0 as CoaId    
	FROM StdvocDetails VDT (NOLOCK)     
	INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId NOT IN (SELECT Outputtaxid from TaxConfiguration (NOLOCK))     
	LEFT OUTER JOIN  Retailer R (NOLOCK) ON R.coaid=Coa.coaid     
	WHERE VDT.VocRefNo=@PiValue   and 
	AcName  IN(
		'Scheme Discount Received','Discount Allowed','Scheme Discount Allowed','Distributor Discount Allowed',
	'Cash Discount Allowed','Special Discount Allowed','Rate Diff. Discount Allowed'
	,'RD Discount','Vending Discount','Key A/c Discount') 
	GROUP BY  VDT.DebitCredit
        
      
	DELETE FROM @VoucherExportNode1 where LedgerName='Sales Return Account' 


	INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc) 
	SELECT A.ReturnId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM ReturnProductTax A(NOLOCK)     
	INNER JOIN ReturnHeader B(NOLOCK) ON A.ReturnId = B.ReturnId     
	WHERE B.ReturnCode = @VoucherRefNo AND A.TaxableAmt > 0 
	GROUP BY A.ReturnId,A.PrdSlNo  

	INSERT INTO @VoucherExportNode1 
	SELECT LedgerName,-1*SUM(Amount) as Amount,0 as CoaId
	FROM (
			SELECT 
			CASE WHEN VatGst='VAT' THEN	
			'Sales Return Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),ISNULL(Taxperc,0)))+'%' 
			ELSE 'Sales Return Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),ISNULL(Taxperc,0)))+'%' END AS LedgerName,    
			CONVERT(NUMERIC(18,2),SUM(PrdActualGross)) as Amount,SIP.Slno,0 as Coaid 
			FROM ReturnHeader SI (NOLOCK)     
			INNER JOIN ReturnProduct SIP (NOLOCK) ON SI.ReturnId=SIP.ReturnId    
			LEFT OUTER JOIN @TaxPercent C ON C.RefId=SI.ReturnId and C.RefId=SIP.ReturnId and    SIP.Slno=C.Prdslno 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))  
			WHERE VDT.VocRefNo= @PiValue 
			AND SI.ReturnCode = @VoucherRefNo
			GROUP BY Taxperc,  SIP.Slno,VatGst 
	) X GROUP BY LedgerName
    
      
  --If Exists (select * from @VoucherExportNode1 where LedgerName='Rate Diff. Discount Allowed')    
  --BEGIN    
  ----UPDATE @VoucherExportNode1 set Amount=(select SUM(Amount) from @VoucherExportNode1 where LedgerName in ('Rate Diff. Discount Allowed','Sales Return Account')) where LedgerName='Sales Return Account'    
  --DELETE FROM @VoucherExportNode1 where LedgerName='Rate Diff. Discount Allowed'    
  --END    
  --IF Exists (select * from @VoucherExportNode1 where LedgerName='Rate Diff. Discount Received')    
  --BEGIN    
  -----UPDATE @VoucherExportNode1 set Amount=(select SUM(Amount) from @VoucherExportNode1 where LedgerName in ('Rate Diff. Discount Received','Sales Return Account')) where LedgerName='Sales Return Account'    
  --DELETE FROM @VoucherExportNode1 where LedgerName='Rate Diff. Discount Received'    
  --END    
      
  ---Added by Gopikrishnan at 15-05-2013 to Rename the posting ledger name into Original ledger name for invoice discount    
  DELETE FROM @VoucherExportNode1 where Ledgername='Cash Discount Allowed'    
  IF EXISTS (SELECT Returnid FROM ReturnHeader WHERE ReturnCode=@VoucherRefNo GROUP BY Returnid HAVING SUM(RtnCashDisAmt)>0)    
  BEGIN    
  INSERT INTO @VoucherExportNode1    
  SELECT 'Cash Discount Allowed' AS LedgerName,SUM(RtnInvLvlDisc) AS Amount,0 AS Coaid     
  FROM ReturnHeader WHERE ReturnCode=@VoucherRefNo     
  END    
  ---Till Here    
      
  
     
 SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1    
 SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('SALES RETURN',@PiValue,@VoucherRefNo)    
     
 SELECT @Diff = @Amt1 + @Amt2    
     
 IF @Diff <> 0    
 BEGIN    
  IF(@Diff <= 5  AND  @Diff >=  -5 )    
  BEGIN    
   IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))    
   BEGIN     
       UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')    
   END    
   ELSE    
   BEGIN    
    IF @Diff > 0    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'    
    END    
    ELSE    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'      
    END    
   END    
       
   DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0    
  END    
      
 END    
END    
If UPPER(@sVocType)='PURCHASE'      
BEGIN    
 INSERT INTO @VoucherExportNode1    
 SELECT   COA.AcName AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
 FROM StdvocDetails VDT (NOLOCK)     
 INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId Not in (select Inputtaxid from TaxConfiguration (NOLOCK))    
 LEFT OUTER JOIN  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue    
 
DELETE FROM @VoucherExportNode1 where LedgerName='Purchase Account'    



DELETE FROM @TaxPercent
 
 
 
INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc	) 
SELECT A.PurRcptId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
FROM PurchaseReceiptProductTax A(NOLOCK)     
INNER JOIN PurchaseReceipt B(NOLOCK) ON A.PurRcptId = B.PurRcptId     
WHERE B.CmpInvNo = @VoucherRefNo AND A.TaxableAmount > 0      
GROUP BY A.PurRcptId,A.PrdSlNo  

INSERT INTO @VoucherExportNode1 
SELECT LedgerName,-1*SUM(Amount) as Amount,0 as CoaId
FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Purchase Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE 'Purchase Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'  END AS LedgerName,
		 CONVERT(NUMERIC(18,2),SUM(PrdGrossAmount)) as Amount,SIP.PrdSlNo,0 as Coaid 
		FROM PurchaseReceipt SI (NOLOCK)     
		INNER JOIN PurchaseReceiptProduct SIP (NOLOCK) ON SI.PurRcptId=SIP.PurRcptId    
		INNER JOIN @TaxPercent C ON C.RefId=SI.PurRcptId and C.RefId=SIP.PurRcptId and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16)))
		WHERE VDT.VocRefNo= @PiValue    
		AND SI.CmpInvNo = @VoucherRefNo
		GROUP BY Taxperc,  SIP.PrdSlNo ,VatGst
) X GROUP BY LedgerName  
     
 SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1    
 SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('PURCHASE',@PiValue,@VoucherRefNo)    
     
 SELECT @Diff = @Amt1 + @Amt2    
     
 IF @Diff <> 0    
 BEGIN    
  IF(@Diff <= 5  AND  @Diff >=  -5 )    
  BEGIN    
   IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))    
   BEGIN     
       UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')    
   END    
   ELSE    
   BEGIN    
    IF @Diff > 0    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'    
    END    
    ELSE    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'      
    END    
   END    
   DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0    
  END    
 END    
      
END    
If UPPER(@sVocType)='PURCHASE RETURN'    
BEGIN    
 INSERT INTO @VoucherExportNode1    
 SELECT   COA.AcName AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,    
 VDT.CoaId    
 FROM StdvocDetails VDT (NOLOCK)    
 INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId AND COA.CoaId Not in (select Inputtaxid from TaxConfiguration (NOLOCK))    
 LEFT OUTER JOIN  Retailer R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue    
     
 DELETE FROM @VoucherExportNode1 where LedgerName='Purchase Return Account'    
   
  DELETE FROM @TaxPercent
 
 
 
INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc	) 
SELECT A.PurRetId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
FROM PurchaseReturnProductTax A(NOLOCK)     
INNER JOIN PurchaseReturn B(NOLOCK) ON A.PurRetId = B.PurRetId     
WHERE B.PurRetRefNo = @VoucherRefNo AND A.TaxableAmount > 0      
GROUP BY A.PurRetId,A.PrdSlNo  

INSERT INTO @VoucherExportNode1 
SELECT LedgerName,SUM(Amount) as Amount,0 as CoaId
FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Purchase Return Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE 'Purchase Return Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS LedgerName,
		SUM(PrdGrossAmount) as Amount,SIP.PrdSlNo,0 as Coaid 
		FROM PurchaseReturn SI (NOLOCK)     
		INNER JOIN PurchaseReturnProduct SIP (NOLOCK) ON SI.PurRetId=SIP.PurRetId    
		INNER JOIN @TaxPercent C ON C.RefId=SI.PurRetId and C.RefId=SIP.PurRetId and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurRetRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28)))    
		WHERE VDT.VocRefNo= @PiValue    
		AND SI.PurRetRefNo = @VoucherRefNo
		GROUP BY Taxperc,  SIP.PrdSlNo,VatGst
) X GROUP BY LedgerName
 
     
 SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1    
 SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('PURCHASE RETURN',@PiValue,@VoucherRefNo)    
     
 SELECT @Diff = @Amt1 + @Amt2    
     
 IF @Diff <> 0    
 BEGIN    
  IF(@Diff <= 5  AND  @Diff >=  -5 )    
  BEGIN    
   IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))    
   BEGIN     
       UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')    
   END    
   ELSE    
   BEGIN    
    IF @Diff > 0    
    BEGIN    
     INSERT INTO @VoucherExportNode1     
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'     
    END    
    ELSE    
    BEGIN    
     INSERT INTO @VoucherExportNode1         
     SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'     
    END    
   END    
   DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0    
  END    
 END 
END    
If UPPER(@sVocType)='SALES- REPLACEMENT IN'    
BEGIN    
Insert Into @VoucherExportNode1    
Select 'Null',0,0    
End

--CCRSTAML1028 Start

DECLARE @IDTVoucher TABLE
(
	Coaid INT,
	ACName Varchar(300)
)	

If UPPER(@sVocType)='IDT'  
BEGIN
	
	INSERT INTO @IDTVoucher(Coaid,ACName)
	SELECT Coaid, AcName FROM COAMaster WHERE AcName='Sales Account'
	
	INSERT INTO @VoucherExportNode1
	SELECT CASE COA.AcName WHEN 'Purchase Return Account' THEN (SELECT AcName FROM @IDTVoucher) ELSE COA.AcName END as LedgerName
	,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,
	
	CASE COA.AcName WHEN 'Purchase Return Account' THEN (SELECT CoaId FROM @IDTVoucher) ELSE COA.CoaId END 
	FROM StdvocDetails VDT (NOLOCK) 
	INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId 
	AND COA.CoaId Not in (select InputTaxId from TaxConfiguration (NOLOCK))
	LEFT OUTER JOIN  IDTMASTER R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue
	
	DELETE FROM @VoucherExportNode1 where LedgerName='Sales Account' 
	
	INSERT INTO @IDTTaxPercent (RefId,Prdslno,TaxPerc) 
	SELECT A.IDTMngRefNo,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM IDTManagementProductTax A(NOLOCK)     
	INNER JOIN IDTManagement B(NOLOCK) ON A.IDTMngRefNo = B.IDTMngRefNo     
	WHERE B.IDTMngRefNo = @VoucherRefNo AND A.TaxableAmount > 0  and B.StkMgmtTypeId=2
	GROUP BY A.IDTMngRefNo,A.PrdSlNo  

	INSERT INTO @VoucherExportNode1 
	SELECT LedgerName,SUM(Amount) as Amount,0 as CoaId
	FROM (
			SELECT
			CASE WHEN IDTMngDate<='2017-06-30' THEN 
			'Sales Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
			ELSE
			'Sales Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS LedgerName,
			CONVERT(NUMERIC(18,2),SUM(PrdGrossAmount)) as Amount,SIP.Prdslno,0 as Coaid 
			FROM IDTManagement SI (NOLOCK)     
			INNER JOIN IDTManagementProduct SIP (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo    
			INNER JOIN @IDTTaxPercent C ON C.RefId=SI.IDTMngRefNo and C.RefId=SIP.IDTMngRefNo and    SIP.Prdslno=C.Prdslno 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26)))  
			WHERE VDT.VocRefNo= @PiValue  and SI.StkMgmtTypeId=2
			AND SI.IDTMngRefNo = @VoucherRefNo
			GROUP BY Taxperc,  SIP.Prdslno ,IDTMngDate
	) X GROUP BY LedgerName
		
	UPDATE @VoucherExportNode1 SET LedgerName=(SELECT AcName FROM CoaMaster where  AcName='Sales Account')
	WHERE LedgerName='IDT'
	
	UPDATE @VoucherExportNode1 SET Coaid=(SELECT Coaid FROM CoaMaster where  AcName='Sales Account')
	WHERE LedgerName='IDT'
	
	SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1 where LedgerName='IDT'
	SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('IDT',@PiValue,@VoucherRefNo)
	
	SELECT @Diff = @Amt1 + @Amt2
	
	IF @Diff <> 0
	BEGIN
		IF(@Diff <= 5  AND  @Diff >=  -5 )
		BEGIN
			IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))
			BEGIN 
				   UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')
			END
			ELSE
			BEGIN
				IF @Diff > 0
				BEGIN
					INSERT INTO @VoucherExportNode1 
					SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'
				END
				ELSE
				BEGIN
					INSERT INTO @VoucherExportNode1 
					SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'		
				END
			END
			DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0
		END
	END
			
END

If UPPER(@sVocType)='IDT IN'  
BEGIN

	INSERT INTO @IDTVoucher(Coaid,ACName)
	SELECT Coaid, AcName FROM COAMaster WHERE AcName='Purchase Account'

	INSERT INTO @VoucherExportNode1
	SELECT    CASE COA.AcName WHEN 'Purchase Return Account' THEN (SELECT AcName FROM @IDTVoucher) ELSE COA.AcName END as LedgerName,	
	(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,	
	CASE COA.AcName WHEN 'Purchase Return Account' THEN (SELECT CoaId FROM @IDTVoucher) ELSE COA.CoaId END 
	FROM StdvocDetails VDT (NOLOCK) 
	INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId 
	AND COA.CoaId Not in (select InputTaxId from TaxConfiguration (NOLOCK))
	LEFT OUTER JOIN  IDTMASTER R (NOLOCK) on R.coaid=Coa.coaid Where VDT.VocRefNo=@PiValue
	
	DELETE FROM @VoucherExportNode1 where LedgerName='Purchase Account'
	
	
	INSERT INTO @IDTTaxPercent (RefId,Prdslno,TaxPerc) 
	SELECT A.IDTMngRefNo,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM IDTManagementProductTax A(NOLOCK)     
	INNER JOIN IDTManagement B(NOLOCK) ON A.IDTMngRefNo = B.IDTMngRefNo     
	WHERE B.IDTMngRefNo = @VoucherRefNo AND A.TaxableAmount > 0  and B.StkMgmtTypeId=1
	GROUP BY A.IDTMngRefNo,A.PrdSlNo  

	INSERT INTO @VoucherExportNode1 
	SELECT LedgerName,-SUM(Amount) as Amount,0 as CoaId
	FROM (
			SELECT 
			CASE WHEN IDTMngDate<='2017-06-30' THEN 
			'Purchase Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
			ELSE
			'Purchase Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS LedgerName,
			CONVERT(NUMERIC(18,2),SUM(PrdGrossAmount)) as Amount,SIP.Prdslno,0 as Coaid 
			FROM IDTManagement SI (NOLOCK)     
			INNER JOIN IDTManagementProduct SIP (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo    
			INNER JOIN @IDTTaxPercent C ON C.RefId=SI.IDTMngRefNo and C.RefId=SIP.IDTMngRefNo and    SIP.Prdslno=C.Prdslno 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26)))  
			WHERE VDT.VocRefNo= @PiValue  and SI.StkMgmtTypeId=1
			AND SI.IDTMngRefNo = @VoucherRefNo
			GROUP BY Taxperc,  SIP.Prdslno ,IDTMngDate
	) X GROUP BY LedgerName

	
	UPDATE @VoucherExportNode1 SET LedgerName=(SELECT AcName FROM CoaMaster where  AcName='Purchase Account')
	WHERE LedgerName='Purchase Account'
	
	UPDATE @VoucherExportNode1 SET Coaid=(SELECT Coaid FROM CoaMaster where  AcName='Purchase Account')
	WHERE LedgerName='Purchase Account'
	
	
	SELECT @Amt1 = SUM(Amount) FROM @VoucherExportNode1 where LedgerName='Purchase Account'
	SELECT @Amt2 = SUM(Amount) FROM [dbo].[Fn_VoucherExportNode2]('Purchase Account',@PiValue,@VoucherRefNo)
	
	SELECT @Diff = @Amt1 + @Amt2
	
	IF @Diff <> 0
	BEGIN
		IF(@Diff <= 5  AND  @Diff >=  -5 )
		BEGIN
			IF EXISTS (SELECT * FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes'))
			BEGIN 
				   UPDATE TOP (1) @VoucherExportNode1  SET Amount = Amount - @Diff WHERE LedgerName IN('Round Off Expenses','Round Off Incomes')
			END
			ELSE
			BEGIN
				IF @Diff > 0
				BEGIN
					INSERT INTO @VoucherExportNode1 
					SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='3220001'
				END
				ELSE
				BEGIN
					INSERT INTO @VoucherExportNode1 
					SELECT AcName,-1*@Diff,CoaId FROM COAMaster(NOLOCK) WHERE AcCode ='4210001'		
				END
			END
			DELETE FROM @VoucherExportNode1 WHERE LedgerName IN('Round Off Expenses','Round Off Incomes') AND Amount = 0
		END
	END

END
--CCRSTAML1028 END
    
---Added by Gopikrishnan at 20/02/2013    
IF NOT EXISTS (SELECT * FROM @VoucherExportNode1)    
BEGIN    
 INSERT INTO @VoucherExportNode1    
 SELECT COA.AcName AS LedgerName,(CASE VDT.DebitCredit WHEN 1 THEN (-1*ISNULL(VDT.Amount,0)) WHEN 2 THEN ISNULL((VDT.Amount),0)END) AS Amount,VDT.CoaId    
 FROM StdvocDetails VDT (NOLOCK)     
 INNER JOIN CoaMaster COA (NOLOCK) ON VDT.CoaId=COA.CoaId WHERE VDT.VocRefNo=@PiValue    
END    
If UPPER(@sVocType)='Stock Ledger'    
BEGIN    
Insert Into @VoucherExportNode1    
Select 'Physical Inventory',0,0    
End    
RETURN    
END 
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_VoucherExportNode2')
DROP FUNCTION Fn_VoucherExportNode2
GO
--SELECT * FROM [dbo].[Fn_VoucherExportNode2]('SALES','SAL1702915','PM0S01751700417')
--SELECT * FROM [dbo].[Fn_VoucherExportNode2]('IDT','PUR1702478','TE.50354')
CREATE FUNCTION [Fn_VoucherExportNode2]
(
	@sVocType		AS VARCHAR(200),
	@PiValue		AS VARCHAR(200),
	@VoucherRefNo	AS Varchar(200)
)
RETURNS @VoucherExportNode2 TABLE
(
	LedgerName	  VARCHAR(50),
	TaxType       VARCHAR(50),
	TaxRate       VARCHAR(10),
	Amount		  NUMERIC(18,2),
	AssableAmount NUMERIC(18,2),
	Taxid       INT
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode2
* PURPOSE	: Returns the Tax Bifurication details
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 21/02/2013	Gopikrishnan												Nolock is added
* 21/03/2013    Gopikrishnan												Cancelled Bill Details flow to Tally
* 02/11/2017    Murugan.R		CR				CCRSTAML1028				IDT Transaction Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
DECLARE @Amount1 NUMERIC(18,2)
DECLARE @Amount2 NUMERIC(18,2)
DECLARE @Diff NUMERIC(18,2)
DECLARE @TempVoucherExportNode TABLE
(
	LedgerName	  VARCHAR(50),
	TaxType       VARCHAR(50),
	TaxRate       VARCHAR(10),
	Amount		  NUMERIC(18,4),
	AssableAmount NUMERIC(18,4),	
	Taxid       INT	
)
IF UPPER(@sVocType)='SALES'
BEGIN
	
	INSERT INTO @VoucherExportNode2
	SELECT LedgerName,TaxType,TaxRate,CONVERT(NUMERIC(18,2),SUM(Amount))Amount,CONVERT(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
	FROM 
	 (
		SELECT TaxCode+' '+CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
		CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc)) AS TaxRate,
		CONVERT(NUMERIC(18,2),TaxAmount) AS Amount,CONVERT(NUMERIC(18,2),TaxableAmount) AS AssableAmount,Tg.Taxid 
		FROM SalesinvoiceproductTax SIPT WITH (NOLOCK) 
		INNER JOIN Salesinvoice SI WITH (NOLOCK) ON SI.SALID=SIPT.SALID
		INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
		INNER JOIN StdVocMaster VDT WITH (NOLOCK) ON SI.Salinvno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
		INNER JOIN StdvocDetails VDD WITH (NOLOCK) ON VDT.VocRefNo=VDD.VocRefNo 
		INNER JOIN CoaMaster COA WITH (NOLOCK) ON VDD.CoaId=COA.CoaId 
		INNER JOIN Retailer R ON R.Coaid=COA.Coaid AND R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
		WHERE VDT.VocRefNo=@PiValue and SIPT.TaxableAmount>0 
		--GROUP BY Tg.Taxid,sipt.Taxperc,TaxCode 
		UNION ALL
		---Modified by Gopikrishnan at 21-03-2013 for Cancelled Bill Changes
		--select distinct 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid from Salesinvoice SI WITH (NOLOCK) 
		--Where SalInvNo=@VoucherRefNo and (DlvSts=3 OR SalId NOT IN (select distinct SalId FROM SalesInvoiceProductTax WITH (NOLOCK)))) A order by taxid
		SELECT TaxCode+' '+CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
		CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc)) AS TaxRate,CONVERT(NUMERIC(18,2),TaxAmount) AS Amount,
		CONVERT(NUMERIC(18,2),TaxableAmount) AS AssableAmount,Tg.Taxid 
		FROM SalesinvoiceproductTax SIPT WITH (NOLOCK) 
		INNER JOIN Salesinvoice SI WITH (NOLOCK) ON SI.SALID=SIPT.SALID
		INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
		INNER JOIN Retailer R ON R.rtrid=Si.rtrid AND DlvSts=3 AND si.salinvno=@VoucherRefNo
		WHERE SIPT.TaxableAmount>0 
		--GROUP BY Tg.Taxid,sipt.Taxperc,TaxCode 
	) A 
	GROUP BY LedgerName,TaxType,TaxRate,Taxid
	ORDER BY taxid		 			
End 
IF UPPER(@sVocType)='SALES RETURN'
BEGIN
	--INSERT INTO @VoucherExportNode2
	-- SELECT Distinct LedgerName,TaxType,TaxRate,Amount,AssableAmount,Taxid from (
	--	select distinct TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as LedgerName,TaxCode as TaxType,
	--	Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc)) as TaxRate,-(Sum(TaxAmt)) as Amount,-(SUM(TaxableAmt)) AS AssableAmount,Tg.Taxid  
	--	from Returnproducttax SIPT WITH (NOLOCK) inner Join  ReturnHeader SI WITH (NOLOCK) ON SIPT.Returnid=SI.Returnid
	--	Inner Join TaxConfiguration Tg WITH (NOLOCK) on TG.Taxid=SIPT.Taxid Inner join StdVocMaster VDT WITH (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))
	--	Inner Join StdvocDetails VDD WITH (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo Inner Join CoaMaster COA WITH (NOLOCK) ON VDD.CoaId=COA.CoaId Inner Join Retailer R WITH (NOLOCK) on R.Coaid=COA.Coaid and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
	--	Where VDT.VocRefNo=@PiValue and SIPT.TaxableAmt>0 Group By Tg.Taxid,sipt.Taxperc,TaxCode
	--    UNION ALL
	--    select distinct 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid  from ReturnHeader SI WITH (NOLOCK)
	--	Where ReturnCode=@VoucherRefNo and Returnid Not in (select distinct Returnid FROM Returnproducttax WITH (NOLOCK))) A order by taxid
	 INSERT INTO @VoucherExportNode2
	 SELECT LedgerName,TaxType,TaxRate,Convert(Numeric(18,2),SUM(Amount))Amount,Convert(Numeric(18,2),SUM(AssableAmount))AssableAmount,Taxid 
	 FROM 
	 (
		SELECT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),ISNULL(Taxperc,0)))+'%' as LedgerName,TaxCode as TaxType,
		Convert(nvarchar(10),Convert(Numeric(18,2),ISNULL(Taxperc,0))) as TaxRate,-(Convert(Numeric(18,2),ISNULL(TaxAmt,0))) as Amount,
		-(Convert(Numeric(18,2),ISNULL(TaxableAmt,0))) AS AssableAmount,Tg.Taxid  
		FROM ReturnHeader  SI WITH (NOLOCK) 
		LEFT OUTER JOIN  Returnproducttax SIPT WITH (NOLOCK) ON SIPT.Returnid=SI.Returnid  
		LEFT OUTER JOIN  TaxConfiguration Tg WITH (NOLOCK) on TG.Taxid=SIPT.Taxid 
		INNER JOIN StdVocMaster VDT WITH (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))
		INNER JOIN StdvocDetails VDD WITH (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo 
		INNER JOIN CoaMaster COA WITH (NOLOCK) ON VDD.CoaId=COA.CoaId 
		INNER JOIN Retailer R WITH (NOLOCK) on R.Coaid=COA.Coaid and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
		WHERE VDT.VocRefNo=@PiValue and SIPT.TaxableAmt>0
		--Group By Tg.Taxid,sipt.Taxperc,TaxCode
		UNION ALL
		SELECT DISTINCT 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid  
		FROM ReturnHeader SI WITH (NOLOCK)
		WHERE ReturnCode= @VoucherRefNo and Returnid Not in (select distinct Returnid FROM Returnproducttax WITH (NOLOCK))
	) A
	GROUP BY LedgerName,TaxType,TaxRate,Taxid
	ORDER BY Taxid	
END
IF UPPER(@sVocType)='PURCHASE'
BEGIN
	IF EXISTS (SELECT * FROM StdVocMaster WHERE VocRefNo=@PiValue AND Remarks LIKE 'Posted From Stock Adjustment%' )
	BEGIN
		INSERT INTO @TempVoucherExportNode
		SELECT DISTINCT 'Null' AS LedgerName,'null' AS TaxType,'0' AS TaxRate,0 AS Amount,0 AS AssableAmount,0 AS Taxid
	END
	ELSE
	BEGIN
		--INSERT INTO @VoucherExportNode2
		--SELECT Distinct LedgerName,TaxType,TaxRate,Amount,AssableAmount,Taxid from (
		--select distinct TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as LedgerName,TaxCode as TaxType,
		--Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc)) as TaxRate,-(Sum(sipt.TaxAmount)) as Amount,
		---(SUM(SIPT.TaxableAmount)) AS AssableAmount,Tg.Taxid 
		--from PurchaseReceiptProductTax SIPT WITH (NOLOCK) inner Join  PurchaseReceipt SI WITH (NOLOCK) ON SIPT.Purrcptid=SI.Purrcptid
		--Inner Join TaxConfiguration Tg WITH (NOLOCK) on TG.Taxid=SIPT.Taxid Inner join StdVocMaster VDT WITH (NOLOCK) on SI.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16))) 
		--Where VDT.VocRefNo=@PiValue and SIPT.TaxableAmount>0 Group By Tg.Taxid,sipt.Taxperc,TaxCode
		--UNION ALL
		--select distinct 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid FROM PurchaseReceipt SI WITH (NOLOCK)
		--Where PurRcptRefNo=@VoucherRefNo and Purrcptid Not in (select distinct Purrcptid FROM PurchaseReceiptProductTax WITH (NOLOCK)))A Order by Taxid 
		INSERT INTO @VoucherExportNode2
		SELECT LedgerName,TaxType,TaxRate,CONVERT(NUMERIC(18,2),SUM(Amount))Amount,CONVERT(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
		FROM 
		(
			SELECT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
			Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc)) AS TaxRate,-(CONVERT(NUMERIC(18,2),sipt.TaxAmount)) AS Amount,
			-(CONVERT(NUMERIC(18,2),SIPT.TaxableAmount)) AS AssableAmount,Tg.Taxid 
			FROM PurchaseReceiptProductTax SIPT WITH (NOLOCK) 
			INNER JOIN PurchaseReceipt SI WITH (NOLOCK) ON SIPT.Purrcptid=SI.Purrcptid
			INNER JOIN TaxConfiguration Tg WITH (NOLOCK) on TG.Taxid=SIPT.Taxid 
			INNER JOIN StdVocMaster VDT WITH (NOLOCK) on SI.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16))) 
			WHERE VDT.VocRefNo=@PiValue AND SIPT.TaxableAmount>0 
			--Group By Tg.Taxid,sipt.Taxperc,TaxCode
			UNION ALL
			SELECT DISTINCT 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid 
			FROM PurchaseReceipt SI WITH (NOLOCK)
			Where PurRcptRefNo=@VoucherRefNo and Purrcptid Not in (select distinct Purrcptid FROM PurchaseReceiptProductTax WITH (NOLOCK))
				
		)A
		GROUP BY LedgerName,TaxType,TaxRate,Taxid
		ORDER BY Taxid 
	
	END
END
IF UPPER(@sVocType)='PURCHASE RETURN'
BEGIN
	--INSERT INTO @VoucherExportNode2
	-- SELECT Distinct LedgerName,TaxType,TaxRate,Amount,AssableAmount,Taxid from (
	--	select distinct TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as LedgerName,TaxCode as TaxType,
	--	Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc)) as TaxRate,(Sum(sipt.TaxAmount)) as Amount,SUM(SIPT.TaxableAmount) AS AssableAmount,Tg.Taxid  
	--	from PurchaseReturnProductTax SIPT WITH (NOLOCK) inner Join  PurchaseReturn SI WITH (NOLOCK) ON SIPT.Purretid=SI.Purretid 
	--	Inner Join TaxConfiguration Tg WITH (NOLOCK) on TG.Taxid=SIPT.Taxid Inner join StdVocMaster VDT WITH (NOLOCK) on SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28)))  
	--	Where VDT.VocRefNo=@PiValue and SIPT.TaxableAmount>0 Group By Tg.Taxid,sipt.Taxperc,TaxCode
	--	UNION ALL
	--	select distinct 'Null' as LedgerName,'null' as TaxType,'0' as TaxRate,0 as Amount,0 AS AssableAmount,0 as Taxid  from PurchaseReturn SI WITH (NOLOCK)
	--	Where PurretRefno=@VoucherRefNo and Purretid Not in (select distinct Purretid FROM PurchaseReturnProductTax WITH (NOLOCK))) A order by taxid
	 INSERT INTO @VoucherExportNode2
	 SELECT LedgerName,TaxType,TaxRate,Convert(NUMERIC(18,2),SUM(Amount))Amount,Convert(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
	 FROM 
	 (
			SELECT TaxCode+' '+Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
			Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc)) AS TaxRate,(Convert(NUMERIC(18,2),sipt.TaxAmount)) AS Amount,
			Convert(NUMERIC(18,2),SIPT.TaxableAmount) AS AssableAmount,Tg.Taxid  
			FROM PurchaseReturnProductTax SIPT WITH (NOLOCK) 
			INNER JOIN PurchaseReturn SI WITH (NOLOCK) ON SIPT.Purretid=SI.Purretid 
			INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
			INNER JOIN StdVocMaster VDT WITH (NOLOCK) ON SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28)))  
			WHERE VDT.VocRefNo=@PiValue AND SIPT.TaxableAmount>0 
			--GROUP BY Tg.Taxid,sipt.Taxperc,TaxCode
			UNION ALL
			SELECT DISTINCT 'Null' AS LedgerName,'null' AS TaxType,'0' AS TaxRate,0 AS Amount,0 AS AssableAmount,0 AS Taxid  
			FROM PurchaseReturn SI WITH (NOLOCK)
			WHERE PurretRefno=@VoucherRefNo AND Purretid NOT IN (select distinct Purretid FROM PurchaseReturnProductTax WITH (NOLOCK))
	) A 
	GROUP BY LedgerName,TaxType,TaxRate,Taxid
	ORDER BY Taxid					
END
--CCRSTAML1028 Start
IF UPPER(@sVocType)='IDT'--IDT OUT
BEGIN
	 INSERT INTO @VoucherExportNode2
	 SELECT LedgerName,TaxType,TaxRate,Convert(NUMERIC(18,2),SUM(Amount))Amount,Convert(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
	 FROM 
	 (
			SELECT TaxCode+' '+Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
			Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc)) AS TaxRate,(Convert(NUMERIC(18,2),sipt.TaxAmount)) AS Amount,
			Convert(NUMERIC(18,2),SIPT.TaxableAmount) AS AssableAmount,Tg.Taxid  
			FROM IDTManagementProductTax SIPT WITH (NOLOCK) 
			INNER JOIN IDTManagement SI WITH (NOLOCK) ON SIPT.IDTMngRefNo=SI.IDTMngRefNo 
			INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
			INNER JOIN StdVocMaster VDT WITH (NOLOCK) ON SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26)))  
			WHERE VDT.VocRefNo=@PiValue AND SIPT.TaxableAmount>0 and SI.StkMgmtTypeId=2
			UNION ALL
			SELECT DISTINCT 'Null' AS LedgerName,'null' AS TaxType,'0' AS TaxRate,0 AS Amount,0 AS AssableAmount,0 AS Taxid  
			FROM IDTManagement SI WITH (NOLOCK)
			WHERE IDTMngRefNo=@VoucherRefNo AND IDTMngRefNo NOT IN (select distinct IDTMngRefNo FROM IDTManagementProductTax WITH (NOLOCK))
			and SI.StkMgmtTypeId=2
	) A 
	GROUP BY LedgerName,TaxType,TaxRate,Taxid
	ORDER BY Taxid					
END
IF UPPER(@sVocType)='IDT IN'--IDT IN
BEGIN
	 INSERT INTO @VoucherExportNode2
	 SELECT LedgerName,TaxType,TaxRate,Convert(NUMERIC(18,2),SUM(Amount))Amount,Convert(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
	 FROM 
	 (
			SELECT TaxCode+' '+Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
			Convert(NVARCHAR(10),Convert(NUMERIC(18,2),Taxperc)) AS TaxRate,-1*(Convert(NUMERIC(18,2),sipt.TaxAmount)) AS Amount,
			-1*Convert(NUMERIC(18,2),SIPT.TaxableAmount) AS AssableAmount,Tg.Taxid  
			FROM IDTManagementProductTax SIPT WITH (NOLOCK) 
			INNER JOIN IDTManagement SI WITH (NOLOCK) ON SIPT.IDTMngRefNo=SI.IDTMngRefNo 
			INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
			INNER JOIN StdVocMaster VDT WITH (NOLOCK) ON SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26)))  
			WHERE VDT.VocRefNo=@PiValue AND SIPT.TaxableAmount>0 and SI.StkMgmtTypeId=1
			UNION ALL
			SELECT DISTINCT 'Null' AS LedgerName,'null' AS TaxType,'0' AS TaxRate,0 AS Amount,0 AS AssableAmount,0 AS Taxid  
			FROM IDTManagement SI WITH (NOLOCK)
			WHERE IDTMngRefNo=@VoucherRefNo AND IDTMngRefNo NOT IN (select distinct IDTMngRefNo FROM IDTManagementProductTax WITH (NOLOCK))
			and SI.StkMgmtTypeId=1
	) A 
	GROUP BY LedgerName,TaxType,TaxRate,Taxid
	ORDER BY Taxid					
END
--CCRSTAML1028 END
IF UPPER(@sVocType)<>'SALES' AND (@sVocType)<>'SALES RETURN' AND UPPER(@sVocType)<>'PURCHASE RETURN' AND  UPPER(@sVocType)<>'PURCHASE' 
	AND  UPPER(@sVocType)<>'IDT' AND  UPPER(@sVocType)<>'IDT IN'-- CCRSTAML1028
BEGIN
	INSERT INTO @VoucherExportNode2
	SELECT DISTINCT 'Null' AS LedgerName,'null' AS TaxType,'0' AS TaxRate,0 AS Amount,0 AS AssableAmount,0 AS Taxid
END
RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_VoucherExportNode3')
DROP FUNCTION Fn_VoucherExportNode3
GO
--select * from SalesInvoice where Salinvno='PM0S01751700417'
--Select * from SalesInvoiceProduct where Salid=2908
--select * from Fn_VoucherExportNode3('SALES','SAL1702915','PM0S01751700417')
CREATE FUNCTION [Fn_VoucherExportNode3]
(
	@sVocType		as varchar(200),
	@PiValue		as varchar(200),
	@VoucherRefNo	AS Varchar(200)
)
RETURNS @VoucherExportNode3 TABLE
(
    Inventorytype varchar(200),
    LocationName      Varchar(200),
    ProductCode    varchar(200),
    ProductName    Varchar(500),
	Quantity			Int,
	SalesValue		Numeric(18,4),
	Discounts		Numeric(18,6)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode3
* PURPOSE	: Returns the Inventeory Details
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 13-02-2013	Gopikrishnan												Location Name Column Added
* 21/03/2013    Gopikrishnan												Cancelled Bill Details flow to Tally
* 18/06/2013    Gopikrishnan												SalesReturn Location name HardCored Remove
* 03/09/2013    Gopikrishnan												ProductName Column Added
* 02/11/2017    Murugan.R		CR				CCRSTAML1028				ProductName Column Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN


DECLARE @TaxPercent Table  
(
  RefId BIGINT,
  Prdslno INT,
  TaxPerc Numeric(18,2)	,
  TaxableAmount Numeric(18,4)
)  

DECLARE @IDTTaxPercent Table  
(
  RefId Varchar(50),
  Prdslno INT,
  TaxPerc Numeric(18,2)	
) 

DECLARE @PurchaseTaxPercent Table  
(
  RefId Varchar(50),
  Prdslno INT,
  TaxPerc Numeric(18,2),
  TaxableAmount  Numeric(18,6)	
)

If UPPER(@PiValue)<>'NULL'
BEGIN
If UPPER(@sVocType)='SALES'
BEGIN
	DELETE FROM @TaxPercent

	INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc,TaxableAmount) 	
	SELECT A.Salid,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc ,SUM(DISTINCT TaxableAmount)  as TaxableAmount
	FROM SalesInvoiceProductTax A(NOLOCK)     
	INNER JOIN Salesinvoice B(NOLOCK) ON A.Salid = B.Salid     
	WHERE B.SalInvNo = @VoucherRefNo AND A.TaxableAmount > 0  
	GROUP BY A.Salid,A.PrdSlNo 
	
	INSERT INTO @VoucherExportNode3
	SELECT  Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity) as Quantity,CONVERT(Numeric(18,2),SUM(SalesValue)) as SalesValue,
	SUM(Discounts) as Discounts  
	FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Sales Account VAT '+CONVERT(nvarchar(10),CONVERT(Numeric(18,2),Taxperc))+'%' 
		ELSE
		'Sales Account GST '+CONVERT(nvarchar(10),CONVERT(Numeric(18,2),Taxperc))+'%' 
		END	AS Inventorytype,
		LcnName as LocationName,
		Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(BaseQty) as Quantity,
		--TaxableAmount  as SalesValue,SIP.SlNo
		(PrdGrossAmount) as SalesValue,SIP.SlNo,
		-1*(SplDiscAmount+prdSplDiscAmount+PrdSchDiscAmount+PrdDBDiscAmount+PrdCDAmount) as Discounts
		FROM Salesinvoice SI (NOLOCK)     
		INNER JOIN Salesinvoiceproduct SIP (NOLOCK) ON SI.Salid=SIP.Salid    
		INNER JOIN @TaxPercent C ON C.RefId=SI.Salid and C.RefId=SIP.Salid and    SIP.SlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT WITH (NOLOCK) on SI.Salinvno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
		INNER JOIN Location L WITH (NOLOCK) on l.LcnId=SI.Lcnid
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid 
		WHERE SI.SalInvNo = @VoucherRefNo AND VDT.VocRefNo=@PiValue
	) X GROUP BY Inventorytype,LocationName,ProductCode,ProductName 

End 
END
----Added by Gopikrishnan at 21-03-2013 for Cancelled Bill Changes
If UPPER(@PiValue)='NULL'
BEGIN
If UPPER(@sVocType)='SALES'
BEGIN

	DELETE FROM @TaxPercent

	INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc) 	
	SELECT A.Salid,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM SalesInvoiceProductTax A(NOLOCK)     
	INNER JOIN Salesinvoice B(NOLOCK) ON A.Salid = B.Salid     
	WHERE B.SalInvNo = @VoucherRefNo AND A.TaxableAmount > 0  AND DlvSts=3     
	GROUP BY A.Salid,A.PrdSlNo 
	
	INSERT INTO @VoucherExportNode3
	SELECT  Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity) as Quantity,CONVERT(Numeric(18,4),SUM(SalesValue)) as SalesValue ,
	SUM(Discounts) as Discounts
	FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Sales Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE 'Sales Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END	AS Inventorytype,		
		LcnName as LocationName,
		Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(BaseQty) as Quantity,(PrdGrossAmount) as SalesValue,SIP.SlNo,
		-1*(SplDiscAmount+prdSplDiscAmount+PrdSchDiscAmount+PrdDBDiscAmount+PrdCDAmount) as Discounts
		FROM Salesinvoice SI (NOLOCK)     
		INNER JOIN Salesinvoiceproduct SIP (NOLOCK) ON SI.Salid=SIP.Salid    
		INNER JOIN @TaxPercent C ON C.RefId=SI.Salid and C.RefId=SIP.Salid and    SIP.SlNo=C.Prdslno 
		INNER JOIN Location L WITH (NOLOCK) on l.LcnId=SI.Lcnid
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid 
		WHERE SI.SalInvNo = @VoucherRefNo	 AND DlvSts=3      
	) X GROUP BY Inventorytype,LocationName,ProductCode,ProductName 


End 
END
If UPPER(@sVocType)='SALES RETURN'
BEGIN

	DELETE FROM @TaxPercent

	INSERT INTO @TaxPercent (RefId,Prdslno,TaxPerc) 	
	SELECT A.Returnid,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
	FROM ReturnProductTax A(NOLOCK)     
	INNER JOIN ReturnHeader B(NOLOCK) ON A.Returnid = B.Returnid     
	WHERE B.ReturnCode = @VoucherRefNo AND A.TaxableAmt > 0      
	GROUP BY A.Returnid,A.PrdSlNo 
	
	INSERT INTO @VoucherExportNode3
	SELECT  Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity) as Quantity,CONVERT(Numeric(18,2),SUM(SalesValue)) as SalesValue ,
	SUM(Discounts) as Discounts
	FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Sales Return Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),isnull(Taxperc,0)))+'%' 
		ELSE 'Sales Return Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),isnull(Taxperc,0)))+'%'  END	AS Inventorytype,
		L.LcnName as  LocationName,
		Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(BaseQty) as Quantity,CONVERT(NUMERIC(18,2),PrdActualGross) as SalesValue,
		SIP.SlNo,
		-1*(PrdSplDisAmt+PrdSchDisAmt+PrdDBDisAmt+PrdCDDisAmt) as Discounts
		FROM ReturnHeader SI (NOLOCK)     
		INNER JOIN ReturnProduct SIP (NOLOCK) ON SI.Returnid=SIP.Returnid    
		LEFT OUTER JOIN @TaxPercent C ON C.RefId=SI.Returnid and C.RefId=SIP.Returnid and    SIP.SlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))
		INNER JOIN StockType ST ON ST.StockTypeId=SIP.StockTypeId
		INNER JOIN Location L WITH (NOLOCK) on l.LcnId=ST.LCNID
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid 
		WHERE VDT.VocRefNo= @PiValue    
		AND SI.ReturnCode = @VoucherRefNo	
	) X GROUP BY Inventorytype,LocationName,ProductCode,ProductName 


END
If UPPER(@sVocType)='PURCHASE'
BEGIN

DELETE FROM @PurchaseTaxPercent

INSERT INTO @PurchaseTaxPercent (RefId,Prdslno,TaxPerc,TaxableAmount) 
--SELECT A.PurRcptId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc ,SUM(CASE WHEN TaxCode NOT IN('InputGSTCess') THEN 0 ELSE DISTINCT A.TaxableAmount END) as TaxableAmount
--FROM PurchaseReceiptProductTax A(NOLOCK)     
--INNER JOIN PurchaseReceipt B(NOLOCK) ON A.PurRcptId = B.PurRcptId 
--INNER JOIN TaxConfiguration T (NOLOCK) ON T.TaxId=A.TaxId    
--WHERE B.CmpInvNo = @VoucherRefNo AND A.TaxableAmount > 0  
--GROUP BY A.PurRcptId,A.PrdSlNo 

SELECT  X.PurRcptId,X.PrdSlNo,SUM(X.TaxPerc) as TaxPerc,SUM(DISTINCT TaxableAmount) as TaxableAmount
FROM (
SELECT A.PurRcptId,A.PrdSlNo,(A.TaxPerc) as TaxPerc ,(CASE WHEN TaxCode IN('InputGSTCess') THEN 0 ELSE A.TaxableAmount END) as TaxableAmount
FROM PurchaseReceiptProductTax A(NOLOCK)     
INNER JOIN PurchaseReceipt B(NOLOCK) ON A.PurRcptId = B.PurRcptId 
INNER JOIN TaxConfiguration T (NOLOCK) ON T.TaxId=A.TaxId    
WHERE B.CmpInvNo = @VoucherRefNo AND A.TaxableAmount > 0 
  )X
GROUP BY X.PurRcptId,X.PrdSlNo 


INSERT INTO @VoucherExportNode3
SELECT  Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity) as Quantity,CONVERT(Numeric(18,2),SUM(SalesValue)) as SalesValue ,
SUM(Discounts) as Discounts
FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Purchase Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE
		'Purchase Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS Inventorytype
		
		,LcnName as LocationName,
		Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(InvBaseQty) as Quantity,
		--(TaxableAmount) as SalesValue,SIP.PrdSlNo
		(PrdGrossAmount) as SalesValue,SIP.PrdSlNo,
		(PrdDiscount) as Discounts	
		FROM PurchaseReceipt SI (NOLOCK)     
		INNER JOIN PurchaseReceiptProduct SIP (NOLOCK) ON SI.PurRcptId=SIP.PurRcptId    
		INNER JOIN @PurchaseTaxPercent C ON C.RefId=SI.PurRcptId and C.RefId=SIP.PurRcptId and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16)))
		INNER JOIN Location L WITH (NOLOCK) on l.LcnId=SI.Lcnid
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid 
		WHERE VDT.VocRefNo= @PiValue    
		AND SI.CmpInvNo = @VoucherRefNo	
) X GROUP BY Inventorytype,LocationName,ProductCode,ProductName 
END
If UPPER(@sVocType)='JOURNAL'
BEGIN
	INSERT INTO @VoucherExportNode3
	SELECT DISTINCT 'Physical Inventory' AS Inventorytype,LcnName AS LocationName,Prdccode AS ProductCode,PrdName+'~'+Prdccode AS ProductName,
	SUM(TotalQty) AS Quantity,SUM(SIP.Amount) AS SalesValue ,
	0 as Discounts 
	FROM StockManagementProduct SIP 
	INNER JOIN StockManagement SI ON SI.StkMngRefNo=SIP.StkMngRefNo 
	INNER JOIN StdVocMaster VDT WITH (NOLOCK) on SI.StkMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,29,CHARINDEX(' Dated',VDT.Remarks)-29))) 
	INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid 
	INNER JOIN Location L WITH (NOLOCK) on l.LcnId=SI.Lcnid
	WHERE VDT.VocRefNo=@PiValue and VDT.Remarks Like '%Posted from stock%' Group by Prdccode,LcnName,PrdName
	UNION ALL
	SELECT DISTINCT 'Physical Inventory' AS Inventorytype,LcnName AS LocationName,Prdccode AS ProductCode,PrdName+'~'+Prdccode AS ProductName,
	SUM(TransferQty) AS Quantity,SUM(LD.TransferQty*PrdBatDetailValue) AS SalesValue ,
	0 as Discounts
	from LocationTransferDetails LD 
	INNER JOIN Product P on P.prdid=LD.prdid 
	INNER JOIN ProductbatchDetails PBD1 (Nolock) on pbd1.Prdbatid=LD.PrdBatId and PBD1.DefaultPrice=1 
	INNER JOIN BatchCreation BC (Nolock) On BC.SlNo=PBD1.SLNo AND BC.SelRte=1
	INNER JOIN LocationTransferMaster LM WITH (NOLOCK) ON LM.LcnRefNo=LD.LcnRefNo
	INNER JOIN Location L WITH (NOLOCK) on l.LcnId=LM.ToLcnid
	AND LD.LcnRefNo=@PiValue  Group by Prdccode,LcnName,PrdName
END
If UPPER(@sVocType)='PURCHASE RETURN'
BEGIN


INSERT INTO @PurchaseTaxPercent (RefId,Prdslno,TaxPerc,TaxableAmount) 
--SELECT A.PurRetId,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc ,SUM(DISTINCT A.TaxableAmount) as TaxableAmount
--FROM PurchaseReturnProductTax A(NOLOCK)     
--INNER JOIN PurchaseReturn B(NOLOCK) ON A.PurRetId = B.PurRetId  
--INNER JOIN TaxConfiguration T (NOLOCK) ON T.TaxId=A.TaxId      
--WHERE B.PurRetRefNo = @VoucherRefNo AND A.TaxableAmount > 0      and TaxCode NOT IN('InputGSTCess') 
--GROUP BY A.PurRetId,A.PrdSlNo  

SELECT  X.PurRetId,X.PrdSlNo,SUM(X.TaxPerc) as TaxPerc,SUM(DISTINCT TaxableAmount) as TaxableAmount
FROM (
SELECT A.PurRetId,A.PrdSlNo,(A.TaxPerc) as TaxPerc ,(CASE WHEN TaxCode IN('InputGSTCess') THEN 0 ELSE A.TaxableAmount END) as TaxableAmount
FROM PurchaseReturnProductTax A(NOLOCK)     
INNER JOIN PurchaseReturn B(NOLOCK) ON A.PurRetId = B.PurRetId 
INNER JOIN TaxConfiguration T (NOLOCK) ON T.TaxId=A.TaxId    
WHERE B.PurRetRefNo = @VoucherRefNo AND A.TaxableAmount > 0 
  )X
GROUP BY X.PurRetId,X.PrdSlNo 

INSERT INTO @VoucherExportNode3 
SELECT Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity)Quantity,CONVERT(Numeric(18,2),SUM(SalesValue))SalesValue,
SUM(Discounts) as Discounts
FROM (
		SELECT 
		CASE WHEN VatGst='VAT' THEN
		'Purchase Return Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE 
		'Purchase Return Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%'
		END	AS Inventorytype,LcnName as LocationName,
		Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(RetInvBaseQty) as Quantity,
		(PrdGrossAmount) as SalesValue,SIP.PrdSlNo ,
		-1*(PrdDiscount) as Discounts	
		--(TaxableAmount) as SalesValue,SIP.PrdSlNo 
		FROM PurchaseReturn SI (NOLOCK)     
		INNER JOIN PurchaseReturnProduct SIP (NOLOCK) ON SI.PurRetId=SIP.PurRetId    
		INNER JOIN @PurchaseTaxPercent C ON C.RefId=SI.PurRetId and C.RefId=SIP.PurRetId and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurRetRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28))) 
		INNER JOIN Location L WITH (NOLOCK) ON l.LcnId=SI.Lcnid   
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid
		WHERE VDT.VocRefNo= @PiValue    
		AND SI.PurRetRefNo = @VoucherRefNo		
) X GROUP BY  Inventorytype,LocationName,ProductCode,ProductName
END
If UPPER(@sVocType)='SALES- REPLACEMENT OUT'
	Begin
		INSERT INTO @VoucherExportNode3
		select distinct 'Sales Account' as Inventorytype,'LcnName' as LocationName,Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,
		sum(RepQty) as Quantity,Sum(RepAmount) as SalesValue ,
		0 as Discounts
		from ReplacementOut SIP WITH (NOLOCK) 
		Inner Join Product P WITH (NOLOCK) on P.prdid=Sip.prdid
		Inner join StdVocMaster VDT WITH (NOLOCK) on SIP.RepRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,34,CHARINDEX(' Dated',VDT.Remarks)-34)))
		Where VDT.VocRefNo=@PiValue Group by Prdccode,PrdName
	END
If UPPER(@sVocType)='SALES- REPLACEMENT IN'
	Begin
	INSERT INTO @VoucherExportNode3
		select distinct 'Sales Account' as Inventorytype,'LcnName' as LocationName,Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,
		sum(RtnQty) as Quantity,Sum(RtnAmount) as SalesValue ,
		0 as Discounts 
		from ReplacementIn SIP WITH (NOLOCK) 
		Inner Join Product P WITH (NOLOCK) on P.prdid=Sip.prdid
		Inner join StdVocMaster VDT WITH (NOLOCK) on SIP.RepRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,34,CHARINDEX(' Dated',VDT.Remarks)-34)))
		Where VDT.VocRefNo=@PiValue Group by Prdccode,PrdName
	END
If UPPER(@sVocType)='Stock Ledger'
BEGIN
	
		DECLARE @ProdDetail TABLE
		(
			lcnid	INT,
			PrdId	INT,
			PrdBatId INT,
			TransDate DATETIME
		)
		
		INSERT INTO @ProdDetail
		select lcnid,PrdId,prdbatid ,max(TransDate) as TransDate FROM StockLedger Stk (nolock)
			WHERE Stk.TransDate < @VoucherRefNo
		Group by lcnid,PrdId,prdbatid
		
		INSERT INTO @VoucherExportNode3
		select 'Physical Inventory' as Inventorytype,l.LcnName AS LocationName,PRD.PrdcCode AS ProductCode,PRD.PrdName+'~'+Prdccode AS ProductName,
		(sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock) as Quantity,
		(ISNULL((sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock),0)* PBD.PrdBatDetailValue) AS salesvalue,
		0 as Discounts
		--,PDC.PrdBatCode
		--sl.LcnId,sl.PrdId,sl.PrdBatId 
		FROM StockLedger sl (NOLOCK)
		INNER JOIN @ProdDetail  PrdDet ON Sl.PrdBatId= PrdDet.PrdBatId and sl.PrdId = PrdDet.PrdId 
		INNER JOIN Location L (NOLOCK) ON L.LcnId = PrdDet.lcnid
		INNER JOIN Product PRD (NOLOCK) ON PRD.PrdId = sl.PrdId
		INNER JOIN ProductbatchDetails PBD (NOLOCK) ON pbd.Prdbatid=sl.PrdBatId and PBD.DefaultPrice=1 
		INNER JOIN BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
		INNER JOIN ProductBatch PDC WITH (NOLOCK) ON PDC.PrdBatId = PrdDet.PrdBatId AND PDC.PrdId = PrdDet.PrdId
		AND Sl.lcnid = PrdDet.lcnid AND Sl.TransDate = PrdDet.TransDate	
		where (sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock) <> 0
		ORDER BY sl.PrdId
END
If UPPER(@sVocType)='IDT'
BEGIN
		INSERT INTO @IDTTaxPercent (RefId,Prdslno,TaxPerc	) 
		SELECT A.IDTMngRefNo,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
		FROM IDTManagementProductTax A(NOLOCK)     
		INNER JOIN IDTManagement B(NOLOCK) ON A.IDTMngRefNo = B.IDTMngRefNo     
		WHERE B.IDTMngRefNo = @VoucherRefNo AND A.TaxableAmount > 0	 and StkMgmtTypeId=2	  
		GROUP BY A.IDTMngRefNo,A.PrdSlNo  

		INSERT INTO @VoucherExportNode3 
		SELECT Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity)Quantity,CONVERT(Numeric(18,2),SUM(SalesValue))SalesValue,
		0 as Discounts
		FROM (
		SELECT 
		CASE WHEN IDTMngDate<='2017-06-30' THEN
		'Sales Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE
		'Sales Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END AS Inventorytype,LcnName as LocationName,
			Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(Qty) as Quantity,(PrdGrossAmount) as SalesValue ,SIP.PrdSlNo 
		FROM IDTManagement SI (NOLOCK)     
		INNER JOIN IDTManagementProduct SIP (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo    
		INNER JOIN @IDTTaxPercent C ON C.RefId=SI.IDTMngRefNo and C.RefId=SIP.IDTMngRefNo and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26)))
		INNER JOIN Location L WITH (NOLOCK) ON l.LcnId=SI.Lcnid   
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid
		WHERE VDT.VocRefNo= @PiValue     and StkMgmtTypeId=2
		AND SI.IDTMngRefNo = @VoucherRefNo		
		) X GROUP BY  Inventorytype,LocationName,ProductCode,ProductName
END

If UPPER(@sVocType)='IDT IN'
BEGIN

		INSERT INTO @IDTTaxPercent (RefId,Prdslno,TaxPerc	) 
		SELECT A.IDTMngRefNo,A.PrdSlNo,SUM(A.TaxPerc) as TaxPerc 
		FROM IDTManagementProductTax A(NOLOCK)     
		INNER JOIN IDTManagement B(NOLOCK) ON A.IDTMngRefNo = B.IDTMngRefNo     
		WHERE B.IDTMngRefNo = @VoucherRefNo AND A.TaxableAmount > 0	 and StkMgmtTypeId=1	  
		GROUP BY A.IDTMngRefNo,A.PrdSlNo  

		INSERT INTO @VoucherExportNode3 
		SELECT Inventorytype,LocationName,ProductCode,ProductName,SUM(Quantity)Quantity,CONVERT(Numeric(18,2),SUM(SalesValue))SalesValue,
		0 as Discounts
		FROM (
		SELECT 
		CASE WHEN IDTMngDate<='2017-06-30' THEN
		'Purchase Account VAT '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' 
		ELSE 'Purchase Account GST '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' END
		AS Inventorytype,LcnName as LocationName,
			Prdccode as ProductCode,PrdName+'~'+Prdccode as ProductName,(Qty) as Quantity,(PrdGrossAmount) as SalesValue ,SIP.PrdSlNo 
		FROM IDTManagement SI (NOLOCK)     
		INNER JOIN IDTManagementProduct SIP (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo    
		INNER JOIN @IDTTaxPercent C ON C.RefId=SI.IDTMngRefNo and C.RefId=SIP.IDTMngRefNo and    SIP.PrdSlNo=C.Prdslno 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26))) 
		INNER JOIN Location L WITH (NOLOCK) ON l.LcnId=SI.Lcnid   
		INNER JOIN Product P WITH (NOLOCK) on P.prdid=Sip.prdid
		WHERE VDT.VocRefNo= @PiValue     and StkMgmtTypeId=1
		AND SI.IDTMngRefNo = @VoucherRefNo		
		) X GROUP BY  Inventorytype,LocationName,ProductCode,ProductName
END

If UPPER(@sVocType)<>'SALES' AND UPPER(@sVocType)<>'SALES- REPLACEMENT IN' AND UPPER(@sVocType)<>'SALES- REPLACEMENT OUT' 
AND UPPER(@sVocType)<>'PURCHASE RETURN' AND UPPER(@sVocType)<>'PURCHASE' AND UPPER(@sVocType)<>'SALES RETURN' and UPPER(@sVocType)<>'JOURNAL'
AND UPPER(@sVocType)<>'Stock Ledger' AND UPPER(@sVocType)<>'IDT' AND  UPPER(@sVocType)<>'IDT IN'
	Begin
		INSERT INTO @VoucherExportNode3
		Select 'Null' as  Inventorytype,'Null' as LocationName,'Null' as ProductCode,'Null' as ProductName,0 as Quantity,0 as salesvalue,
		0 as Discounts
		End
		If Not exists (select * from @VoucherExportNode3)
		Begin
		INSERT INTO @VoucherExportNode3
		Select 'Null' as  Inventorytype,'Null' as LocationName,'Null' as ProductCode,'Null' as ProductName,0 as Quantity,0 as salesvalue,
		0 as Discounts
	END
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_VoucherExportNode4' AND XTYPE='TF')
DROP  FUNCTION Fn_VoucherExportNode4
GO
CREATE FUNCTION Fn_VoucherExportNode4(@sVocType as varchar(200),@PiValue as varchar(200),@VoucherRefNo AS Varchar(200))
RETURNS @VoucherExportNode4 TABLE
(
	BillNo		varchar(50),
	Amount		Numeric(18,4),
	DealerName		varchar(50)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode4
* PURPOSE	: Returns the Adjustment Details of Bill
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE			AUTHOR			DESCRIPTION
*21/02/2013		Gopikrishnan	Nolock is added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
If @VoucherRefNo<>'Manual Entry'
Begin
If UPPER(@sVocType)='SALES' 
BEGIN
	INSERT INTO @VoucherExportNode4
		select Distinct * from 
		(
		Select distinct CDH.Srno as BillNo,-(DiffAmount) AS Amount,CmpRtrCode from ReplacementHd RH WITH (NOLOCK) Inner Join SalesInvoice SI WITH (NOLOCK) on si.SalId=RH.Salid
		inner join CreditNoteReplacementDT CDT WITH (NOLOCK) on cdt.RepNo=RH.RepRefNo  and cdt.Replacement=1
		inner join CreditNoteReplacementHD CDH WITH (NOLOCK) on cdh.CNRRefNo=cdt.CNRRefNo 
		and SalInvNo=@VoucherRefNo 
		INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
		UNION
		SELECT DISTINCT CrNoteNumber as BillNo,-(RH.CrAdjAmount) as Amount,CmpRtrCode from SalInvCrNoteAdj RH WITH (NOLOCK) Inner join SalesInvoice SI WITH (NOLOCK) on SI.SalId=RH.Salid and SalInvNo=@VoucherRefNo and Dlvsts not in (3)
		INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId		
		UNION
		SELECT DISTINCT DbNoteNumber as BillNo,(RH.DbAdjAmount) as Amount,CmpRtrCode from SalInvDBNoteAdj RH WITH (NOLOCK) Inner join SalesInvoice SI WITH (NOLOCK) on SI.SalId=RH.Salid and SalInvNo=@VoucherRefNo and Dlvsts not in (3)
		INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
		Union 
		SELECT Distinct 'Null' as Billno,0 as  Amount,'Null' RtrName from SalesInvoice WITH (NOLOCK) where salinvno not in (select Distinct salinvno from 
		(Select distinct Salinvno from ReplacementHd RH WITH (NOLOCK) Inner Join SalesInvoice SI WITH (NOLOCK) on si.SalId=RH.Salid 
		and SalInvNo=@VoucherRefNo 
		UNION
		SELECT distinct Salinvno from SalInvCrNoteAdj RH WITH (NOLOCK)Inner join SalesInvoice SI WITH (NOLOCK) on SI.SalId=RH.Salid and SalInvNo=@VoucherRefNo and Dlvsts not in (3)
		UNION
		SELECT distinct Salinvno from SalInvDBNoteAdj RH WITH (NOLOCK) Inner join SalesInvoice SI WITH (NOLOCK) on SI.SalId=RH.Salid and SalInvNo=@VoucherRefNo and Dlvsts not in (3)) B) and SalInvNo=@VoucherRefNo)A
--UNION
--SELECT distinct 'Invoice Discount' as BillNo,SalInvLvlDisc as Amount from  SalesInvoice where  SalInvNo=@VoucherRefNo  and SalInvLvlDisc>0
--UNION
--SELECT distinct 'OnAccount' as BillNo,OnAccountAmount as Amount from  SalesInvoice where  SalInvNo=@VoucherRefNo  and OnAccountAmount>0
End
--If UPPER(@sVocType)<>'SALES' AND (@sVocType)<>'RECEIPT' 
--Begin
--INSERT INTO @VoucherExportNode4
--select distinct 'Null' as Billno,0 as Amount 
--END
If UPPER(@sVocType)='RECEIPT'
BEGIN
If Exists (select Voctype from Stdvocmaster where Remarks lIKE '%' + CAST(@VoucherRefNo as nVarChar(25)) + '%' and Remarks Not like '%Posted from Receipt Cancellation%' and VocRefNo=@PiValue 
Group by VocType having count(Vocrefno)>1)
---vOCREFNO=@Pivalue is added by Gopikrishnan at 04/05/2013
BEGIN
	INSERT INTO @VoucherExportNode4
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-22)))
	AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode  from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21))) 
	AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode  from ReceiptInvoice RI
	inner join StdvocMaster VDT on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-14))) 
	AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode  from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-17))) 
	AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-18))) 
	AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode   from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-19))) 
	AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,35,CHARINDEX('(',VDT.Remarks)-35)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and VDT.Remarks like '%Posted From Receipt Cash Discount%'
	 AND RI.InvRcpNo=Right(@VoucherRefNo,10) and VDT.VocRefNo=@PiValue
	 INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-22))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,Salinvamt as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-14))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,Salinvamt as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-17))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,Salinvamt as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-18))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,Salinvamt as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,Salinvamt as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-19))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-22))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-14))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-17))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-18))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	UNION all
	SELECT DISTINCT CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-19))) 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	AND VDT.VocRefNo=@PiValue AND InvRcpMode=5 AND SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON  SI.RtrId=R.RtrId
END
ELSE
BEGIN
	INSERT INTO @VoucherExportNode4
	SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=Right(Left(VDT.Remarks,30),10)
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue 
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId	
	Union all
	SELECT Distinct CNA.NoteNo as BillNo,(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=Right(Left(VDT.Remarks,30),10)
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join DebitNoteRetailer DBN WITH (NOLOCK) ON DBN.DbNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=6 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
	Union all
	SELECT DISTINCT CNA.NoteNo as BillNo,-(Salinvamt) as Amount,CmpRtrCode from ReceiptInvoice RI WITH (NOLOCK)
	inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=Right(Left(VDT.Remarks,30),10)
	Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId 
	Inner Join CRDBNoteAdjustment CNA WITH (NOLOCK) ON CNA.SalId=Si.SalId and CNA.SalId=RI.SalId 
	Inner Join CreditNoteRetailer DBN WITH (NOLOCK) ON DBN.CrNoteNumber=CNA.NoteNo AND RI.InvRcpNo=CNA.InvRcpNo AND RI.InvRcpNo=@VoucherRefNo
	and VDT.VocRefNo=@PiValue AND InvRcpMode=5 and SalInvAmt>0
	INNER JOIN Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId
END
End
If UPPER(@sVocType)='PAYMENT'
BEGIN
INSERT INTO @VoucherExportNode4
SELECT DISTINCT Cmpinvno as Billno,-(PPG.PayAmount) as Amount,SpmName  from PurchaseReceipt PR WITH (NOLOCK) inner join PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId Inner Join
PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo and PPG.PayAdvNo=LEFT(@VoucherRefNo,10)
INNER JOIN StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=LEFT(@VoucherRefNo,10)
and VDT.Vocrefno=@PiValue and VDT.Remarks  like '%Cheque%' 
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
Union
SELECT DISTINCT Cmpinvno as Billno,-(PPG.PayAmount) as Amount,SpmName from PurchaseReceipt PR WITH (NOLOCK) inner join PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId Inner Join
PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo and PPG.PayAdvNo=Left(@VoucherRefNo,10)
Inner join StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=Left(@VoucherRefNo,10)
and VDT.Vocrefno=@PiValue and VDT.Remarks  like '%RTGS%' 
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
Union
SELECT DISTINCT Cmpinvno as Billno,-(PPG.PayAmount) as Amount,SpmName CmpRtrCode from PurchaseReceipt PR WITH (NOLOCK) inner join PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId Inner Join
PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo and PPG.PayAdvNo=Left(@VoucherRefNo,10)
Inner join StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=Left(@VoucherRefNo,10)
and VDT.Vocrefno=@PiValue and  VDT.Remarks  like '%DD%'
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
UNION
SELECT DISTINCT Cmpinvno as Billno,-(PPG.PayAmount) as Amount,SpmName from PurchaseReceipt PR WITH (NOLOCK) inner join PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId Inner Join
PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo and PPG.PayAdvNo=Left(@VoucherRefNo,10)
Inner join StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=Left(@VoucherRefNo,10)
and VDT.Vocrefno=@PiValue and VDT.Remarks Like '%Posted from Payment Register%' and VDT.Remarks not like '%Cheque%' and VDT.Remarks not like '%RTGS%' and VDT.Remarks not like '%DD%'  and AutoGen=1
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
--Added By Sathishkumar Veeramani 2013/01/18
UNION 
--Credit Note
SELECT DISTINCT CDA.NoteNo,AdjAmount AS Amount,SpmName FROM PurchaseReceipt PR WITH (NOLOCK)
INNER JOIN PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId 
INNER JOIN PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo AND PPG.PayAdvNo=LEFT(@VoucherRefNo,10)
INNER JOIN StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=LEFT(@VoucherRefNo,10)
INNER JOIN CRDBNotePayAdjustment CDA WITH (NOLOCK) ON PP.PayAdvNo = CDA.PayAdvNo AND CDA.AdjMode = 2
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
UNION
--Debit Note
SELECT DISTINCT CDA.NoteNo,-1 * AdjAmount AS Amount,SpmName FROM PurchaseReceipt PR WITH (NOLOCK)
INNER JOIN PurchasePaymentGRN PPG WITH (NOLOCK) ON PR.PurRcptId=PPG.PurRcptId 
INNER JOIN PurchasePayment PP WITH (NOLOCK) ON PP.PayAdvNo=PPG.PayAdvNo AND PPG.PayAdvNo=LEFT(@VoucherRefNo,10)
INNER JOIN StdVocMaster VDT WITH (NOLOCK) on PP.PayAdvNo=LEFT(@VoucherRefNo,10)
INNER JOIN CRDBNotePayAdjustment CDA WITH (NOLOCK) ON PP.PayAdvNo = CDA.PayAdvNo AND CDA.AdjMode = 1
INNER JOIN Supplier S WITH (NOLOCK) ON PP.SpmId=S.SpmId
END--Till Here
If UPPER(@sVocType)='JOURNAL' 
BEGIN
INSERT INTO @VoucherExportNode4
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-32)))
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%' 
UNION
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-33)))
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%' 
UNION
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-37)))
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%' 
UNION
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-35))) 
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%' 
UNION
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-30)))
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%' 
UNION
SELECT Distinct si.salinvno as BillNo,RI.SALINVAMT  as Amount,'Null' RtrName  from ReceiptInvoice RI WITH (NOLOCK)
inner join StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,33,CHARINDEX('(',VDT.Remarks)-33)))
Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,53,CHARINDEX('(',VDT.Remarks)-34))) 
AND RI.InvRcpNo=@VoucherRefNo and VDT.VocRefNo=@PiValue and VDT.Remarks like '%Posted From Receipt CanCellation%'
--Added By Sathishkumar Veeramani 2013/01/18  
--Credit Note Details 
UNION  
SELECT DISTINCT SI.SalInvNo AS BillNo,SCR.CrAdjAmount AS Amount,RtrName FROM StdVocMaster A WITH (NOLOCK) 
INNER JOIN CreditNoteRetailer PR WITH (NOLOCK) ON PR.CrNoteNumber = SUBSTRING(A.Remarks,34,LEN(PR.CrNoteNumber))AND PR.CrNoteNumber = @VoucherRefNo
INNER JOIN SalInvCrNoteAdj SCR WITH (NOLOCK) ON SCR.CrNoteNumber = PR.CrNoteNumber
INNER JOIN SalesInvoice SI WITH (NOLOCK) ON SI.SalId = SCR.SalId
INNER JOIN Retailer R WITH (NOLOCK)ON SI.RtrId = R.RtrId 
WHERE A.Remarks LIKE '%Credit Note Retailer%'
UNION
SELECT DISTINCT RI.InvRcpNo AS BillNo,SCR.AdjAmount AS Amount,RtrName FROM StdVocMaster A WITH (NOLOCK)
INNER JOIN CreditNoteRetailer PR WITH (NOLOCK) ON PR.CrNoteNumber = SUBSTRING(A.Remarks,34,LEN(PR.CrNoteNumber)) AND PR.CrNoteNumber = @VoucherRefNo
INNER JOIN CRDBNoteAdjustment SCR WITH (NOLOCK)ON PR.CrNoteNumber = SCR.NoteNo AND AdjMode = 5 
INNER JOIN SalesInvoice SI WITH (NOLOCK)ON SI.SalId = SCR.SalId AND SCR.SalId = SI.SalId
INNER JOIN ReceiptInvoice RI WITH (NOLOCK)ON RI.SalId = SI.SalId AND RI.InvRcpNo = SCR.InvRcpNo
INNER JOIN Retailer R WITH (NOLOCK)ON SI.RtrId = R.RtrId
WHERE A.Remarks LIKE '%Credit Note Retailer%'
UNION
SELECT DISTINCT C.PayAdvNo AS BillNo,AdjAmount,SpmName FROM StdVocMaster A WITH (NOLOCK) 
INNER JOIN CreditNoteSupplier PR WITH (NOLOCK) ON PR.CrNoteNumber = SUBSTRING(A.Remarks,34,LEN(PR.CrNoteNumber)) AND PR.CrNoteNumber = @VoucherRefNo
INNER JOIN CRDBNotePayAdjustment B WITH (NOLOCK) ON PR.CrNoteNumber = B.NoteNo AND AdjMode = 2
INNER JOIN PurchasePayment C WITH (NOLOCK) ON C.PayAdvNo = B.PayAdvNo
INNER JOIN Supplier D WITH (NOLOCK) ON C.SpmId = D.SpmId
WHERE A.Remarks LIKE '%Credit Note Supplier%'
--Debit Note Details
UNION
SELECT DISTINCT SI.SalInvNo AS BillNo,SCR.DbAdjAmount AS Amount,RtrName FROM StdVocMaster A WITH (NOLOCK) 
INNER JOIN DebitNoteRetailer PR WITH (NOLOCK) ON PR.DbNoteNumber = SUBSTRING(A.Remarks,33,LEN(PR.DbNoteNumber)) AND PR.DbNoteNumber = @VoucherRefNo
INNER JOIN SalInvDbNoteAdj SCR WITH (NOLOCK) ON SCR.DbNoteNumber = PR.DbNoteNumber
INNER JOIN SalesInvoice SI WITH (NOLOCK) ON SI.SalId = SCR.SalId
INNER JOIN Retailer R WITH (NOLOCK)ON SI.RtrId = R.RtrId
WHERE A.Remarks LIKE '%Debit Note Retailer%' 
UNION
SELECT DISTINCT RI.InvRcpNo AS BillNo,SCR.AdjAmount AS Amount,RtrName FROM StdVocMaster A WITH (NOLOCK)
INNER JOIN DebitNoteRetailer PR WITH (NOLOCK) ON PR.DbNoteNumber = SUBSTRING(A.Remarks,33,LEN(PR.DbNoteNumber)) AND PR.DbNoteNumber = @VoucherRefNo
INNER JOIN CRDBNoteAdjustment SCR WITH (NOLOCK)ON PR.DbNoteNumber = SCR.NoteNo AND AdjMode = 6 
INNER JOIN SalesInvoice SI WITH (NOLOCK)ON SI.SalId = SCR.SalId AND SCR.SalId = SI.SalId
INNER JOIN ReceiptInvoice RI WITH (NOLOCK)ON RI.SalId = SI.SalId AND RI.InvRcpNo = SCR.InvRcpNo
INNER JOIN Retailer R WITH (NOLOCK)ON SI.RtrId = R.RtrId
WHERE A.Remarks LIKE '%Debit Note Retailer%'
UNION
SELECT DISTINCT C.PayAdvNo AS BillNo,AdjAmount as Amount,SpmName FROM StdVocMaster A WITH (NOLOCK) 
INNER JOIN DebitNoteSupplier PR WITH (NOLOCK) ON PR.DbNoteNumber = SUBSTRING(A.Remarks,33,LEN(PR.DbNoteNumber)) AND PR.DbNoteNumber = @VoucherRefNo
INNER JOIN CRDBNotePayAdjustment B WITH (NOLOCK) ON PR.DbNoteNumber = B.NoteNo AND AdjMode = 1
INNER JOIN PurchasePayment C WITH (NOLOCK) ON C.PayAdvNo = B.PayAdvNo
INNER JOIN Supplier D WITH (NOLOCK) ON C.SpmId = D.SpmId
WHERE A.Remarks LIKE '%Debit Note Supplier%'
END--Till Here
IF NOT EXISTS (select * from @VoucherExportNode4)
BEGIN
INSERT INTO @VoucherExportNode4
SELECT DISTINCT 'Null' as Billno,0 as Amount,'Null' RtrName
END
END
ELSE
BEGIN
INSERT INTO @VoucherExportNode4
SELECT DISTINCT 'Null' as Billno,0 as Amount,'Null' RtrName
END
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_VoucherExportNode5' AND XTYPE='TF')
DROP FUNCTION Fn_VoucherExportNode5
GO
CREATE FUNCTION Fn_VoucherExportNode5(@sVocType as varchar(200),@PiValue as varchar(200),@VoucherRefNo as Varchar(200))
RETURNS @VoucherExportNode5 TABLE
(
	ChequeNo			VARCHAR(200),
	ChequeDate		Datetime,
	BankName			varchar(150)
)
AS
/*
	SELECT * FROM DBO.Fn_VoucherExportNode4('RECEIPT','RCP1200061','RCP1200108')
*/
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode5
* PURPOSE	: Returns the Cheque Details of Collection
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE        AUTHOR     DESCRIPTION
* 08/01/2013  Gopi       NEFT details Included
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
If UPPER(@VoucherRefNo)<>'MANUAL ENTRY'
BEGIN
If UPPER(@sVocType)='RECEIPT'
BEGIN
If Exists (select Voctype from Stdvocmaster WITH (NOLOCK) where Remarks lIKE '%' + CAST(@VoucherRefNo as nVarChar(25)) + '%' Group by VocType having count(Vocrefno)>1)
BEGIN
	INSERT INTO @VoucherExportNode5
	select Distinct * from 
		(SELECT Distinct Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName as ChequeNo,
		Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21))) 
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName  as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21)))  
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct  Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName  as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-19)))  
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union all
		SELECT Distinct  Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName  as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-18)))  
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union all
		SELECT Distinct  Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName  as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))and VDT.Vocrefno=@PiValue 
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-17)))  
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct  Invinsno + '-'+ Convert(nvarchar(10),Invinsamt)+'-'+RtrName  as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue 
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-14)))  
		Inner join Retailer R WITH (NOLOCK) ON SI.RtrId=R.RtrId 
		and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union all
		select 'Null' as ChequeNo,'' as Chequedate,'null' as Bankname from ReceiptInvoice WITH (NOLOCK) where InvRcpNo=@VoucherRefNo and InvRcpMode not in (3)
		and InvRcpNo not in (select RI.Invrcpno from  ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-22)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invrcpno from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-21)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invrcpno from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-19)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invrcpno from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-18)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invrcpno from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21)))and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-17)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
Union All
		SELECT Distinct Invrcpno from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,21,CHARINDEX('(',VDT.Remarks)-21))) and VDT.Vocrefno=@PiValue
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId and Si.SalInvNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,40,CHARINDEX('(',VDT.Remarks)-14)))  
		 and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%') )A
END
ELSE
BEGIN
   INSERT INTO @VoucherExportNode5
        SELECT Distinct  Invinsno + '-'+ Convert(nvarchar(10),Invinsamt) as ChequeNo,Invinsdate as ChequeDate,B.Bnkname as BankName from ReceiptInvoice RI WITH (NOLOCK) inner join Bank B WITH (NOLOCK) On
		RI.Bnkid=B.Bnkid and RI.Invrcpno=@VoucherRefNo and InvRcpMode in (3,4,8,10)
		inner Join  StdvocMaster VDT WITH (NOLOCK) on RI.InvRcpNo=Right(Left(VDT.Remarks,30),10)
		Inner Join SalesInvoice si WITH (NOLOCK) on si.SalId=RI.SalId 
		and VDT.Vocrefno=@PiValue and VDT.Remarks Like '%cheque%' Or VDT.Remarks Like '%NEFT%' Or VDT.Remarks Like '%RTGS%'
END
END
If UPPER(@sVocType)='PAYMENT'
BEGIN
	INSERT INTO @VoucherExportNode5
	SELECT DISTINCT Payinsno + '-'+ Convert(nvarchar(10),Payinsamt) as ChequeNo,Payinsdate as Chequedate,B.Bnkname as BankName from PurchasePaymentDetails PPD WITH (NOLOCK) inner join Bank B WITH (NOLOCK)
	on PPD.BnkId=B.BnkId Inner join StdVocMaster VDT WITH (NOLOCK) on ppd.PayAdvNo=LEFT(@VoucherRefNo,10)
	and VDT.Vocrefno=@PiValue and VDT.Remarks Like '%cheque%'
 Union All
	SELECT DISTINCT Payinsno + '-'+ Convert(nvarchar(10),Payinsamt) as ChequeNo,Payinsdate as Chequedate,B.Bnkname as BankName from PurchasePaymentDetails PPD WITH (NOLOCK) inner join Bank B WITH (NOLOCK)
	on PPD.BnkId=B.BnkId Inner join StdVocMaster VDT WITH (NOLOCK) on ppd.PayAdvNo=LEFT(@VoucherRefNo,10)
	and VDT.Vocrefno=@PiValue and VDT.Remarks Not Like '%Cheque%'
END
If UPPER(@sVocType)='JOURNAL'
BEGIN
IF EXISTS (SELECT * FROM STDVOCMASTER WHERE VOCREFNO=@PiValue  and Remarks  Like '%Posted from ChequePayment%')
BEGIN
    INSERT INTO @VoucherExportNode5
	SELECT distinct  ChequeNo + '-'+ Convert(nvarchar(10),Invinsamt),Invinsdate AS ChequeDate,B.Bnkname as BankName from ChequePayment CP WITH (NOLOCK) Inner Join ReceiptInvoice RI WITH (NOLOCK) ON CP.Chequeno=RI.Invinsno
	INNER JOIN Bank B On B.Bnkid=CP.BnkId Inner join StdVocMaster VDT WITH (NOLOCK) on VDT.Vocrefno=@PiValue 
	and ChequePayid=@VoucherRefNo and VDT.Remarks  Like '%Posted from ChequePayment%'
END
END
END
IF NOT EXISTS (select * from @VoucherExportNode5)
Begin
	INSERT INTO @VoucherExportNode5
	SELECT 'Null' as ChequeNo,'' as Chequedate,'null' as Bankname
END
RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_VoucherExportNode6')
DROP FUNCTION Fn_VoucherExportNode6
GO
-- SELECT * FROM dbo.Fn_VoucherExportNode6('Stock Ledger','2016-08-23','2016-08-22','AFCCP01') 
CREATE Function [Fn_VoucherExportNode6]
(
	@sVocType		as varchar(200),
	@PiValue		as varchar(200),
	@VoucherRefNo	as Varchar(200),
	@Prdcode		as varchar(200)
)
RETURNS @VoucherExportNode6 TABLE
(
	BatchCode	VARCHAR(200)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode6
* PURPOSE	: Returns the IMEINO details of product
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE            AUTHOR		CR/BZ			USER STORY ID				DESCRIPTION
* 13.02.2013	Gopikrishnan												Journal Type Imei Number Added
* 02/11/2017    Murugan.R		CR				CCRSTAML1028				IDT Transaction Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
DECLARE @QTY AS INT
DECLARE @CNT AS INT
If UPPER(@sVocType)='SALES'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(
			SELECT PB.PrdBatId,PrdBatCode,BaseQty,CONVERT(NUMERIC(18,2),PrdGrossAmount)PrdGrossAmount 
			FROM SalesInvoice SI(NOLOCK) 
			INNER JOIN SalesInvoiceProduct SIP(NOLOCK) ON SI.SALID=SIP.SalId 
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId
			WHERE SalInvNo=@VoucherRefNo AND PrdCCode=@Prdcode
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A
	ORDER BY PrdBatId		
END
If UPPER(@sVocType)='PURCHASE'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(
			SELECT PB.PrdBatId,PrdBatCode,InvBaseQty AS BaseQty,CONVERT(NUMERIC(18,2),PrdGrossAmount)PrdGrossAmount 
			FROM PurchaseReceipt SI(NOLOCK)
			INNER JOIN PurchaseReceiptProduct SIP(NOLOCK) ON SI.PurRcptId=SIP.PurRcptId
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE Cmpinvno=@VoucherRefNo and PrdCCode=@Prdcode
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A
	ORDER BY PrdBatId		
END
If UPPER(@sVocType)='PURCHASE RETURN'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(		
			SELECT PB.PrdBatId,PrdBatCode,RetInvBaseQty AS BaseQty,CONVERT(NUMERIC(18,2),PrdGrossAmount)PrdGrossAmount 
			FROM PurchaseReturn SI(NOLOCK) 
			INNER JOIN PurchaseReturnProduct SIP(NOLOCK) ON SI.PurRetId=SIP.PurRetId
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE PurRetRefNo=@VoucherRefNo and PrdCCode=@Prdcode
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A	
	ORDER BY PrdBatId				
END
If UPPER(@sVocType)='SALES RETURN'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(			
			SELECT PB.PrdBatId,PrdBatCode,BaseQty,CONVERT(NUMERIC(18,2),PrdActualGross)PrdGrossAmount 
			FROM ReturnHeader SI(NOLOCK) 
			INNER JOIN ReturnProduct SIP(NOLOCK) ON SI.ReturnID=SIP.ReturnID
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE SI.ReturnCode =@VoucherRefNo and PrdCCode=@Prdcode
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A	
	ORDER BY PrdBatId				
			
END
If UPPER(@sVocType)='Journal'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(		
			SELECT PB.PrdBatId,PrdBatCode,TotalQty AS BaseQty,CONVERT(NUMERIC(18,2),Amount)PrdGrossAmount 
			FROM StockManagement SI(NOLOCK)  
			INNER JOIN StockManagementProduct SIP(NOLOCK)  ON SI.StkMngRefNo=SIP.StkMngRefNo
			INNER JOIN Product P(NOLOCK)  ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK)  ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE SI.StkMngRefNo =@VoucherRefNo and PrdCCode=@Prdcode
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A	
	ORDER BY PrdBatId			
END
If UPPER(@sVocType)='Stock Ledger'
BEGIN
		DECLARE @ProdDetail TABLE
		(
			lcnid	INT,
			PrdId	INT,
			PrdBatId INT,
			TransDate DATETIME
		)
		
		INSERT INTO @ProdDetail
		select lcnid,PrdId,prdbatid ,max(TransDate) as TransDate FROM StockLedger Stk (nolock)
			WHERE Stk.TransDate < @VoucherRefNo 
		Group by lcnid,PrdId,prdbatid
		
		INSERT INTO @VoucherExportNode6
		SELECT PrdBatCode + '~' + CAST((sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock) AS VARCHAR(20))+ '~' + 
		CAST((ISNULL((sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock),0)* PBD.PrdBatDetailValue) AS VARCHAR(20))AS PrdBatCode
		FROM StockLedger sl (NOLOCK)
		INNER JOIN @ProdDetail  PrdDet ON Sl.PrdBatId= PrdDet.PrdBatId and sl.PrdId = PrdDet.PrdId 
		INNER JOIN Location L (NOLOCK) ON L.LcnId = PrdDet.lcnid
		INNER JOIN Product PRD (NOLOCK) ON PRD.PrdId = sl.PrdId
		INNER JOIN ProductbatchDetails PBD (NOLOCK) ON pbd.Prdbatid=sl.PrdBatId and PBD.DefaultPrice=1 
		INNER JOIN BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
		INNER JOIN ProductBatch PDC WITH (NOLOCK) ON PDC.PrdBatId = PrdDet.PrdBatId AND PDC.PrdId = PrdDet.PrdId
		AND Sl.lcnid = PrdDet.lcnid AND Sl.TransDate = PrdDet.TransDate	
		where (sl.SalClsStock+sl.UnSalClsStock+sl.OfferClsStock) <> 0 AND PrdCCode =@Prdcode
		ORDER BY sl.PrdId		
END
--CCRSTAML1028 Start
If UPPER(@sVocType)='IDT'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(		
			SELECT PB.PrdBatId,PrdBatCode,Qty AS BaseQty,CONVERT(NUMERIC(18,2),PrdGrossAmount)PrdGrossAmount 
			FROM IDTManagement SI(NOLOCK) 
			INNER JOIN IDTManagementProduct SIP(NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE SI.IDTMngRefNo=@VoucherRefNo and PrdCCode=@Prdcode and SI.StkMgmtTypeId=2
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A	
	ORDER BY PrdBatId				
END
If UPPER(@sVocType)='IDT IN'
BEGIN
	INSERT INTO @VoucherExportNode6
	SELECT PrdBatCode 
	FROM
	(
		SELECT PrdBatId,PrdBatCode + '~' + CAST(SUM(BaseQty) AS VARCHAR(20))+ '~' + CAST(SUM(PrdGrossAmount) AS VARCHAR(20))AS PrdBatCode	 
		FROM
		(		
			SELECT PB.PrdBatId,PrdBatCode,Qty AS BaseQty,CONVERT(NUMERIC(18,2),PrdGrossAmount)PrdGrossAmount 
			FROM IDTManagement SI(NOLOCK) 
			INNER JOIN IDTManagementProduct SIP(NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo
			INNER JOIN Product P(NOLOCK) ON P.PrdId=SIP.PrdId
			INNER JOIN ProductBatch PB(NOLOCK) ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
			WHERE SI.IDTMngRefNo=@VoucherRefNo and PrdCCode=@Prdcode and SI.StkMgmtTypeId=1
		)A
		GROUP BY PrdBatId,PrdBatCode
	)A	
	ORDER BY PrdBatId				
END
--CCRSTAML1028 END

RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_VoucherExportNode7')
DROP FUNCTION Fn_VoucherExportNode7
GO
CREATE FUNCTION [Fn_VoucherExportNode7]
(
	@sVocType as varchar(200),
	@PiValue as varchar(200),
	@VoucherRefNo as Varchar(200),
	@Prdcode as varchar(200)
)
RETURNS @VoucherExportNode7 TABLE
(
	TaxRate			Nvarchar(400),
	TaxAmount		Numeric(18,4)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode7
* PURPOSE	: Returns the Tax details of product
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE            AUTHOR		CR/BZ			USER STORY ID				DESCRIPTION
* 15-02-2013  Gopikrishnan													Tax Amount Column Added	
* 02/11/2017  Murugan.R			CR				CCRSTAML1028				Cancelled Bill Details flow to Tally
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
If UPPER (@VoucherRefNo)<>'MANUAL ENTRY'
BEGIN
IF UPPER(@PiValue)<>'NULL'
BEGIN
If UPPER(@sVocType)='SALES'
BEGIN
	INSERT INTO @VoucherExportNode7
	SELECT TaxRate,SUM(TaxAmount)TaxAmount
	FROM 
	(	
		SELECT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,Convert(Numeric(18,2),TaxAmount) as TaxAmount 
		FROM Salesinvoiceproduct SIP (NOLOCK) 
		INNER JOIN Salesinvoice SI (NOLOCK) ON SI.Salid=SIP.Salid 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.Salinvno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
		INNER JOIN StdvocDetails VDD (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo 
		INNER JOIN CoaMaster COA (NOLOCK) ON VDD.CoaId=COA.CoaId 
		INNER JOIN Retailer R (NOLOCK) on R.Coaid=COA.Coaid and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
		INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid 
		INNER JOIN SalesInvoiceProductTax SIPT (NOLOCK) on Sipt.PrdSlNo=SIP.SlNo AND SIPT.SalId=SIP.SalId AND SIPT.SalId=SI.SALid and Sipt.TaxableAmount>0 --and TaxId in (2,3,4,5)
		INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId
		WHERE VDT.VocRefNo=@PiValue AND P.PrdCCode=@Prdcode
	)A
	GROUP BY TaxRate
	--INSERT INTO @VoucherExportNode7
	--SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,TaxAmount as TaxAmount 
	--from Salesinvoiceproduct SIP (NOLOCK) inner join Salesinvoice SI (NOLOCK) ON SI.Salid=SIP.Salid 
	--Inner join 
	--StdVocMaster VDT (NOLOCK) on SI.Salinvno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,20,CHARINDEX(' Dated',VDT.Remarks)-20)))
	--Inner Join StdvocDetails VDD (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo Inner Join CoaMaster COA (NOLOCK) ON VDD.CoaId=COA.CoaId Inner Join Retailer R (NOLOCK) on R.Coaid=COA.Coaid 
	--and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
	--Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid Inner join SalesInvoiceProductTax SIPT (NOLOCK) on Sipt.PrdSlNo=SIP.SlNo 
	--AND SIPT.SalId=SIP.SalId AND SIPT.SalId=SI.SALid and Sipt.TaxableAmount>0 --and TaxId in (2,3,4,5)
	--Inner Join TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId
	--Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
	
END 
END
---Added by Gopikrishnan at 21-03-2013 for Cancelled Bill Changes
IF UPPER(@PiValue)='NULL'
BEGIN
If UPPER(@sVocType)='SALES'
BEGIN
	INSERT INTO @VoucherExportNode7
	SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,TaxAmount as TaxAmount from Salesinvoiceproduct SIP (NOLOCK) inner join Salesinvoice SI (NOLOCK) ON SI.Salid=SIP.Salid Inner join 
    Retailer R (NOLOCK) on  R.rtrid=Si.rtrid 
	Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid Inner join SalesInvoiceProductTax SIPT (NOLOCK) on Sipt.PrdSlNo=SIP.SlNo 
	AND SIPT.SalId=SIP.SalId AND SIPT.SalId=SI.SALid and Sipt.TaxableAmount>0 --and TaxId in (2,3,4,5)
	Inner Join TaxConfiguration TC (NOLOCK) ON TC.TaxId=SIPT.TaxId
	Where P.PrdCCode=@Prdcode AND SI.SalInvNo=@VoucherRefNo AND DlvSts=3
END 
END
If UPPER(@sVocType)='SALES RETURN'
BEGIN
	INSERT INTO @VoucherExportNode7
	SELECT TaxRate,SUM(TaxAmount)TaxAmount
	FROM 
	(	
		SELECT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,-CONVERT(NUMERIC(18,2),(TaxAmt)) as TaxAmount 
		FROM ReturnProduct SIP (NOLOCK) 
		INNER JOIN ReturnHeader SI (NOLOCK) ON SI.Returnid=SIP.Returnid 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))
		INNER JOIN StdvocDetails VDD (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo
		INNER JOIN CoaMaster COA (NOLOCK) ON VDD.CoaId=COA.CoaId 
		INNER JOIN Retailer R (NOLOCK) on R.Coaid=COA.Coaid and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
		INNER JOIN ReturnProductTax rtp (NOLOCK) on RTP.PrdSlno=SIP.Slno AND RTP.ReturnId=sip.ReturnID and RTP.ReturnId=SI.ReturnID and rtp.TaxableAmt>0 --and TaxId in (2,3)
		INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=RTP.TaxId
		INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
	)A
	GROUP BY TaxRate
	--INSERT INTO @VoucherExportNode7
	--SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,-(TaxAmt) as TaxAmount from ReturnProduct SIP (NOLOCK) inner join ReturnHeader SI (NOLOCK) ON SI.Returnid=SIP.Returnid 
	--	Inner join StdVocMaster VDT (NOLOCK) on SI.ReturnCode=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,24,CHARINDEX(' Dated',VDT.Remarks)-24)))
	--	Inner Join StdvocDetails VDD (NOLOCK) on VDT.VocRefNo=VDD.VocRefNo
	--	Inner Join CoaMaster COA (NOLOCK) ON VDD.CoaId=COA.CoaId Inner Join Retailer R (NOLOCK) on R.Coaid=COA.Coaid and R.rtrid=Si.rtrid AND VDD.Coaid=R.Coaid
	--	Inner Join ReturnProductTax rtp (NOLOCK) on RTP.PrdSlno=SIP.Slno AND RTP.ReturnId=sip.ReturnID and RTP.ReturnId=SI.ReturnID and rtp.TaxableAmt>0 --and TaxId in (2,3)
	--	Inner Join TaxConfiguration TC (NOLOCK) ON TC.TaxId=RTP.TaxId
	--	Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
END
If UPPER(@sVocType)='PURCHASE'
BEGIN
	INSERT INTO @VoucherExportNode7
	SELECT TaxRate,SUM(TaxAmount)TaxAmount
	FROM 
	(	
		SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' AS TaxRate,-CONVERT(NUMERIC(18,2),(PRPT.TaxAmount)) as TaxAmount 
		FROM PurchaseReceiptProduct SIP (NOLOCK) 
		INNER JOIN PurchaseReceipt SI (NOLOCK) ON SI.Purrcptid=SIP.Purrcptid 
		INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurrcptRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16))) 
		INNER JOIN PurchaseReceiptProductTax PRPT (NOLOCK) on PRPT.Purrcptid=SI.Purrcptid AND PRPT.Purrcptid=SIP.Purrcptid AND PRPT.PrdSlNo=SIP.PrdSlNo AND PRPT.TaxableAmount>0 --and TaxId in (2,3)
		INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRPT.TaxId
		INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
	)A
	GROUP BY TaxRate
	--INSERT INTO @VoucherExportNode7
	--select distinct TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' AS TaxRate,-(PRPT.TaxAmount) as TaxAmount from PurchaseReceiptProduct SIP (NOLOCK) 
 --   inner join PurchaseReceipt SI (NOLOCK) ON SI.Purrcptid=SIP.Purrcptid 
	--Inner join StdVocMaster VDT (NOLOCK) on SI.PurrcptRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,16,CHARINDEX(' Dated',VDT.Remarks)-16))) 
	--iNNER join PurchaseReceiptProductTax PRPT (NOLOCK) on PRPT.Purrcptid=SI.Purrcptid AND PRPT.Purrcptid=SIP.Purrcptid AND PRPT.PrdSlNo=SIP.PrdSlNo AND PRPT.TaxableAmount>0 --and TaxId in (2,3)
	--Inner Join TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRPT.TaxId
	--Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
END
If UPPER(@sVocType)='PURCHASE RETURN'
BEGIN
		INSERT INTO @VoucherExportNode7
		SELECT TaxRate,SUM(TaxAmount)TaxAmount
		FROM 
		(	
			SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,CONVERT(NUMERIC(18,2),PRP.TaxAmount) as TaxAmount  
			FROM PurchaseReturnProduct SIP (NOLOCK)
			INNER JOIN PurchaseReturn SI (NOLOCK) ON SI.Purretid=SIP.Purretid 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28))) 
			INNER JOIN PurchaseReturnProductTax PRP (NOLOCK) ON PRP.PrdSlNo=SIP.PrdSlNo AND PRP.PurRetId=SIP.PurRetId AND PRP.PurRetId=SI.PurRetId and PRP.TaxableAmount>0 --and TaxId in (2,3)
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid
			INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRP.TaxId
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode 
			UNION 
			SELECT DISTINCT 'Null' as TaxRate,0.00 AS TaxAmount  
			FROM PurchaseReturnProduct SIP (NOLOCK) 
			INNER JOIN PurchaseReturn SI (NOLOCK) ON SI.Purretid=SIP.Purretid 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28))) 
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid and SI.PurRetId NOT IN (SELECT DISTINCT PurRetId FROM PurchaseReturnProductTax (NOLOCK))
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode
		)A
		GROUP BY TaxRate
	--INSERT INTO @VoucherExportNode7
	--select distinct TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,PRP.TaxAmount as TaxAmount  from PurchaseReturnProduct SIP (NOLOCK)
	--    inner join PurchaseReturn SI (NOLOCK) ON SI.Purretid=SIP.Purretid 
	--	Inner join StdVocMaster VDT (NOLOCK) on SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28))) 
	--	Inner Join PurchaseReturnProductTax PRP (NOLOCK) ON PRP.PrdSlNo=SIP.PrdSlNo AND PRP.PurRetId=SIP.PurRetId AND PRP.PurRetId=SI.PurRetId and PRP.TaxableAmount>0 --and TaxId in (2,3)
	--	Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid
	--	Inner Join TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRP.TaxId
	--	Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode 
	--UNION 
	--SELECT DISTINCT 'Null' as TaxRate,0.00 AS TaxAmount  from PurchaseReturnProduct SIP (NOLOCK) inner join PurchaseReturn SI (NOLOCK) ON SI.Purretid=SIP.Purretid 
	--Inner join StdVocMaster VDT (NOLOCK) on SI.PurretRefno=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,28,CHARINDEX(' Dated',VDT.Remarks)-28))) 
	--Inner Join Product P (NOLOCK) on P.prdid=Sip.prdid and SI.PurRetId NOT IN (SELECT DISTINCT PurRetId FROM PurchaseReturnProductTax (NOLOCK))
	--Where VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode 
END
--CCRSTAML1028 Start
IF UPPER(@sVocType)='IDT'
BEGIN
		INSERT INTO @VoucherExportNode7
		SELECT TaxRate,SUM(TaxAmount)TaxAmount
		FROM 
		(	
			SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,CONVERT(NUMERIC(18,2),PRP.TaxAmount) as TaxAmount  
			FROM IDTManagementProduct SIP (NOLOCK)
			INNER JOIN IDTManagement SI (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,25,CHARINDEX(' Dated',VDT.Remarks)-25))) 
			INNER JOIN IDTManagementProductTax PRP (NOLOCK) ON PRP.PrdSlNo=SIP.PrdSlNo AND PRP.IDTMngRefNo=SIP.IDTMngRefNo AND PRP.IDTMngRefNo=SI.IDTMngRefNo and PRP.TaxableAmount>0 --and TaxId in (2,3)
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid
			INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRP.TaxId
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode and SI.StkMgmtTypeId=2
			UNION 
			SELECT DISTINCT 'Null' as TaxRate,0.00 AS TaxAmount  
			FROM IDTManagementProduct SIP (NOLOCK) 
			INNER JOIN IDTManagement SI (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26))) 
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid and SI.IDTMngRefNo NOT IN (SELECT DISTINCT IDTMngRefNo FROM IDTManagementProductTax (NOLOCK))
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode  and SI.StkMgmtTypeId=2
		)A
		GROUP BY TaxRate
END
IF UPPER(@sVocType)='IDT IN'
BEGIN
		INSERT INTO @VoucherExportNode7
		SELECT TaxRate,SUM(TaxAmount)TaxAmount
		FROM 
		(	
			SELECT DISTINCT TaxCode+' '+Convert(nvarchar(10),Convert(Numeric(18,2),Taxperc))+'%' as TaxRate,CONVERT(NUMERIC(18,2),PRP.TaxAmount) as TaxAmount  
			FROM IDTManagementProduct SIP (NOLOCK)
			INNER JOIN IDTManagement SI (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26))) 
			INNER JOIN IDTManagementProductTax PRP (NOLOCK) ON PRP.PrdSlNo=SIP.PrdSlNo AND PRP.IDTMngRefNo=SIP.IDTMngRefNo AND PRP.IDTMngRefNo=SI.IDTMngRefNo and PRP.TaxableAmount>0 --and TaxId in (2,3)
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid
			INNER JOIN TaxConfiguration TC (NOLOCK) ON TC.TaxId=PRP.TaxId
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode and SI.StkMgmtTypeId=1
			UNION 
			SELECT DISTINCT 'Null' as TaxRate,0.00 AS TaxAmount  
			FROM IDTManagementProduct SIP (NOLOCK) 
			INNER JOIN IDTManagement SI (NOLOCK) ON SI.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN StdVocMaster VDT (NOLOCK) on SI.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(VDT.Remarks,26,CHARINDEX(' Dated',VDT.Remarks)-26))) 
			INNER JOIN Product P (NOLOCK) on P.prdid=Sip.prdid and SI.IDTMngRefNo NOT IN (SELECT DISTINCT IDTMngRefNo FROM IDTManagementProductTax (NOLOCK))
			WHERE VDT.VocRefNo=@PiValue and P.PrdCCode=@Prdcode  and SI.StkMgmtTypeId=1
		)A
		GROUP BY TaxRate
END
--CCRSTAML1028 END
END
IF NOT EXISTS (SELECT * FROM @VoucherExportNode7)
BEGIN
	INSERT INTO @VoucherExportNode7
	SELECT 'Null' as TaxRate,0.00 as TaxAmount
END
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_VoucherExportNode8' AND XTYPE='TF')
DROP  FUNCTION Fn_VoucherExportNode8
GO
CREATE FUNCTION Fn_VoucherExportNode8(@sVocType as varchar(200),@PiValue as varchar(200),@VoucherRefNo AS Varchar(200))
RETURNS @VoucherExportNode3 TABLE
(
    FromLocationName varchar(200),
    ToLocationName      Varchar(200),
    ProductCode    varchar(200),
    ProductName    varchar(500),
	Quantity			Int,
	Value		Numeric(18,4)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode8
* PURPOSE	: Returns the Location Transfer Details
* NOTES		:
* CREATED	: Gopikrishnan.R - 20-02-2013
* MODIFIED
* DATE           AUTHOR         DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
If UPPER(@sVocType)='SALES- REPLACEMENT IN'
Begin
INSERT INTO @VoucherExportNode3
select distinct L.Lcnname as FromLocationName,L1.LcnName as ToLocationName,P.PrdCCode as ProductCode,P.PrdName+'~'+P.PrdCCode as ProductName,
SUM(TransferQty) as Quantity,SUM(TransferQty*PBD.PrdbatDetailValue) AS Value from Location L WITH (NOLOCK)
inner join LocationTransferMaster LT WITH (NOLOCK) ON LT.FromLcnId=L.LcnId
INNER JOIN LOCATION L1 WITH (NOLOCK) ON L1.LcnId=LT.ToLcnId
INNER JOIN LocationTransferDetails LTD WITH (NOLOCK) ON LT.LcnRefNo=LTD.LcnRefNo AND LT.LcnRefNo=@VoucherRefNo
INNER JOIN Product P WITH (NOLOCK) ON P.PrdId=LTD.PRDID
Inner Join ProductBatch PB WITH (NOLOCK) on PB.PrdId=P.PrdId and LTD.PrdId=PB.prdid
Inner join ProductbatchDetails PBD WITH (NOLOCK) on pbd.Prdbatid=PB.PrdBatId  AND PBD.Prdbatid=LTD.PRDBATID and PBD.DefaultPrice=1 
Inner Join BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
GROUP BY P.PrdCCode, L.Lcnname,L1.LcnName,P.PrdName 
END
If Not exists (select * from @VoucherExportNode3)
Begin
INSERT INTO @VoucherExportNode3
Select 'Null' as  Inventorytype,'Null' as LocationName,'Null' as ProductCode,'Null' as ProductName,0 as Quantity,0 as salesvalue
END
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_VoucherExportNode9' AND XTYPE='TF')
DROP  FUNCTION Fn_VoucherExportNode9
GO
CREATE Function [dbo].[Fn_VoucherExportNode9](@sVocType as varchar(200),@PiValue as varchar(200),@VoucherRefNo as Varchar(200),@Prdcode as varchar(200))
RETURNS @VoucherExportNode9 TABLE
(
	BatchCode		VARCHAR(200)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_VoucherExportNode9
* PURPOSE	: Returns the IMEINO details of Location Transfer product
* NOTES		:
* CREATED	: Gopikrishnan.R - 20.02.2013
* MODIFIED
* DATE            AUTHOR           DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
DECLARE @QTY AS INT
DECLARE @CNT AS INT
If UPPER(@sVocType)='SALES- REPLACEMENT IN'
BEGIN
INSERT INTO @VoucherExportNode9
	SELECT DISTINCT PrdBatCode FROM LocationTransferMaster SI JOIN LocationTransferDetails SIP ON SI.LcnRefNo=SIP.LcnRefNo
	INNER JOIN Product P ON P.PrdId=SIP.PrdId
	INNER JOIN ProductBatch PB ON PB.PrdId=P.PrdId AND PB.PrdId=SIP.PrdId AND PB.PRDBATID=SIP.PrdBatId	
	WHERE SI.LcnRefNo =@VoucherRefNo and PrdCCode=@Prdcode
END
RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='FN_VoucherExport')
DROP FUNCTION FN_VoucherExport
GO
--select * from dbo.FN_VoucherExport ('2017-11-15','2017-11-15')
CREATE FUNCTION [FN_VoucherExport](@Pi_FromDate DATETIME,@Pi_ToDate DATETIME)  
RETURNS @VoucherExport TABLE
(	
	slno            int,
	Voucher			VARCHAR(200),
	VoucherNo		VARCHAR(200),
	VoucherDate		DATETIME,
	VoucherRefNo	VARCHAR(200),
	CompanyCode     varchar(100),
	Salesman        VARCHAR(250),
	DocRefNo        VARCHAR(250),
	Remarks         VARCHAR(250),
	Narration		VARCHAR(500),
	InvoiceDate     DATETIME
)
AS
/***************************************************************************************************
* FUNCTION	: FN_VoucherExport
* PURPOSE	: Returns the Voucher Details of Selected Date range
* NOTES		:
* CREATED	: Gopikrishnan.R - 12.12.2012
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 20/02/2013	Gopikrishnan												Location Tranfer Details are Added
* 22/02/2013    Gopikrishnan												Voucher Split Coding is Added
* 21/03/2013    Gopikrishnan												Cancelled Bill Details flow to Tally and Tax Type Changes
* 08/04/2013    Gopikrishnan												Salesman and DocRefNo Column added
* 22/05/2013    Gopikrishnan												InvoiceDate Column Added
* 03/09/2013    Gopikrishnan												Remarks Column Added
* 28/02/2014    Gopi														Status 1 added in stock transfer to export confirmed loc transfer trans to tally
* 17-04-2014    Gopi														Collection Remarks Column Exported  to Tally if entered in collection Related screens
* 02-11-2017	Murugan.R		CR				CCRSTAML1028				IDT Transaction Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
    IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='PURCHASE')
    BEGIN
	  INSERT INTO @VoucherExport
		SELECT 1,'Purchase' AS Voucher,VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=5 ORDER BY VoucherDate
	END
   IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='JOURNAL')
    BEGIN
	  INSERT INTO @VoucherExport
		SELECT 7,'Journal' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,SM.StkMngRefNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,Isnull(SM.ReMarks,'Null') as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK) INNER JOIN StockManagement SM (NOLOCK) ON SM.StkMngRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,29,CHARINDEX(' Dated',A.Remarks)-29)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=5 AND A.Remarks LIKE 'Posted From Stock Adjustment%' AND A.AutoGen=1
			
			Update R set DocRefno=si.DocRefno FROM StockManagement si inner Join @VoucherExport  R on R.VoucherRefNo=Si.StkMngRefNo AND SI.DocRefno<>''
	END
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='SALES')
    BEGIN
	 INSERT INTO @VoucherExport
		SELECT 2,'Sales' AS Voucher,VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' AS Remarks,A.Remarks AS Narration,'' AS InvoiceDate  
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=4 ORDER BY VoucherDate
    END
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='PAYMENT')
    BEGIN
     INSERT INTO @VoucherExport
		SELECT 5,'Payment' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,Right(Left(Remarks,39),10) AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK)--INNER JOIN PurchasePayment PP ON PP.PayAdvNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,29,CHARINDEX(' Dated',A.Remarks)-29)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=1 AND A.Remarks LIKE 'Posted From Payment Register%' AND AutoGen=1
	Union
		SELECT 5,'Payment' AS Voucher,VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate   
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=1 ORDER BY VoucherDate
	END
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK)where UPPER(Voucher)='RECEIPT')
    BEGIN
     INSERT INTO @VoucherExport
		SELECT 6,'Receipt' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,Right(Left(Remarks,30),10) AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK)--INNER JOIN Receipt PP ON PP.InvRcpNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX('(',A.Remarks)-20)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND VocType=2 AND A.Remarks LIKE 'Posted From Receipt%' And A.Remarks Not LIKE 'Posted From Receipt Cancellation%' and A.Remarks Not like '%Posted From Receipt Cash Discount Reversal%' AND A.AutoGen=1
	Union
		SELECT 6,'Receipt' AS Voucher,VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate  
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=2 ORDER BY VoucherDate
		
	END
	
	IF EXISTS (SELECT * FROM TempTallyVoucher where UPPER(Voucher)='CREDIT NOTE')
    BEGIN
       INSERT INTO @VoucherExport
       SELECT DISTINCT 8,Voucher,VoucherNo,VoucherDate,VoucherRefNo,CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,Narration,'' AS InvoiceDate  FROM
		(
		SELECT DISTINCT 'Credit Note' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.CrNoteNumber AS VoucherRefNo,D.DistributorCode as CompanyCode ,A.Remarks AS Narration
		FROM StdVocMaster A (NOLOCK) INNER JOIN CreditNoteRetailer PR (NOLOCK) ON Pr.CrNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=3 AND A.Remarks LIKE 'Posted From Credit Note%' AND A.AutoGen=1
		UNION
		SELECT DISTINCT 'Credit Note' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.CrNoteNumber AS VoucherRefNo,D.DistributorCode as CompanyCode ,A.Remarks AS Narration
		FROM StdVocMaster A (NOLOCK) INNER JOIN CreditNoteSupplier PR (NOLOCK) ON Pr.CrNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=3 AND A.Remarks LIKE 'Posted From Credit Note%' AND A.AutoGen=1 )A
	END
	
------Till Here	
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='DEBIT NOTE')
    BEGIN	
		INSERT INTO @VoucherExport
		select Distinct 9,Voucher,VoucherNo,VoucherDate,VoucherRefNo,CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,Narration,'' AS InvoiceDate  FROM
		(
        SELECT 'Debit Note' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.DbNoteNumber AS VoucherRefNo,D.DistributorCode as CompanyCode,A.Remarks AS Narration
		FROM StdVocMaster A (NOLOCK) INNER JOIN DebitNoteRetailer PR (NOLOCK) ON Pr.DbNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=3 AND A.Remarks LIKE 'Posted From Debit Note%' AND A.AutoGen=1 
        UNION   		
        SELECT 'Debit Note' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.DbNoteNumber AS VoucherRefNo,D.DistributorCode as CompanyCode,A.Remarks AS Narration
		FROM StdVocMaster A (NOLOCK) INNER JOIN DebitNoteSupplier PR (NOLOCK) ON Pr.DbNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=3 AND A.Remarks LIKE 'Posted From Debit Note%' AND A.AutoGen=1 )A
	END	
		
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='JOURNAL')
    BEGIN
			INSERT INTO @VoucherExport
			SELECT 7,'Journal' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX('(',A.Remarks)-33)))AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK) --INNER JOIN Receipt PP ON PP.InvRcpNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX('(',A.Remarks)-20)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND VocType=2 AND A.Remarks LIKE '%Posted From Receipt Cancellation%' AND A.AutoGen=1
	Union
		SELECT 7,'Journal' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,LTRIM(RTRIM(SUBSTRING(Remarks,26,CHARINDEX(' Dated',Remarks)-25))) AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK) --INNER JOIN PurchasePayment PP ON PP.PayAdvNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,29,CHARINDEX(' Dated',A.Remarks)-29)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=1 AND A.Remarks LIKE 'Posted From ChequePayment%' AND AutoGen=1
	UNION
			SELECT 7,'Journal' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX('(',A.Remarks)-20))) AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
			FROM StdVocMaster A (NOLOCK)--INNER JOIN Receipt PP ON PP.InvRcpNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX('(',A.Remarks)-20)))
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND VocType=2 AND A.Remarks like '%Posted From Receipt Cash Discount Reversal%' AND A.AutoGen=1
   	Union
		SELECT 7,'Journal' AS Voucher,VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate   
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=3 ORDER BY VoucherDate
	END 
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='CONTRA')
    BEGIN
      INSERT INTO @VoucherExport	
		SELECT 10,'contra' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate   
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=0 ORDER BY VoucherDate
  END
  	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='MEMO')
    BEGIN
      INSERT INTO @VoucherExport	
		SELECT 11,'Memo' AS Voucher,
		VocRefNo AS VoucherNo,VocDate AS VoucherDate,'Manual Entry' AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate   
		FROM StdVocMaster A (NOLOCK) Left Join Distributor D (NOLOCK) on D.Availability=1 WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate AND A.AutoGen=0 and VocType=7 ORDER BY VoucherDate
	END
	----Added by Gopikrishnan at 20/02/2013 for Location Transfer
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='STOCKTRANSFER')
    BEGIN
      INSERT INTO @VoucherExport	
		SELECT 12,'StockTransfer' AS Voucher,
		LcnRefNo + 'A' AS VoucherNo,LcnTrfDate AS VoucherDate,LcnRefNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,Isnull(A.Remarks,'Null') as Remarks,
		'Goods Transfer From '+L.LcnName+' to '+   L1.LcnName + '' AS Narration,'' AS InvoiceDate  
		FROM LocationTransferMaster A (NOLOCK) Inner Join Location L (NOLOCK) on A.FromLcnId=l.LcnId ---Status added by Gopi at 28-02-2014
		Inner Join Location L1 (NOLOCK) ON L1.LcnId=A.ToLcnId
		Left Join Distributor D (NOLOCK) on D.Availability=1 
		WHERE LcnTrfDate BETWEEN @Pi_FromDate AND @Pi_ToDate ORDER BY VoucherDate
		
		Update R set DocRefno=si.DocRefno FROM LocationTransferMaster si inner Join @VoucherExport  R on R.VoucherRefNo=Si.LcnRefNo AND SI.DocRefno<>''
	END
	
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='SALES')
    BEGIN
			INSERT INTO @VoucherExport	
			SELECT DISTINCT  2,'Sales' AS Voucher,
			    VocRefNo AS VoucherNo,Salinvdate AS VoucherDate,S.SalInvNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' AS InvoiceDate 
				FROM StdVocMaster A (NOLOCK) INNER JOIN SalesInvoice S (NOLOCK) ON S.SalInvNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX(' Dated',A.Remarks)-20)))
				inner Join SalesInvoiceProduct SIP (NOLOCK) on SIP.Salid=S.Salid --and DlvSts<>3
				Inner Join Tbl_GR_Build_PH TG (NOLOCK) on SIP.PrdId=TG.prdid
				Left Join Distributor D (NOLOCK) on D.Availability=1
				WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=4 AND A.Remarks LIKE 'Posted From Billing%'	AND A.AutoGen=1
				Group by VocRefNo,Salinvdate,S.SalInvNo,D.DistributorCode,A.Remarks
				
			Update R set SalesMan=SMNAME FROM Salesman S inner join SalesInvoice si on s.SMId=si.SMId 
			inner Join @VoucherExport  R on R.VoucherRefNo=Si.Salinvno
			
			Update R set DocRefno=SalinvRef FROM SalesInvoice si inner Join @VoucherExport  R on R.VoucherRefNo=Si.Salinvno and si.SalinvRef<>''
			
			Update R set Remarks=SI.Remarks FROM SalesInvoice si inner Join @VoucherExport  R on R.VoucherRefNo=Si.Salinvno and si.Remarks<>''
	
	 END
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='PURCHASE')
	BEGIN
		 INSERT INTO @VoucherExport	
		  Select Distinct 1,'Purchase' AS Voucher,
		  VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.Cmpinvno AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,Remarks AS Narration,InvDate AS InvoiceDate 
		  from StdVocMaster A (NOLOCK) INNER JOIN PurchaseReceipt PR (NOLOCK) ON Pr.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,16,CHARINDEX(' Dated',A.Remarks)-16)))
		  INNER JOIN PurchaseReceiptProduct  SIP (NOLOCK) ON PR.PurRcptId=SIP.PurRcptId 
		  Inner Join Tbl_GR_Build_PH TG  (NOLOCK) on SIP.PrdId=TG.prdid
		  Left Join Distributor D (NOLOCK) on D.Availability=1
		  WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=5 AND Remarks LIKE 'Posted From GRN%' AND A.AutoGen=1
		  Group by VocRefNo,VocDate,Pr.Cmpinvno,D.DistributorCode,Remarks,pr.InvDate
   END
	IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='PURCHASE RETURN')
	BEGIN
		INSERT INTO @VoucherExport
		SELECT 3,'Purchase Return' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,
			PR.PurRetRefNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' as InvoiceDate
			FROM StdVocMaster A (NOLOCK) INNER JOIN PurchaseReturn  PR (NOLOCK) ON PR.PurRetRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,28,CHARINDEX(' Dated',A.Remarks)-28)))
			INNER JOIN PurchaseReturnProduct  SIP (NOLOCK) ON PR.PurRetId=SIP.PurRetId 
			Inner Join Tbl_GR_Build_PH TG  (NOLOCK) on SIP.PrdId=TG.prdid
			Left Join Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=5 AND A.Remarks LIKE 'Posted From Purchase Return%' AND A.AutoGen=1
			Group by VocRefNo,VocDate,PR.PurRetRefNo,D.DistributorCode,A.Remarks 
			
	END
	
    IF EXISTS (SELECT * FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='SALES RETURN')
    BEGIN
			    INSERT INTO @VoucherExport
				SELECT 4,'Sales Return' AS Voucher,
					VocRefNo AS VoucherNo,VocDate AS VoucherDate,RH.ReturnCode AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,A.Remarks AS Narration,'' as InvoiceDate
					FROM StdVocMaster A (NOLOCK) INNER JOIN ReturnHeader RH (NOLOCK) ON RH.ReturnCode=LTRIM(RTRIM(SUBSTRING(A.Remarks,24,CHARINDEX(' Dated',A.Remarks)-24)))
					INNER JOIN ReturnProduct  SIP (NOLOCK) ON RH.ReturnID=SIP.ReturnID 
					Inner Join Tbl_GR_Build_PH TG  (NOLOCK) on SIP.PrdId=TG.prdid
					Inner join Retailer R1 (NOLOCK) ON R1.RtrId=RH.Rtrid
				    Left Join Distributor D (NOLOCK) on D.Availability=1
					WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=4 AND A.Remarks LIKE 'Posted From SalesReturn%'	AND A.AutoGen=1
					Group by VocRefNo,VocDate,RH.ReturnCode,D.DistributorCode,A.Remarks
					
				Update R set SalesMan=SMNAME FROM Salesman S inner join ReturnHeader si on s.SMId=si.SMId 
				inner Join @VoucherExport  R on R.VoucherRefNo=Si.ReturnCode
				
				Update R set DocRefno=SI.DocRefNo FROM ReturnHeader si inner Join @VoucherExport  R on R.VoucherRefNo=Si.ReturnCode and si.Docrefno<>''
	END
	--Added by Kishore
	IF EXISTS (SELECT '*' FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='STOCK LEDGER')
	BEGIN
			INSERT INTO @VoucherExport	
			SELECT DISTINCT  2,'Stock Ledger' AS Voucher,
		    convert(varchar(10),@Pi_FromDate,121) AS VoucherNo,@Pi_FromDate AS VoucherDate,convert(varchar(10),@Pi_ToDate -1,121) AS VoucherRefNo,
		    D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,
		    'Posted From Stock ledger Dated ' + CONVERT(varchar(10), @Pi_FromDate , 121) AS Narration,'' AS InvoiceDate 
			FROM Distributor D (NOLOCK)
	END 
	-- Till Here	  
	
	----CCRSTAML1028 Start
	IF EXISTS (SELECT '*' FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='IDT')
	BEGIN
			INSERT INTO @VoucherExport
			SELECT 13,'IDT' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.IDTMngRefNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,
			A.Remarks AS Narration,'' AS InvoiceDate 
			from StdVocMaster A (NOLOCK) 
			INNER JOIN IDTManagement PR (NOLOCK) ON Pr.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,26,CHARINDEX(' Dated',A.Remarks)-26)))
			INNER JOIN IDTManagementProduct  SIP (NOLOCK) ON PR.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN Tbl_GR_Build_PH TG  (NOLOCK) on SIP.PrdId=TG.prdid
			LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=5 AND A.Remarks LIKE 'Posted From IDT Stock Out%' AND A.AutoGen=1
			and PR.StkMgmtTypeId=2
			GROUP BY VocRefNo,VocDate,Pr.IDTMngRefNo,D.DistributorCode,A.Remarks,pr.IDTMngDate
	END 	
	
	IF EXISTS (SELECT '*' FROM TempTallyVoucher (NOLOCK) where UPPER(Voucher)='IDT In')
	BEGIN
			INSERT INTO @VoucherExport
			SELECT 14,'IDT In' AS Voucher,
			VocRefNo AS VoucherNo,VocDate AS VoucherDate,Pr.IDTMngRefNo AS VoucherRefNo,D.DistributorCode as CompanyCode,'Null' as SalesMan,'Null' as DocRefNo,'Null' as Remarks,
			A.Remarks AS Narration,'' AS InvoiceDate 
			from StdVocMaster A (NOLOCK) 
			INNER JOIN IDTManagement PR (NOLOCK) ON Pr.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,25,CHARINDEX(' Dated',A.Remarks)-25)))
			INNER JOIN IDTManagementProduct  SIP (NOLOCK) ON PR.IDTMngRefNo=SIP.IDTMngRefNo 
			INNER JOIN Tbl_GR_Build_PH TG  (NOLOCK) on SIP.PrdId=TG.prdid
			LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
			WHERE VocDate BETWEEN @Pi_FromDate AND @Pi_ToDate	AND VocType=5 AND A.Remarks LIKE 'Posted From IDT Stock In%' AND A.AutoGen=1
			and PR.StkMgmtTypeId=1
			GROUP BY VocRefNo,VocDate,Pr.IDTMngRefNo,D.DistributorCode,A.Remarks,pr.IDTMngDate
	END 	
	----CCRSTAML1028 END
RETURN
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='ProductBatchTaxPercent' AND XTYPE='U')
DROP TABLE ProductBatchTaxPercent
GO
CREATE TABLE ProductBatchTaxPercent
(
	[PrdId] [int] NULL,
	[PrdBatId] [int] NULL,
	[TaxPercentage] [numeric](18, 5) NULL
)
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='TempProductTax' AND XTYPE='U')
DROP TABLE TempProductTax
GO
CREATE TABLE TempProductTax
(
	[PrdId] [int] NULL,
	[PrdBatId] [int] NULL,
	[TaxId] [int] NULL,
	[TaxSlabId] [int] NULL,
	[TaxPercentage] [numeric](5, 2) NULL,
	[TaxAmount] [numeric](18, 5) NULL
)
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Proc_TaxCalCulation' AND XTYPE='P')
DROP PROCEDURE Proc_TaxCalCulation
GO
--EXEc Proc_TaxCalCulation 13,5842
CREATE PROCEDURE Proc_TaxCalCulation  
 (  
  @Prdid AS INT,  
  @Prdbatid AS INT  
 )  
 AS  
 BEGIN  
   DECLARE @TaxSettingDet TABLE         
   (        
    TaxSlab   INT,        
    ColNo   INT,        
    SlNo   INT,        
    BillSeqId  INT,        
    TaxSeqId  INT,        
    ColType   INT,         
    ColId   INT,        
    ColVal   NUMERIC(38,2)        
   )     
   DECLARE @PrdBatTaxGrp AS INT  
   DECLARE @PurSeqId AS INT  
   DECLARE @BillSeqId AS INT  
   DECLARE @RtrTaxGrp AS INT     
   DECLARE @TaxSlab  INT    
   DECLARE @MRP INT      
   DECLARE @TaxableAmount  NUMERIC(28,10)        
   DECLARE @ParTaxableAmount NUMERIC(28,10)        
   DECLARE @TaxPer   NUMERIC(38,2)       
   DECLARE @TaxPercentage   NUMERIC(38,5)     
   DECLARE @TaxId   INT      
   SELECT @PrdBatTaxGrp = TaxGroupId FROM ProductBatch A (NOLOCK) WHERE Prdid=@Prdid and  Prdbatid=@Prdbatid   
   SELECT @BillSeqId = MAX(BillSeqId)  FROM BillSequenceMaster (NOLOCK)  
    SELECT @RtrTaxGrp=MIN(Distinct RtriD) FROM TaxSettingMaster A (NOLOCK) INNER JOIN TaxGroupSetting B ON A.Rtrid =B.Taxgroupid WHERE RtrGroup='RTRINTRA' AND
   Prdid =@PrdBatTaxGrp
   INSERT INTO @TaxSettingDet (TaxSlab,ColNo,SlNo,BillSeqId,TaxSeqId,ColType,ColId,ColVal)        
   SELECT B.RowId,B.ColNo,B.SlNo,B.BillSeqId,B.TaxSeqId,B.ColType,B.ColId,B.ColVal        
   FROM TaxSettingMaster A (NOLOCK) INNER JOIN        
   TaxSettingDetail B (NOLOCK) ON A.TaxSeqId = B.TaxSeqId        
   AND B.BillSeqId=@BillSeqId  and Coltype IN(1,3)      
   WHERE A.RtrId = @RtrTaxGrp AND A.Prdid = @PrdBatTaxGrp       
   AND A.TaxSeqId in (Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE        
   RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp  
   and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)  
   )
   SET @MRP=1  
   TRUNCATE TABLE TempProductTax  
   DECLARE  CurTax CURSOR FOR        
    SELECT DISTINCT TaxSlab FROM @TaxSettingDet        
   OPEN CurTax          
   FETCH NEXT FROM CurTax INTO @TaxSlab        
   WHILE @@FETCH_STATUS = 0          
   BEGIN        
   SET @TaxableAmount = 0        
   IF EXISTS (SELECT * FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1        
   AND ColId = 0 and ColVal >= 0)        
   BEGIN        
   SELECT @TaxPer = ColVal FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1        
   AND ColId = 0        
   SELECT @TaxId = Cast(ColVal as INT) FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1        
   AND ColId > 0        
   SET @TaxableAmount = ISNULL(@TaxableAmount,0) + @MRP   
   SELECT @ParTaxableAmount =  ISNULL(SUM(TaxAmount),0) FROM TempProductTax A        
   INNER JOIN @TaxSettingDet B ON A.TaxId = B.ColVal and    
   B.ColType = 3 AND B.TaxSlab = @TaxSlab   
   If @ParTaxableAmount>0  
   BEGIN  
    Set @TaxableAmount=@ParTaxableAmount  
   END   
   ELSE  
   BEGIN  
    Set @TaxableAmount = @TaxableAmount  
   END      
   INSERT INTO TempProductTax (PrdId,PrdBatId,TaxId,TaxSlabId,TaxPercentage,        
   TaxAmount)        
   SELECT @Prdid,@Prdbatid,@TaxId,@TaxSlab,@TaxPer,        
   cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10))        
   END        
   FETCH NEXT FROM CurTax INTO @TaxSlab        
   END          
   CLOSE CurTax          
   DEALLOCATE CurTax        
   SELECT @TaxPercentage=Cast(ISNULL(SUM(TaxAmount)*100,0) as Numeric(18,5))  
   FROM TempProductTax WHERE Prdid=@Prdid and Prdbatid=@Prdbatid  
   PRINT @TaxPercentage  
   IF EXISTS(SELECT * FROM ProductBatchTaxPercent WHERE Prdid=@Prdid and Prdbatid=@Prdbatid)  
   BEGIN     
    UPDATE ProductBatchTaxPercent  SET TaxPercentage=@TaxPercentage  
    WHERE Prdid=@Prdid and Prdbatid=@Prdbatid  
   END   
   ELSE  
   BEGIN     
    INSERT INTO ProductBatchTaxPercent(Prdid,Prdbatid,TaxPercentage)  
   SELECT @Prdid,@Prdbatid,@TaxPercentage  
   END  
END
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ProductXmlExport' AND XTYPE='TF')
DROP  FUNCTION Fn_ProductXmlExport
GO
--select * FROM Fn_ProductXmlExport()
CREATE FUNCTION Fn_ProductXmlExport()
RETURNS @ProductXmlExport TABLE
(
    ProductCode    varchar(200),
	ProductName	Varchar(200),
	LandingPrice Numeric(18,4),
	Price Numeric(18,4),
	EffectiveDate varchar(10),
	Tax Varchar(25)
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ProductXmlExport
* PURPOSE	: Returns the Product Master
* NOTES		:
* CREATED	: Gopikrishnan
* MODIFIED
* DATE			AUTHOR			DESCRIPTION
*21-02-2013   Gopikrishnan    Nolock is Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
DECLARE @TaxGroupid AS int
Declare @Seqid as Int
Declare @BillSeqId as Int
Declare @TaxGroup as int
  Insert into @ProductXmlExport
  select Distinct Prdccode  as ProductCode,PrdName+'~'+Prdccode as ProductName,
  PBD1.PrdbatDetailValue as LandingPrice,PBD.PrdbatDetailValue as Price,Convert(varchar(10),MnfDate,105) as EffectiveDate,
  Convert(nvarchar(10),'') AS Tax
  FROM  Product P WITH (NOLOCK)
  --Inner Join Tbl_GR_Build_PH TG WITH (NOLOCK) ON TG.Prdid=P.prdid
  INNER JOIN ProductBatch PB WITH (NOLOCK) on PB.PrdId=P.PrdId
  INNER JOIN ProductbatchDetails PBD WITH (NOLOCK) on pbd.Prdbatid=PB.PrdBatId and PBD.DefaultPrice=1 
  INNER JOIN BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
  INNER JOIN ProductbatchDetails PBD1 WITH (NOLOCK) on pbd1.Prdbatid=PB.PrdBatId and PBD1.DefaultPrice=1 
  INNER JOIN BatchCreation BC1 WITH (NOLOCK) On BC1.SlNo=PBD1.SLNo AND BC1.ListPrice=1
  --Inner Join ProductBatchTaxPercent A WITH (NOLOCK) on A.PrdId=P.PrdId AND A.PrdBatId=PB.PrdBatId AND A.PrdId=TG.PrdId
  Order by ProductCode
RETURN
END
GO
DELETE FROM TallyVoucherType
INSERT INTO TallyVoucherType
SELECT 1,'Purchase' UNION
SELECT 2,'Purchase Return' UNION
SELECT 3,'Journal' UNION
SELECT 4,'Sales' UNION
SELECT 5,'Sales Return' UNION
SELECT 6,'Receipt' UNION
SELECT 7,'Payment' UNION 
SELECT 8,'Memo' UNION
SELECT 9,'Contra' UNION
SELECT 10,'Credit Note' UNION
SELECT 11,'Debit Note'UNION 
SELECT 12,'StockTransfer'
GO
DELETE FROM Export_BtnVoucher
INSERT INTO Export_BtnVoucher
SELECT 'TRUE','FALSE','1','0'
GO
IF EXISTS (SELECT * FROM SYSOBJECTS WHERE name='Fn_ExportVoucherRetailerExcel' AND XTYPE='TF')
DROP FUNCTION Fn_ExportVoucherRetailerExcel
GO
CREATE Function Fn_ExportVoucherRetailerExcel()
RETURNS @ExportVoucherRetailerExcel TABLE
(
    RtrName Varchar(200),
    CmpRtrCode    varchar(200)
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ExportVoucherRetailerExcel
* PURPOSE	: Returns the Retailer master in Mapping excel for Tally
* NOTES		:
* CREATED	: Gopikrishnan
* MODIFIED
* DATE           AUTHOR        DESCRIPTION
*21-02-2013     Gopikrishnan   Nolock is added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
	Insert into @ExportVoucherRetailerExcel
	select RtrName,CmpRtrCode from retailer (NOLOCK) order by rtrid
	RETURN
END
GO
IF EXISTS(SELECT 'x' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='FN_VoucherGSTInfoNode10')
DROP FUNCTION FN_VoucherGSTInfoNode10
GO
--SELECT * FROM DBO.FN_VoucherGSTInfoNode10 ('PURCHASE RETURN','PUR1700687','PRT1700001')
CREATE FUNCTION [FN_VoucherGSTInfoNode10](@VocType as Varchar(100),@VoucherNo Varchar(100),@VoucherRefNo Varchar(100))  
RETURNS @VoucherExport TABLE
(	
	STATENAME		Varchar(150),
	PARTYGSTIN		Varchar(30),
	PLACEOFSUPPLY	Varchar(150),
	CONSIGNEESTATENAME Varchar(150)	,
	CONSIGNEEGSTIN	Varchar(30),
	CREDITNOTENUMBER Varchar(50),
	CREDITNOTEDATE	DATETIME,
	REFERENCENO Varchar(50)
)
AS
/***************************************************************************************************
* FUNCTION	: FN_VoucherGSTInfo
* PURPOSE	: Returns the Gst Information
* NOTES		:
* CREATED	: Murugan.R - 11/10/2017 USERSTORYID CCRSTAML1028
* MODIFIED
* DATE            AUTHOR       CR/BZ	USERSTORYID		DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN

	DECLARE @RetailerGSTIN TABLE
	(
		RtrId INT,
		GSTIN Varchar(30)
	)
	DECLARE @RetailerState TABLE
	(
		RtrId INT,
		Statename Varchar(150)
	)
	
	DECLARE @SupplierGSTIN TABLE
	(
		SpmId INT,
		GSTIN Varchar(30)
	)
	DECLARE @SupplierState TABLE
	(
		SpmId INT,
		Statename Varchar(150)
	)
	DECLARE @DistStatName Varchar(150)
	DECLARE @DistGSTTIN Varchar(30)
	SET @DistStatName='Null'
	SET @DistGSTTIN='Null'
	
	SELECT @DistGSTTIN=ColumnValue		
	FROM UdcHD A (NOLOCK)
	INNER JOIN UdcMaster B (NOLOCK) ON A.MasterId=B.MasterId
	INNER JOIN UdcDetails C (NOLOCK) ON C.MasterId=B.MasterId and C.MasterId=A.MasterId
	and C.UdcMasterId=B.UdcMasterId 
	INNER JOIN Distributor P (NOLOCK) ON P.DistributorId=C.MasterRecordId
	WHERE A.MasterName='Distributor Info Master' and B.ColumnName='GSTIN'
	
		
	SELECT @DistStatName=
	Case WHEN ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	ColumnValue	END	
	FROM UdcHD A (NOLOCK)
	INNER JOIN UdcMaster B (NOLOCK) ON A.MasterId=B.MasterId
	INNER JOIN UdcDetails C (NOLOCK) ON C.MasterId=B.MasterId and C.MasterId=A.MasterId
	and C.UdcMasterId=B.UdcMasterId 
	INNER JOIN Distributor P (NOLOCK) ON P.DistributorId=C.MasterRecordId
	INNER JOIN StateMaster S (NOLOCK) ON S.StateName=C.ColumnValue
	WHERE A.MasterName='Distributor Info Master' and B.ColumnName='State Name'
		
	INSERT INTO @RetailerGSTIN(RtrId,GSTIN)
	SELECT DISTINCT  R.RtrId as RtrId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='GSTIN'
	
	INSERT INTO @RetailerState(RtrId,Statename)
	SELECT DISTINCT  R.RtrId as RtrId,
	Case WHEN UT.ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN UT.ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN UT.ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN UT.ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN UT.ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	UT.ColumnValue	END		
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='State Name'
	
	INSERT INTO @SupplierGSTIN(SpmId,GSTIN)
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN'
	UNION
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN'
	
	
	INSERT INTO @SupplierState(SpmId,Statename)
	SELECT DISTINCT  R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name'
	UNION
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name'
	
	IF 
		(
		UPPER(@VocType)='JOURNAL' OR  UPPER(@VocType)='CONTRA' 
		OR  UPPER(@VocType)='MEMO' OR  UPPER(@VocType)='STOCKTRANSFER'
		OR UPPER(@VocType)='RECEIPT' OR UPPER(@VocType)='PAYMENT'
		OR UPPER(@VocType)='JOURNAL' OR UPPER(@VocType)='STOCK LEDGER'
		)
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT'Null' as STATENAME,'Null' as PARTYGSTIN,'Null' as PLACEOFSUPPLY,@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		'' as CREDITNOTENUMBER,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121) as CREDITNOTEDATE,'Null'
	END 
	

	IF UPPER(@VocType)='CREDIT NOTE'
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		CrNoteNumber as CREDITNOTENUMBER,CrNoteDate as CREDITNOTEDATE,ISNULL(PostedFrom,'Null')
		FROM StdVocMaster A (NOLOCK) INNER JOIN CreditNoteRetailer PR (NOLOCK) ON Pr.CrNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		LEFT OUTER JOIN @RetailerGSTIN RG ON RG.RtrId=PR.RtrId
		LEFT OUTER JOIN @RetailerState RS ON RS.RtrId=PR.RtrId
		WHERE VocType=3 AND A.Remarks LIKE 'Posted From Credit Note%' AND A.AutoGen=1
		and VocRefNo =@VoucherNo and PR.CrNoteNumber=@VoucherRefNo
		
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,
		CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		Pr.CrNoteNumber as CREDITNOTENUMBER,Pr.CrNoteDate as CREDITNOTEDATE,ISNULL(PostedFrom,'Null')
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN CreditNoteSupplier PR (NOLOCK) ON Pr.CrNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=PR.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=PR.SpmId
		WHERE VocType=3 AND A.Remarks LIKE 'Posted From Credit Note%' AND A.AutoGen=1 
		and VocRefNo =@VoucherNo and PR.CrNoteNumber=@VoucherRefNo
	END
	
------Till Here	
	IF UPPER(@VocType)='DEBIT NOTE'
    BEGIN	
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,
		CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		Pr.DbNoteNumber,DbNoteDate,ISNULL(PostedFrom,'Null')
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN DebitNoteRetailer PR (NOLOCK) ON Pr.DbNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		LEFT OUTER JOIN @RetailerGSTIN RG ON RG.RtrId=PR.RtrId
		LEFT OUTER JOIN @RetailerState RS ON RS.RtrId=PR.RtrId
		WHERE VocType=3 AND A.Remarks LIKE 'Posted From Debit Note%' AND A.AutoGen=1 
		and VocRefNo =@VoucherNo and PR.DbNoteNumber=@VoucherRefNo
       
        INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		Pr.DbNoteNumber,DbNoteDate,ISNULL(PostedFrom,'Null')
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN DebitNoteSupplier PR (NOLOCK) ON Pr.DbNoteNumber=LTRIM(RTRIM(SUBSTRING(A.Remarks,33,CHARINDEX(' Dated',A.Remarks)-33)))
		LEFT JOIN Distributor D (NOLOCK) on D.Availability=1
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=PR.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=PR.SpmId
		WHERE VocType=3 AND A.Remarks LIKE 'Posted From Debit Note%' AND A.AutoGen=1
		and VocRefNo =@VoucherNo and PR.DbNoteNumber=@VoucherRefNo
		
	END	
		
	
	
	IF UPPER(@VocType)='SALES'
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		'' as CREDITNOTENUMBER,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121) as CREDITNOTEDATE,SalInvNo
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN SalesInvoice S (NOLOCK) ON S.SalInvNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,20,CHARINDEX(' Dated',A.Remarks)-20)))
		LEFT OUTER JOIN @RetailerGSTIN RG ON RG.RtrId=S.RtrId
		LEFT OUTER JOIN @RetailerState RS ON RS.RtrId=S.RtrId
		WHERE VocType=4 AND A.Remarks LIKE 'Posted From Billing%'	AND A.AutoGen=1
		and VocRefNo =@VoucherNo and S.SalInvNo=@VoucherRefNo	
	END
	IF UPPER(@VocType)='PURCHASE'
	BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		'' as CREDITNOTENUMBER,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121) as CREDITNOTEDATE,CmpInvNo
		from StdVocMaster A (NOLOCK) 
		INNER JOIN PurchaseReceipt PR (NOLOCK) ON Pr.PurRcptRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,16,CHARINDEX(' Dated',A.Remarks)-16)))
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=PR.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=PR.SpmId
		WHERE VocType=5 AND Remarks LIKE 'Posted From GRN%' AND A.AutoGen=1
		and VocRefNo =@VoucherNo and PR.CmpInvNo=@VoucherRefNo		
   END
	IF UPPER(@VocType)='PURCHASE RETURN'
	BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		--WITHOUT Reference
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		ISNULL(DbNoteNumber,''),ISNULL(DbNoteDate,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121)) as CREDITNOTEDATE,CmpInvNo
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN PurchaseReturn  PR (NOLOCK) ON PR.PurRetRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,28,CHARINDEX(' Dated',A.Remarks)-28)))
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=PR.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=PR.SpmId
		LEFT OUTER JOIN DebitNoteSupplier DS (NOLOCK) ON DS.SpmId=PR.SpmId and DS.SpmId=RG.SpmId and DS.SpmId=RS.SpmId
		and DS.PostedFrom=PR.PurRetRefNo
		WHERE VocType=5 AND A.Remarks LIKE 'Posted From Purchase Return%' AND A.AutoGen=1
		and VocRefNo =@VoucherNo and  PR.PurRetRefNo=@VoucherRefNo
					
	END
	
    IF UPPER(@VocType)='SALES RETURN'
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		ISNULL(CrNoteNumber,''),ISNULL(CrNoteDate,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121))   as CREDITNOTEDATE,ISNULL(SalInvNo,'Null')
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN ReturnHeader RH (NOLOCK) ON RH.ReturnCode=LTRIM(RTRIM(SUBSTRING(A.Remarks,24,CHARINDEX(' Dated',A.Remarks)-24)))
		LEFT OUTER JOIN SalesInvoice S (NOLOCK) ON S.Salid=RH.SalId
		LEFT OUTER JOIN @RetailerGSTIN RG ON RG.RtrId=RH.RtrId
		LEFT OUTER JOIN @RetailerState RS ON RS.RtrId=RH.RtrId	
		LEFT OUTER JOIN CreditNoteRetailer CN ON CN.RtrId=RH.RtrId and CN.RtrId=RG.RtrId and CN.RtrId=RS.RtrId	
		and CN.PostedFrom=RH.ReturnCode
		WHERE  VocType=4 AND A.Remarks LIKE 'Posted From SalesReturn%'	AND A.AutoGen=1
		and VocRefNo =@VoucherNo and RH.ReturnCode=@VoucherRefNo
					
	END		  
	
	IF UPPER(@VocType)='IDT'
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		'' as CREDITNOTENUMBER,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121) as CREDITNOTEDATE,'Null'
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN IDTManagement RH (NOLOCK) ON RH.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,26,CHARINDEX(' Dated',A.Remarks)-26)))
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=RH.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=RH.SpmId				
		WHERE  VocType=5 AND A.Remarks LIKE 'Posted From IDT Stock Out%'	AND A.AutoGen=1
		and VocRefNo =@VoucherNo and RH.IDTMngRefNo=@VoucherRefNo	and StkMgmtTypeId=2		
	END	
	IF UPPER(@VocType)='IDT IN'
    BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,CREDITNOTENUMBER,CREDITNOTEDATE,REFERENCENO)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,
		'' as CREDITNOTENUMBER,CONVERT(DATETIME,CONVERT(Varchar(10),GETDATE(),121),121) as CREDITNOTEDATE,'Null'
		FROM StdVocMaster A (NOLOCK) 
		INNER JOIN IDTManagement RH (NOLOCK) ON RH.IDTMngRefNo=LTRIM(RTRIM(SUBSTRING(A.Remarks,26,CHARINDEX(' Dated',A.Remarks)-26)))
		LEFT OUTER JOIN @SupplierGSTIN RG ON RG.SpmId=RH.SpmId
		LEFT OUTER JOIN @SupplierState RS ON RS.SpmId=RH.SpmId				
		WHERE  VocType=5 AND A.Remarks LIKE 'Posted From IDT Stock In%'	AND A.AutoGen=1
		and VocRefNo =@VoucherNo and RH.IDTMngRefNo=@VoucherRefNo	and StkMgmtTypeId=1		
	END	
RETURN
END
GO
IF EXISTS(SELECT 'x' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='FN_RetailerTallyGSTInfo')
DROP FUNCTION FN_RetailerTallyGSTInfo
GO
--Select * from Retailer where RtrId=47
--SELECT * FROM DBO.FN_RetailerTallyGSTInfo ('000200683600047')
CREATE FUNCTION [FN_RetailerTallyGSTInfo](@CoaId as BIGINT)  
RETURNS @RetailerGSTinfoExport TABLE
(	
	RtrId			INT,
	CmpRtrCode		Varchar(50),
	PARTYGSTIN		Varchar(30),
	LEDSTATENAME		Varchar(150),
	COUNTRYNAME	Varchar(20),
	GSTREGISTRATIONTYPE Varchar(50),
	MasterType TinyInt
	
)
AS
/***************************************************************************************************
* FUNCTION	: FN_RetailerTallyGSTInfo
* PURPOSE	: Returns the Retailer Gst Information
* NOTES		:
* CREATED	: Murugan.R - 11/10/2017 USERSTORYID CCRSTAML1028
* MODIFIED
* DATE            AUTHOR       CR/BZ	USERSTORYID		DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN

	DECLARE @RetailerGSTIN TABLE
	(
		RtrId INT,
		GSTIN Varchar(30)
	)
	DECLARE @RetailerState TABLE
	(
		RtrId INT,
		Statename Varchar(150)
	)
	
	INSERT INTO @RetailerGSTinfoExport(RtrId,CmpRtrCode,PARTYGSTIN,LEDSTATENAME,COUNTRYNAME,GSTREGISTRATIONTYPE,MasterType)
	SELECT RtrId,CmpRtrCode,'' as PARTYGSTIN ,'' as LEDSTATENAME,'India','' as GSTREGISTRATIONTYPE,1
	FROM Retailer (NOLOCK)
	WHERE CoaId=@CoaId
	UNION ALL
	SELECT SpmId,SpmCode,'' as PARTYGSTIN ,'' as LEDSTATENAME,'India','Regular' as GSTREGISTRATIONTYPE,2
	FROM Supplier (NOLOCK)
	WHERE CoaId=@CoaId
	UNION ALL
	SELECT SpmId,SpmCode,'' as PARTYGSTIN ,'' as LEDSTATENAME,'India','Regular' as GSTREGISTRATIONTYPE,3
	FROM IDTMaster (NOLOCK)
	WHERE CoaId=@CoaId

	---Retailer GSTIN Update	
	UPDATE A SET A.PARTYGSTIN=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN 
	(SELECT DISTINCT  R.RtrId as RtrId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='GSTIN') B ON A.Rtrid=B.Rtrid
	WHERE MasterType=1
	
	---Supplier GSTIN Update	
	UPDATE A SET A.PARTYGSTIN=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN 
	(SELECT DISTINCT  R.SpmId as RtrId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN') B ON A.Rtrid=B.Rtrid
	WHERE MasterType=2
	
	---IDTMaster GSTIN Update	
	UPDATE A SET A.PARTYGSTIN=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN 
	(SELECT DISTINCT  R.SpmId as RtrId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN') B ON A.Rtrid=B.Rtrid
	WHERE MasterType=3
	
	
	
	---Retailer State Update
	UPDATE A SET A.LEDSTATENAME=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN
	( 
	SELECT DISTINCT  R.RtrId as RtrId,
	Case WHEN UT.ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN UT.ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN UT.ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN UT.ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN UT.ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	UT.ColumnValue	END	 as ColumnValue	
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='State Name') B ON A.RtrId=B.RtrId
	WHERE   MasterType=1
	
	---Supplier State Update
	UPDATE A SET A.LEDSTATENAME=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN
	( 
	SELECT DISTINCT  R.SpmId as RtrId,
	Case WHEN UT.ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN UT.ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN UT.ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN UT.ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN UT.ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	UT.ColumnValue	END	 as ColumnValue	
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name') B ON A.RtrId=B.RtrId
	WHERE   MasterType=2
	
	
	---IDT Master State Update
	UPDATE A SET A.LEDSTATENAME=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN
	( 
	SELECT DISTINCT  R.SpmId as RtrId,
	Case WHEN UT.ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN UT.ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN UT.ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN UT.ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN UT.ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	UT.ColumnValue	END	 as ColumnValue	
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name') B ON A.RtrId=B.RtrId
	WHERE   MasterType=3
	
	UPDATE A SET A.GSTREGISTRATIONTYPE=ColumnValue FROM @RetailerGSTinfoExport A INNER JOIN
	(SELECT DISTINCT  R.RtrId as RtrId,
	CASE WHEN UT.ColumnValue='Registered' THEN 'Regular'
		   ELSE UT.ColumnValue END as ColumnValue
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='Retailer Type') B ON A.RtrId=B.RtrId
	WHERE MasterType=1
	
	UPDATE A SET A.GSTREGISTRATIONTYPE='Composition' FROM @RetailerGSTinfoExport A INNER JOIN
	(SELECT DISTINCT  R.RtrId as RtrId,
	ColumnValue
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='Composition' and ColumnValue='Yes') B ON A.RtrId=B.RtrId
	WHERE  MasterType=1

	RETURN
END
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='U' AND NAME='ProductTallyXmlExport')
DROP TABLE ProductTallyXmlExport
GO
CREATE TABLE ProductTallyXmlExport
(
ProductCode    varchar(200),
ProductName	Varchar(200),
LandingPrice Numeric(18,4),
Price Numeric(18,4),
EffectiveDate varchar(10),
Tax Varchar(25),
HsnCode Varchar(30),
CentralTax Numeric(10,2),
StateTax	Numeric(10,2),
IntegratedTax	 Numeric(10,2),
CessTax		Numeric(10,2),
TaxType Varchar(50),
TypeOfSupply Varchar(50)
)
GO
IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE XTYPE='P' AND NAME='Proc_ProductTallyXmlExport')
DROP PROCEDURE Proc_ProductTallyXmlExport
GO
--EXEC Proc_ProductTallyXmlExport
CREATE PROCEDURE [Proc_ProductTallyXmlExport]
AS
/***************************************************************************************************
* PROCEDURE	: Proc_ProductTallyXmlExport
* PURPOSE	: Returns the Product Master
* NOTES		:
* CREATED	: Murugan.R 16/10/2017 CCRSTGCP0370
* MODIFIED
* DATE			AUTHOR		CR/BZ		USER STORY ID		DESCRIPTION
*16/10/2017   Murugan.R		CR			CCRSTGCP0370		Nolock is Added
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
	TRUNCATE TABLE ProductTallyXmlExport	
	
	DECLARE @PrdBatTaxGrp AS INT
	DECLARE @RtrTaxGrp1 AS INT
	DECLARE @PurSeqId AS INT
	DECLARE @BillSeqId AS INT
	DECLARE @RtrTaxGrp AS INT		 
	DECLARE @TaxSlab  INT  
	DECLARE @MRP INT    
	DECLARE @TaxableAmount  NUMERIC(28,10)      
	DECLARE @ParTaxableAmount NUMERIC(28,10)      
	DECLARE @TaxPer   NUMERIC(38,2)     
	DECLARE @TaxPercentage   NUMERIC(38,5)   
	DECLARE @TaxId   INT 
	DECLARE @MaxSlno   INT
	DECLARE @MinSlno   INT
	DECLARE @Prdid INT
	DECLARE @TaxCode AS VARCHAR(50)
	SET @MinSlno=1
	
		DECLARE @TaxSettingDet TABLE       
		(      
		TaxSlab   INT,      
		ColNo   INT,      
		SlNo   INT,      
		BillSeqId  INT,      
		TaxSeqId  INT,      
		ColType   INT,       
		ColId   INT,      
		ColVal   NUMERIC(38,2),
		TaxCode Varchar(50)      
		) 
		CREATE TABLE #TempProductTax
		(
			Prdid INT,
			TaxId INT,
			TaxSlabId INT,
			TaxPercentage Numeric(5,2),
			TaxAmount Numeric (18,5)
		)
	
		CREATE TABLE #ProductLst
		(
			Slno INT IDENTITY(1,1),	
			TaxSeqId INT,	
			Prdid INT,
			RtrId INT
		)	
		
		CREATE TABLE #ProductZeroTax(
		TaxGroupId [int] NULL,
		--TaxCode Varchar(100),
		--TaxId INT,
		CentralTax [numeric](18, 5) NULL,
		StateTax [numeric](18, 5) NULL	,
		UTTax Numeric(18,5) NULL,
		IntegratedTax 	 [numeric](18, 5) NULL	,
		CessTax	[numeric](18, 5) NULL	
		) 
	
		CREATE TABLE #TableTax
		(
			RowId INT,
			TaxId INT,
			TaxCode Varchar(50)
		)	
		
		CREATE TABLE #RtrGroup
		(
			TaxSeqId INT,
			RtrId	INT,
			PrdId	INT
		)	
		
	SELECT Distinct Prdccode,ColumnValue as HSNCode
	INTO #ProductHsnCode
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Product R ON R.Prdid=UT.MasterRecordId
	WHERE U.MasterId=1 and ColumnName='HSN Code' 
	
	----Retailer Tax
	SELECT @RtrTaxGrp=TaxGroupId FROM TaxGroupSetting (NOLOCK) WHERE RtrGroup='RTRINTRA'
   
	INSERT INTO #RtrGroup(TaxSeqId,RtrId,PrdId)
	SELECT TaxSeqId,RtrId,PrdId FROM TaxSettingMaster WHERE      
	RtrId = @RtrTaxGrp 
	and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)

	INSERT INTO #ProductLst (TaxSeqId,Prdid,RtrId)
	SELECT Max(A.TaxSeqId),A.Prdid,A.RtrId		
	FROM #RtrGroup A INNER JOIN TaxSettingMaster B ON A.RtrId=B.RtrId and A.Prdid=B.Prdid
	GROUP BY A.Prdid,A.RtrId
	
    SELECT @MaxSlno=MAX(Slno) FROM #ProductLst
    WHILE @MinSlno<=@MaxSlno
    BEGIN
			
			DELETE FROM @TaxSettingDet	
			DELETE FROM #TableTax
			SELECT @PrdBatTaxGrp=Prdid, @RtrTaxGrp=RtrId FROM  #ProductLst WHERE Slno=@MinSlno
			--To Take the Batch TaxGroup Id      
							
			SELECT @BillSeqId = MAX(BillSeqId)  FROM BillSequenceMaster (NOLOCK)
			
			INSERT INTO #TableTax(	RowId,TaxId,TaxCode)	
			SELECT ROWID,Taxid,TaxCode 
			FROM TaxSettingDetail A (NOLOCK) INNER JOIN TaxConfiguration B (NOLOCK) ON B.TaxId=A.ColVal
			WHERE ColType = 1    AND ColId > 0  
			and TaxSeqId IN
			(Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE
			RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
			and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)   )
			
					
			INSERT INTO @TaxSettingDet (TaxSlab,ColNo,SlNo,BillSeqId,TaxSeqId,ColType,ColId,ColVal,TaxCode)      
			SELECT B.RowId,B.ColNo,B.SlNo,B.BillSeqId,B.TaxSeqId,B.ColType,B.ColId,B.ColVal  , TaxCode   
			FROM TaxSettingMaster A (NOLOCK) INNER JOIN      
			TaxSettingDetail B (NOLOCK) ON A.TaxSeqId = B.TaxSeqId 
			INNER JOIN #TableTax C (NOLOCK) ON C.RowId=B.RowId     
			AND B.BillSeqId=@BillSeqId  and Coltype IN(1,3)    
			WHERE A.RtrId = @RtrTaxGrp AND A.Prdid = @PrdBatTaxGrp     
			AND A.TaxSeqId in (Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE      
			RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
			and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)
			)   and  TaxCode IN('CGST','SGST','OutputSGST','OutputCGST','UTGST','OutputUTGST')
			
			SET @MRP=1
			TRUNCATE TABLE #TempProductTax
			DECLARE  CurTax CURSOR FOR      
				SELECT DISTINCT TaxSlab FROM @TaxSettingDet      
			OPEN CurTax        
			FETCH NEXT FROM CurTax INTO @TaxSlab      
			WHILE @@FETCH_STATUS = 0        
			BEGIN      
			SET @TaxableAmount = 0      
			--To Filter the Records Which Has Tax Percentage (>=0)      
			IF EXISTS (SELECT * FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
			AND ColId = 0 and ColVal >= 0)      
			BEGIN      
			--To Get the Tax Percentage for the selected slab      
			SELECT @TaxPer = ColVal,@TaxCode=TaxCode FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
			AND ColId = 0      
			--To Get the TaxId for the selected slab      
			SELECT @TaxId = Cast(ColVal as INT) FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
			AND ColId > 0      
			SET @TaxableAmount = ISNULL(@TaxableAmount,0) + @MRP 
			--To Get the Parent Taxable Amount for the Tax Slab      
			SELECT @ParTaxableAmount =  ISNULL(SUM(TaxAmount),0) FROM #TempProductTax A      
			INNER JOIN @TaxSettingDet B ON A.TaxId = B.ColVal and  
			B.ColType = 3 AND B.TaxSlab = @TaxSlab 
			If @ParTaxableAmount>0
			BEGIN
				Set @TaxableAmount=@ParTaxableAmount
			END 
			ELSE
			BEGIN
				Set @TaxableAmount = @TaxableAmount
			END    
			    
			INSERT INTO #TempProductTax (PrdId,TaxId,TaxSlabId,TaxPercentage,      
			TaxAmount)      
			SELECT @PrdBatTaxGrp,@TaxId,@TaxSlab,@TaxPer,      
			cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10))  
			
			IF NOT EXISTS(SELECT   'X' FROM #ProductZeroTax WHERE  TaxGroupId=@PrdBatTaxGrp)
			BEGIN			 
				INSERT INTO #ProductZeroTax(TaxGroupId,CentralTax,StateTax,UTTax,IntegratedTax,CessTax	)
				SELECT @PrdBatTaxGrp, 
				CASE WHEN @TaxCode IN('CGST','OutputCGST')
					THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
					ELSE 0 END as CentralTax,
				CASE WHEN @TaxCode IN('SGST','OutputSGST')
					THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
					ELSE 0 END as StateTax,
				CASE WHEN @TaxCode IN('UTGST','OutputUTGST')
					THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
					ELSE 0 END as UTTax	
					,0,0
			END	
			ELSE
			BEGIN
				UPDATE #ProductZeroTax SET 
				CentralTax=CASE	WHEN @TaxCode IN('CGST','OutputCGST')
								THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
								ELSE CentralTax END ,
				StateTax=CASE	WHEN @TaxCode IN('SGST','OutputSGST')
								THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
								ELSE StateTax END ,
					
				UTTax=CASE		WHEN @TaxCode IN('UTGST','OutputUTGST')
								THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
								ELSE UTTax END 
						
				WHERE 	TaxGroupId=@PrdBatTaxGrp 
				
			END 
			  
			END      
			FETCH NEXT FROM CurTax INTO @TaxSlab      
			END        
			CLOSE CurTax        
			DEALLOCATE CurTax     
				
			SET @MinSlno=@MinSlno+1	
END	

			DELETE FROM #RtrGroup
			DELETE FROM #ProductLst
		
			---Supplier Integreated Tax and CESS tax Only
			SELECT @RtrTaxGrp=TaxGroupId FROM TaxGroupSetting (NOLOCK) WHERE RtrGroup='SUPINTER'
			
			INSERT INTO #RtrGroup(TaxSeqId,RtrId,PrdId)
			SELECT TaxSeqId,RtrId,PrdId FROM TaxSettingMaster WHERE      
			RtrId = @RtrTaxGrp 
			and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)
			
			INSERT INTO #ProductLst (TaxSeqId,Prdid,RtrId)
			SELECT Max(A.TaxSeqId),A.Prdid,A.RtrId		
			FROM #RtrGroup A INNER JOIN TaxSettingMaster B ON A.RtrId=B.RtrId and A.Prdid=B.Prdid
			GROUP BY A.Prdid,A.RtrId
			
		
			SET @MinSlno=1
			SELECT @MaxSlno=MAX(Slno) FROM #ProductLst
			WHILE @MinSlno<=@MaxSlno
			BEGIN
					
					DELETE FROM @TaxSettingDet	
					DELETE FROM #TableTax
					SELECT @PrdBatTaxGrp=Prdid, @RtrTaxGrp=RtrId FROM  #ProductLst WHERE Slno=@MinSlno
					--To Take the Batch TaxGroup Id      
									
					SELECT @BillSeqId = MAX(BillSeqId)  FROM BillSequenceMaster (NOLOCK)
					
					INSERT INTO #TableTax(	RowId,TaxId,TaxCode)	
					SELECT ROWID,Taxid,TaxCode 
					FROM TaxSettingDetail A (NOLOCK) INNER JOIN TaxConfiguration B (NOLOCK) ON B.TaxId=A.ColVal
					WHERE ColType = 1    AND ColId > 0  
					and TaxSeqId IN
					(Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE
					RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
					and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)   )
					
							
					INSERT INTO @TaxSettingDet (TaxSlab,ColNo,SlNo,BillSeqId,TaxSeqId,ColType,ColId,ColVal,TaxCode)      
					SELECT B.RowId,B.ColNo,B.SlNo,B.BillSeqId,B.TaxSeqId,B.ColType,B.ColId,B.ColVal  , TaxCode   
					FROM TaxSettingMaster A (NOLOCK) INNER JOIN      
					TaxSettingDetail B (NOLOCK) ON A.TaxSeqId = B.TaxSeqId 
					INNER JOIN #TableTax C (NOLOCK) ON C.RowId=B.RowId     
					AND B.BillSeqId=@BillSeqId  and Coltype IN(1,3)    
					WHERE A.RtrId = @RtrTaxGrp AND A.Prdid = @PrdBatTaxGrp     
					AND A.TaxSeqId in (Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE      
					RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
					and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)
					)   and  TaxCode IN('InputIGST','IGST','InputGSTCess')
					
					SET @MRP=1
					TRUNCATE TABLE #TempProductTax
					DECLARE  CurTax CURSOR FOR      
						SELECT DISTINCT TaxSlab FROM @TaxSettingDet      
					OPEN CurTax        
					FETCH NEXT FROM CurTax INTO @TaxSlab      
					WHILE @@FETCH_STATUS = 0        
					BEGIN      
					SET @TaxableAmount = 0      
					--To Filter the Records Which Has Tax Percentage (>=0)      
					IF EXISTS (SELECT * FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId = 0 and ColVal >= 0)      
					BEGIN      
					--To Get the Tax Percentage for the selected slab      
					SELECT @TaxPer = ColVal,@TaxCode=TaxCode FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId = 0      
					--To Get the TaxId for the selected slab      
					SELECT @TaxId = Cast(ColVal as INT) FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId > 0      
					SET @TaxableAmount = ISNULL(@TaxableAmount,0) + @MRP 
					--To Get the Parent Taxable Amount for the Tax Slab      
					SELECT @ParTaxableAmount =  ISNULL(SUM(TaxAmount),0) FROM #TempProductTax A      
					INNER JOIN @TaxSettingDet B ON A.TaxId = B.ColVal and  
					B.ColType = 3 AND B.TaxSlab = @TaxSlab 
					If @ParTaxableAmount>0
					BEGIN
						Set @TaxableAmount=@ParTaxableAmount
					END 
					ELSE
					BEGIN
						Set @TaxableAmount = @TaxableAmount
					END    
					    
					INSERT INTO #TempProductTax (PrdId,TaxId,TaxSlabId,TaxPercentage,      
					TaxAmount)      
					SELECT @PrdBatTaxGrp,@TaxId,@TaxSlab,@TaxPer,      
					cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) 
					
					
					IF NOT EXISTS(SELECT   'X' FROM #ProductZeroTax WHERE  TaxGroupId=@PrdBatTaxGrp)
					BEGIN			 
						INSERT INTO #ProductZeroTax(TaxGroupId,IntegratedTax,CessTax)
						SELECT @PrdBatTaxGrp,
						CASE WHEN @TaxCode IN('InputIGST','IGST')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							ELSE 0 END as IntegratedTax,
						CASE WHEN @TaxCode IN('InputGSTCess')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							ELSE 0 END as CessTax	
					END	
					ELSE
					BEGIN
						UPDATE #ProductZeroTax SET 
						IntegratedTax=CASE WHEN @TaxCode IN('InputIGST','IGST')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							 ELSE IntegratedTax END ,
						CessTax=CASE WHEN @TaxCode IN('InputGSTCess')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							ELSE CessTax END 
						WHERE 	TaxGroupId=@PrdBatTaxGrp 
						
					END 
					  
					END      
					FETCH NEXT FROM CurTax INTO @TaxSlab      
					END        
					CLOSE CurTax        
					DEALLOCATE CurTax     
						
					SET @MinSlno=@MinSlno+1	
		END
		
		
			DELETE FROM #RtrGroup
			DELETE FROM #ProductLst
		
			---Supplier Integreated Tax and CESS tax Only
			SELECT @RtrTaxGrp=TaxGroupId FROM TaxGroupSetting (NOLOCK) WHERE RtrGroup='SUPINTRA'
			
			INSERT INTO #RtrGroup(TaxSeqId,RtrId,PrdId)
			SELECT TaxSeqId,RtrId,PrdId FROM TaxSettingMaster WHERE      
			RtrId = @RtrTaxGrp 
			and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)
			
			INSERT INTO #ProductLst (TaxSeqId,Prdid,RtrId)
			SELECT Max(A.TaxSeqId),A.Prdid,A.RtrId		
			FROM #RtrGroup A INNER JOIN TaxSettingMaster B ON A.RtrId=B.RtrId and A.Prdid=B.Prdid
			GROUP BY A.Prdid,A.RtrId
			
		
			SET @MinSlno=1
			SELECT @MaxSlno=MAX(Slno) FROM #ProductLst
			WHILE @MinSlno<=@MaxSlno
			BEGIN
					
					DELETE FROM @TaxSettingDet	
					DELETE FROM #TableTax
					SELECT @PrdBatTaxGrp=Prdid, @RtrTaxGrp=RtrId FROM  #ProductLst WHERE Slno=@MinSlno
					--To Take the Batch TaxGroup Id      
									
					SELECT @BillSeqId = MAX(BillSeqId)  FROM BillSequenceMaster (NOLOCK)
					
					INSERT INTO #TableTax(	RowId,TaxId,TaxCode)	
					SELECT ROWID,Taxid,TaxCode 
					FROM TaxSettingDetail A (NOLOCK) INNER JOIN TaxConfiguration B (NOLOCK) ON B.TaxId=A.ColVal
					WHERE ColType = 1    AND ColId > 0  
					and TaxSeqId IN
					(Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE
					RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
					and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)   )
					
							
					INSERT INTO @TaxSettingDet (TaxSlab,ColNo,SlNo,BillSeqId,TaxSeqId,ColType,ColId,ColVal,TaxCode)      
					SELECT B.RowId,B.ColNo,B.SlNo,B.BillSeqId,B.TaxSeqId,B.ColType,B.ColId,B.ColVal  , TaxCode   
					FROM TaxSettingMaster A (NOLOCK) INNER JOIN      
					TaxSettingDetail B (NOLOCK) ON A.TaxSeqId = B.TaxSeqId 
					INNER JOIN #TableTax C (NOLOCK) ON C.RowId=B.RowId     
					AND B.BillSeqId=@BillSeqId  and Coltype IN(1,3)    
					WHERE A.RtrId = @RtrTaxGrp AND A.Prdid = @PrdBatTaxGrp     
					AND A.TaxSeqId in (Select ISNULL(Max(TaxSeqId),0) FROM TaxSettingMaster WHERE      
					RtrId = @RtrTaxGrp AND Prdid = @PrdBatTaxGrp
					and CONVERT(DATETIME,CONVERT(VARCHAR(10),EffectiveFrom,121),121)<=CONVERT(DATETIME,CONVERT(VARCHAR(10),GETDATE(),121),121)
					)   and  TaxCode IN('InputGSTCess')
					
					SET @MRP=1
					TRUNCATE TABLE #TempProductTax
					DECLARE  CurTax CURSOR FOR      
						SELECT DISTINCT TaxSlab FROM @TaxSettingDet      
					OPEN CurTax        
					FETCH NEXT FROM CurTax INTO @TaxSlab      
					WHILE @@FETCH_STATUS = 0        
					BEGIN      
					SET @TaxableAmount = 0      
					--To Filter the Records Which Has Tax Percentage (>=0)      
					IF EXISTS (SELECT * FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId = 0 and ColVal >= 0)      
					BEGIN      
					--To Get the Tax Percentage for the selected slab      
					SELECT @TaxPer = ColVal,@TaxCode=TaxCode FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId = 0      
					--To Get the TaxId for the selected slab      
					SELECT @TaxId = Cast(ColVal as INT) FROM @TaxSettingDet WHERE TaxSlab = @TaxSlab AND ColType = 1      
					AND ColId > 0      
					SET @TaxableAmount = ISNULL(@TaxableAmount,0) + @MRP 
					--To Get the Parent Taxable Amount for the Tax Slab      
					SELECT @ParTaxableAmount =  ISNULL(SUM(TaxAmount),0) FROM #TempProductTax A      
					INNER JOIN @TaxSettingDet B ON A.TaxId = B.ColVal and  
					B.ColType = 3 AND B.TaxSlab = @TaxSlab 
					If @ParTaxableAmount>0
					BEGIN
						Set @TaxableAmount=@ParTaxableAmount
					END 
					ELSE
					BEGIN
						Set @TaxableAmount = @TaxableAmount
					END    
					    
					INSERT INTO #TempProductTax (PrdId,TaxId,TaxSlabId,TaxPercentage,      
					TaxAmount)      
					SELECT @PrdBatTaxGrp,@TaxId,@TaxSlab,@TaxPer,      
					cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) 
					
					
					IF NOT EXISTS(SELECT   'X' FROM #ProductZeroTax WHERE  TaxGroupId=@PrdBatTaxGrp)
					BEGIN			 
						INSERT INTO #ProductZeroTax(TaxGroupId,CessTax)
						SELECT @PrdBatTaxGrp,						
						CASE WHEN @TaxCode IN('InputGSTCess')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							ELSE 0 END as CessTax	
					END	
					ELSE
					BEGIN
						UPDATE #ProductZeroTax SET 
						CessTax=CASE WHEN @TaxCode IN('InputGSTCess')
							THEN Cast((cast(@TaxableAmount*(@TaxPer / 100 ) AS NUMERIC(28,10)) *100) as Numeric(18,5))
							ELSE CessTax END 
						WHERE 	TaxGroupId=@PrdBatTaxGrp 
						
					END 
					  
					END      
					FETCH NEXT FROM CurTax INTO @TaxSlab      
					END        
					CLOSE CurTax        
					DEALLOCATE CurTax     
						
					SET @MinSlno=@MinSlno+1	
		END
		


		INSERT INTO ProductTallyXmlExport(ProductCode,ProductName,LandingPrice,Price,
		EffectiveDate,Tax,HsnCode,CentralTax,StateTax,IntegratedTax,CessTax,TaxType,TypeOfSupply)
		SELECT DISTINCT Prdccode  as ProductCode,PrdName+'~'+Prdccode as ProductName,
		PBD1.PrdbatDetailValue as LandingPrice,PBD.PrdbatDetailValue as Price,Convert(varchar(10),MnfDate,105) as EffectiveDate,
		Convert(nvarchar(10),'NULL') AS Tax,'' as HsnCode,0 as CentralTax,0 as StateTax,0 as IntegratedTax,0 as CessTax,
		'Taxable' as TaxType,'Goods'
		FROM  Product P WITH (NOLOCK)
		INNER JOIN ProductBatch PB WITH (NOLOCK) on PB.PrdId=P.PrdId
		INNER JOIN ProductbatchDetails PBD WITH (NOLOCK) on pbd.Prdbatid=PB.PrdBatId and PBD.DefaultPrice=1 
		INNER JOIN BatchCreation BC WITH (NOLOCK) On BC.SlNo=PBD.SLNo AND BC.SelRte=1
		INNER JOIN ProductbatchDetails PBD1 WITH (NOLOCK) on pbd1.Prdbatid=PB.PrdBatId and PBD1.DefaultPrice=1 
		INNER JOIN BatchCreation BC1 WITH (NOLOCK) On BC1.SlNo=PBD1.SLNo AND BC1.ListPrice=1
		Order by ProductCode
		
		UPDATE A SET A.CentralTax=ISNULL(B.CentralTax,0),A.StateTax=ISNULL(B.StateTax,0)+ISNULL(B.UTTax,0), 
		A.IntegratedTax=ISNULL(B.IntegratedTax,0) ,A.CessTax=ISNULL(B.CessTax,0)
		FROM ProductTallyXmlExport A
		INNER JOIN Product C ON  A.ProductCode=C.Prdccode
		INNER JOIN #ProductZeroTax B ON C.TaxGroupId=B.TaxGroupId
		
		UPDATE A SET A.CessTax=ISNULL(B.CessTax,0)
		FROM ProductTallyXmlExport A
		INNER JOIN Product C ON  A.ProductCode=C.Prdccode
		INNER JOIN #ProductZeroTax B ON C.TaxGroupId=B.TaxGroupId
		
		UPDATE A SET A.HsnCode=B.HSNCode FROM  ProductTallyXmlExport A
		INNER JOIN #ProductHsnCode B ON  A.ProductCode=B.Prdccode 
		
		UPDATE ProductTallyXmlExport SET TaxType='Nil Rated'
		WHERE (CentralTax+StateTax+IntegratedTax+CessTax)=0
		 
		
		
		SELECT Max(ServiceTaxSeqId) as ServiceTaxSeqId,ServiceGroupId 
		INTO #ServiceSeq
		FROM ServiceTaxGroupSetting
		GROUP BY ServiceGroupId
		
		INSERT INTO ProductTallyXmlExport(ProductCode,ProductName,LandingPrice,Price,
		EffectiveDate,Tax,HsnCode,CentralTax,StateTax,IntegratedTax,CessTax,TaxType,TypeOfSupply)
		SELECT SerCode,SerACName,0,0,CONVERT(DATETIME,CONVERT(VARCHAR(10),Getdate(),121),121),0,SerACCode,SUM(CentralTax) as CentralTax,
		SUM(StateTax+UTTax) as StateTax,SUM(IntegratedTax) as IntegratedTax,0 as CessTax,'Taxable' as TaxType,
		'Services'
		FROM (
			SELECT SerCode,SerACName,SerACCode,	
			CASE WHEN TaxCode IN('CGST','OutputCGST','InputCGST')
			THEN ServiceTaxPer
			ELSE 0 END as CentralTax,
			CASE WHEN TaxCode IN('SGST','OutputSGST','InputSGST')
			THEN ServiceTaxPer
			ELSE 0 END as StateTax,
			CASE WHEN TaxCode IN('UTGST','OutputUTGST','InputUTGST')
			THEN ServiceTaxPer
			ELSE 0 END as UTTax	,
			CASE WHEN TaxCode IN('InputIGST','IGST','OutputIGST')
			THEN ServiceTaxPer
			ELSE 0 END as IntegratedTax			
			FROM ServiceMaster A (NOLOCK) 
			INNER JOIN ServiceTaxGroupMaster B (NOLOCK) ON A.TaxGroupId=ServiceGroupId
			INNER JOIN ServiceTaxGroupSetting C (NOLOCK) ON C.ServiceGroupId=B.ServiceGroupId
			INNER JOIN #ServiceSeq D ON D.ServiceGroupId=C.ServiceGroupId and D.ServiceGroupId=B.ServiceGroupId and D.ServiceTaxSeqId=C.ServiceTaxSeqid
			INNER JOIN TaxConfiguration E (NOLOCK) ON E.TaxId=C.TaxId
		)X GROUP BY 	SerCode,SerACName,SerACCode
		
		UPDATE ProductTallyXmlExport SET IntegratedTax=CentralTax+StateTax WHERE IntegratedTax=0
	
RETURN
END
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_ServiceInvoiceVoucherExportNode1')
DROP FUNCTION Fn_ServiceInvoiceVoucherExportNode1
GO
--SELECT * FROM Serviceclaimapproval
--SELECT * FROM Fn_ServiceInvoiceVoucherExportNode1('GSTSALES','LCSC036551700001','LCSC036551700001')
--SELECT * FROM Fn_VoucherExportNode1('SALES','SAL1710487','N1703809')
CREATE FUNCTION [Fn_ServiceInvoiceVoucherExportNode1]    
(    
 @sVocType  AS VARCHAR(200),    
 @PiValue  AS VARCHAR(200),    
 @VoucherRefNo AS VARCHAR(200)    
)    
RETURNS @VoucherExportNode1 TABLE    
(    
 LedgerName VARCHAR(200),    
 Amount  NUMERIC(18,2),    
 Coaid  INT    
)    
AS    
/***************************************************************************************************    
* FUNCTION : Fn_ServiceInvoiceVoucherExportNode1    
* PURPOSE : Returns the Account Details of Voucher    
* NOTES  :    
* CREATED : Murugan.R 22/11/2017  
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 22/11/2017      Murugan.R		CR				CCRSTLOR0261				Service Invoice Voucher Extract
**************************************************************************************************/    
BEGIN 
		IF UPPER(@sVocType)='GSTSALES'
		BEGIN
			INSERT INTO @VoucherExportNode1(LedgerName,Amount,Coaid)
			SELECT DISTINCT ISNULL(CAST(D.SpmName+ '~' +  D.SpmCode AS Varchar(200)),B.AcName) AS LedgerName ,
			(-1*ISNULL(A.TotalAmount,0)) AS Amount,D.CoaId
			FROM ServiceInvoiceHd A (NOLOCK) 
			INNER JOIN Supplier D (NOLOCK) ON A.ServiceToId=D.SpmId  
			INNER JOIN CoaMaster B (NOLOCK) ON D.CoaId=B.CoaId
			WHERE ServiceInvRefNo=@VoucherRefNo
			
				
			
			INSERT INTO @VoucherExportNode1(LedgerName,Amount,Coaid) 			
			SELECT LedgerName,SUM(Amount) as TaxableAmount,CoaId
			FROM(   
					SELECT AcName +' '+Convert(nvarchar(10),Convert(Numeric(18,2),SUM(Taxperc)))+'%' as LedgerName,
					CONVERT(NUMERIC(18,2),SUM(DISTINCT A.TaxableAmount)) as Amount,C.CoaId
					FROM ServiceInvoiceTaxDetails A(NOLOCK)     
					INNER JOIN ServiceInvoiceHd B(NOLOCK) ON A.ServiceInvId = B.ServiceInvId 
					INNER JOIN ClaimGroupMaster C ON C.ClmGrpId= B.ClmGrpId  
					INNER JOIN COAMaster CM ON CM.CoaId= C.CoaId   
					WHERE A.TaxableAmount > 0  
					AND B.ServiceInvRefNo = @VoucherRefNo
					GROUP BY A.RowNo,CM.AcName, C.CoaId   
				) X GROUP BY 	LedgerName,CoaId
		
			
		END	
		
		IF UPPER(@sVocType)='GSTPURCHASE'
		BEGIN
			INSERT INTO @VoucherExportNode1(LedgerName,Amount,Coaid)
			SELECT DISTINCT ISNULL(CAST(D.CmpRtrCode+ '~' +  D.RtrName   AS Varchar(200)),B.AcName) AS LedgerName ,
			(ISNULL(A.TotalAmount,0)) AS Amount,D.CoaId
			FROM ServiceInvoiceHd A (NOLOCK) 
			INNER JOIN Retailer D (NOLOCK) ON A.ServiceFromId=D.RtrId  
			INNER JOIN CoaMaster B (NOLOCK) ON D.CoaId=B.CoaId
			WHERE  ServiceInvRefNo=@VoucherRefNo
			
			
			INSERT INTO @VoucherExportNode1(LedgerName,Amount,Coaid) 
			SELECT LedgerName,-1*SUM(Amount) as TaxableAmount,CoaId
			FROM(   
					SELECT AcName +' '+Convert(nvarchar(10),Convert(Numeric(18,2),SUM(Taxperc)))+'%' as LedgerName,
					CONVERT(NUMERIC(18,2),SUM(DISTINCT A.TaxableAmount)) as Amount,C.CoaId
					FROM ServiceInvoiceTaxDetails A(NOLOCK)     
					INNER JOIN ServiceInvoiceHd B(NOLOCK) ON A.ServiceInvId = B.ServiceInvId 
					INNER JOIN ClaimGroupMaster C ON C.ClmGrpId= B.ClmGrpId  
					INNER JOIN COAMaster CM ON CM.CoaId= C.CoaId   
					WHERE A.TaxableAmount > 0 					
					AND B.ServiceInvRefNo = @VoucherRefNo
					GROUP BY A.RowNo,CM.AcName, C.CoaId 
				)X GROUP BY LedgerName,CoaId	  
		END	
			

RETURN    
END 
GO
IF EXISTS(SELECT 'X' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='Fn_ServiceInvoiceVoucherExportNode2')
DROP FUNCTION Fn_ServiceInvoiceVoucherExportNode2
GO
--SELECT * FROM [dbo].[Fn_ServiceInvoiceVoucherExportNode2]('GSTSALES','LCSC036551700001','LCSC036551700001')
--SELECT * FROM [dbo].[Fn_VoucherExportNode2]('IDT','PUR1702478','TE.50354')
CREATE FUNCTION [Fn_ServiceInvoiceVoucherExportNode2]
(
	@sVocType		AS VARCHAR(200),
	@PiValue		AS VARCHAR(200),
	@VoucherRefNo	AS Varchar(200)
)
RETURNS @VoucherExportNode2 TABLE
(
	LedgerName	  VARCHAR(50),
	TaxType       VARCHAR(50),
	TaxRate       VARCHAR(10),
	Amount		  NUMERIC(18,2),
	AssableAmount NUMERIC(18,2),
	Taxid       INT
	
)
AS
/***************************************************************************************************
* FUNCTION	: Fn_ServiceInvoiceVoucherExportNode2
* PURPOSE	: Returns the Tax Bifurication details
* NOTES		:
* CREATED	: Murugan.R 22/11/2017
* MODIFIED
* DATE            AUTHOR        CR/BZ			USERT STORY ID				DESCRIPTION
* 02/11/2017    Murugan.R		CR				CCRSTLOR0261				Tax Split For Service Invoice
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN
DECLARE @Amount1 NUMERIC(18,2)
DECLARE @Amount2 NUMERIC(18,2)
DECLARE @Diff NUMERIC(18,2)
DECLARE @TempVoucherExportNode TABLE
(
	LedgerName	  VARCHAR(50),
	TaxType       VARCHAR(50),
	TaxRate       VARCHAR(10),
	Amount		  NUMERIC(18,4),
	AssableAmount NUMERIC(18,4),	
	Taxid       INT	
)


		INSERT INTO @VoucherExportNode2
		SELECT LedgerName,TaxType,TaxRate,CONVERT(NUMERIC(18,2),-1*SUM(Amount)) as Amount,CONVERT(NUMERIC(18,2),SUM(AssableAmount))AssableAmount,Taxid 
		FROM 
		 (

			SELECT TaxCode+' '+CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc))+'%' AS LedgerName,TaxCode AS TaxType,
			CONVERT(NVARCHAR(10),CONVERT(NUMERIC(18,2),Taxperc)) AS TaxRate,CONVERT(NUMERIC(18,2),TaxAmount) AS Amount,
			CONVERT(NUMERIC(18,2),TaxableAmount) AS AssableAmount,Tg.Taxid 
			FROM ServiceInvoiceTaxDetails SIPT WITH (NOLOCK) 
			INNER JOIN ServiceInvoiceHd SI WITH (NOLOCK) ON SI.ServiceInvId=SIPT.ServiceInvId
			INNER JOIN TaxConfiguration Tg WITH (NOLOCK) ON TG.Taxid=SIPT.Taxid 
			WHERE Si.ServiceInvRefNo=@VoucherRefNo and SIPT.TaxableAmount>0 
			

		) A 
		GROUP BY LedgerName,TaxType,TaxRate,Taxid
		ORDER BY taxid		 			

RETURN
END
GO
IF EXISTS(SELECT 'x' FROM SYSOBJECTS WHERE XTYPE='TF' AND NAME='FN_VoucherServiceInvoiceGSTInfoNode3')
DROP FUNCTION FN_VoucherServiceInvoiceGSTInfoNode3
GO
--SELECT * FROM DBO.FN_VoucherServiceInvoiceGSTInfoNode3 ('','SVI17000005','SVI17000005')
CREATE FUNCTION [FN_VoucherServiceInvoiceGSTInfoNode3](@VocType as Varchar(100),@VoucherNo Varchar(100),@VoucherRefNo Varchar(100))  
RETURNS @VoucherExport TABLE
(	
	STATENAME		Varchar(150),
	PARTYGSTIN		Varchar(30),
	PLACEOFSUPPLY	Varchar(150),
	CONSIGNEESTATENAME Varchar(150),
	CONSIGNEEGSTIN	Varchar(30),
	ADDRESS1		Varchar(200),
	ADDRESS2		Varchar(200),
	ADDRESS3		Varchar(200)
)
AS
/***************************************************************************************************
* FUNCTION	: FN_VoucherServiceInvoiceGSTInfoNode3
* PURPOSE	: Returns the Gst Information
* NOTES		:
* CREATED	: Murugan.R - 22/11/2017 USERSTORYID CCRSTLOR0261
* MODIFIED
* DATE            AUTHOR       CR/BZ	USERSTORYID		DESCRIPTION
-------------------------------------------------------------------------------------------------
**************************************************************************************************/
BEGIN

	DECLARE @RetailerGSTIN TABLE
	(
		RtrId INT,
		GSTIN Varchar(30)
	)
	DECLARE @RetailerState TABLE
	(
		RtrId INT,
		Statename Varchar(150)
	)
	
	DECLARE @SupplierGSTIN TABLE
	(
		SpmId INT,
		GSTIN Varchar(30)
	)
	DECLARE @SupplierState TABLE
	(
		SpmId INT,
		Statename Varchar(150)
	)
	DECLARE @DistStatName Varchar(150)
	DECLARE @DistGSTTIN Varchar(30)
	SET @DistStatName='Null'
	SET @DistGSTTIN='Null'
	
	SELECT @DistGSTTIN=ColumnValue		
	FROM UdcHD A (NOLOCK)
	INNER JOIN UdcMaster B (NOLOCK) ON A.MasterId=B.MasterId
	INNER JOIN UdcDetails C (NOLOCK) ON C.MasterId=B.MasterId and C.MasterId=A.MasterId
	and C.UdcMasterId=B.UdcMasterId 
	INNER JOIN Distributor P (NOLOCK) ON P.DistributorId=C.MasterRecordId
	WHERE A.MasterName='Distributor Info Master' and B.ColumnName='GSTIN'
	
		
	SELECT @DistStatName=
	Case WHEN ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	ColumnValue	END	
	FROM UdcHD A (NOLOCK)
	INNER JOIN UdcMaster B (NOLOCK) ON A.MasterId=B.MasterId
	INNER JOIN UdcDetails C (NOLOCK) ON C.MasterId=B.MasterId and C.MasterId=A.MasterId
	and C.UdcMasterId=B.UdcMasterId 
	INNER JOIN Distributor P (NOLOCK) ON P.DistributorId=C.MasterRecordId
	INNER JOIN StateMaster S (NOLOCK) ON S.StateName=C.ColumnValue
	WHERE A.MasterName='Distributor Info Master' and B.ColumnName='State Name'
		
	INSERT INTO @RetailerGSTIN(RtrId,GSTIN)
	SELECT DISTINCT  R.RtrId as RtrId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='GSTIN'
	
	INSERT INTO @RetailerState(RtrId,Statename)
	SELECT DISTINCT  R.RtrId as RtrId,
	Case WHEN UT.ColumnValue ='Orissa' THEN 'Odisha' 
		 WHEN UT.ColumnValue ='Andaman and Nicobar Islands' THEN 'Andaman & Nicobar Islands'
		 WHEN UT.ColumnValue ='Dadra and Nagar Haveli' THEN 'Dadra & Nagar Haveli'
		 WHEN UT.ColumnValue ='Daman and Diu' THEN 'Daman & Diu'
		 WHEN UT.ColumnValue ='Jammu and Kashmir' THEN 'Jammu & Kashmir'
	ELSE 	UT.ColumnValue	END		
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Retailer R ON R.RtrId=UT.MasterRecordId
	WHERE U.MasterId=2 and ColumnName='State Name'
	
	INSERT INTO @SupplierGSTIN(SpmId,GSTIN)
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN'
	UNION
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='GSTIN'
	
	
	INSERT INTO @SupplierState(SpmId,Statename)
	SELECT DISTINCT  R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN Supplier R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name'
	UNION
	SELECT DISTINCT   R.SpmId as SpmId,UT.ColumnValue 
	FROM UDCHD U 
	INNER JOIN UDCMASTER UD ON U.MasterId=UD.MasterId
	INNER JOIN UdcDetails UT ON UT.MasterId=UD.MasterId and UT.UdcMasterId=UD.UdcMasterId
	INNER JOIN IDTMaster R ON R.SpmId=UT.MasterRecordId
	WHERE U.MasterId=8 and ColumnName='State Name'
	
	
	IF UPPER(@VocType)='GSTSALES'
	BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,ADDRESS1,ADDRESS2,ADDRESS3)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,SpmAdd1 as ADDRESS1,
		ISNULL(SpmAdd2,'Null') as ADDRESS2,ISNULL(SpmAdd3,'Null') as ADDRESS3
		FROM ServiceInvoiceHd A (NOLOCK) 
		INNER JOIN Supplier S ON S.SpmId=A.ServiceToId	
		LEFT OUTER JOIN @SupplierGSTIN RG ON A.ServiceToId=RG.SpmId and S.SpmId=RG.SpmId
		LEFT OUTER JOIN @SupplierState RS ON A.ServiceToId=RS.SpmId and S.SpmId=RS.SpmId
		WHERE A.ServiceInvRefNo=@VoucherRefNo	
	END
	IF UPPER(@VocType)='GSTPURCHASE'
	BEGIN
		INSERT INTO @VoucherExport(STATENAME,PARTYGSTIN,PLACEOFSUPPLY,CONSIGNEESTATENAME,CONSIGNEEGSTIN,ADDRESS1,ADDRESS2,ADDRESS3)
		SELECT DISTINCT ISNULL(RS.STATENAME,'Null'),ISNULL(RG.GSTIN,'Null'),ISNULL(RS.STATENAME,'Null'),
		@DistStatName as CONSIGNEESTATENAME,@DistGSTTIN as CONSIGNEEGSTIN,RtrAdd1 as ADDRESS1,
		ISNULL(RtrAdd2,'Null') as ADDRESS2,ISNULL(RtrAdd3,'Null') as ADDRESS3
		FROM ServiceInvoiceHd A (NOLOCK) 
		INNER JOIN Retailer S ON S.RtrId=A.ServiceFromId	
		LEFT OUTER JOIN @RetailerGSTIN RG ON A.ServiceFromId=RG.RtrId and S.RtrId=RG.RtrId
		LEFT OUTER JOIN @RetailerState RS ON A.ServiceFromId=RS.RtrId and S.RtrId=RS.RtrId
		WHERE A.ServiceInvRefNo=@VoucherRefNo	
	END
RETURN
END
GO
DELETE FROM TallyVoucherType WHERE Voucher IN('IDT','IDT In')
INSERT INTO TallyVoucherType(Slno,Voucher)
SELECT MAX(SlNo)+1,'IDT' FROM TallyVoucherType
INSERT INTO TallyVoucherType(Slno,Voucher)
SELECT MAX(SlNo)+1,'IDT In' FROM TallyVoucherType
GO
--UPDATE UtilityProcess SET VersionId = '2.0.0.202' WHERE ProcId = 1 AND ProcessName = 'Core Stocky.Exe'
--GO
--DELETE FROM APPTITLE
--INSERT INTO APPTITLE SELECT 'CoreStocky 202' ,'202'
--GO
--IF NOT EXISTS (SELECT * FROM Hotfixlog where fixid = 202)
--INSERT INTO Hotfixlog(fixid,fixtype,releasedon,fixedon,fixedby,errorsfixed,UploadFlag) 
--VALUES(202,'D','2017-11-07',GETDATE(),1,'Tally Integration -202','N')